name: RJIT
on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**.md'
      - '**.rdoc'
      - '**/.document'
      - '**.[1-8]'
      - '**.ronn'
      - '.*.yml'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '**.md'
      - '**.rdoc'
      - '**/.document'
      - '**.[1-8]'
      - '**.ronn'
      - '.*.yml'
  merge_group:

concurrency:
  group: ${{ github.workflow }} / ${{ startsWith(github.event_name, 'pull') && github.ref_name || github.sha }}
  cancel-in-progress: ${{ startsWith(github.event_name, 'pull') }}

permissions:
  contents: read

jobs:
  make:
    strategy:
      matrix:
        # main variables included in the job name
        test_task: [check]
        run_opts: ['--rjit-call-threshold=1']
        arch: ['']
      fail-fast: false

    env:
      GITPULLOPTIONS: --no-tags origin ${{ github.ref }}
      RUBY_DEBUG: ci
      SETARCH: ${{ matrix.arch && format('setarch {0}', matrix.arch) }}

    runs-on: ubuntu-22.04

    if: >-
      ${{!(false
      || contains(github.event.head_commit.message, '[DOC]')
      || contains(github.event.head_commit.message, 'Document')
      || contains(github.event.pull_request.title, '[DOC]')
      || contains(github.event.pull_request.title, 'Document')
      || contains(github.event.pull_request.labels.*.name, 'Document')
      || (github.event_name == 'push' && github.actor == 'dependabot[bot]')
      )}}

    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: /.github

      - uses: ./.github/actions/setup/ubuntu

      - uses: ./.github/actions/setup/directories
        with:
          srcdir: src
          builddir: build
          makeup: true

      - name: Run configure
        env:
          arch: ${{ matrix.arch }}
        run: >-
          $SETARCH ../src/configure -C --disable-install-doc cppflags=-DRUBY_DEBUG
          ${arch:+--target=$arch-$OSTYPE --host=$arch-$OSTYPE}

      - run: $SETARCH make

      - name: make test
        run: |
          $SETARCH make -s test RUN_OPTS="$RUN_OPTS"
        timeout-minutes: 30
        env:
          GNUMAKEFLAGS: ''
          RUBY_TESTOPTS: '-v --tty=no'
          RUN_OPTS: ${{ matrix.run_opts }}

      - name: make test-all
        run: |
          $SETARCH make -s test-all RUN_OPTS="$RUN_OPTS"
        timeout-minutes: 40
        env:
          GNUMAKEFLAGS: ''
          RUBY_TESTOPTS: '-q --tty=no'
          RUN_OPTS: ${{ matrix.run_opts }}

      - name: make test-spec
        run: |
          $SETARCH make -s test-spec RUN_OPTS="$RUN_OPTS"
        timeout-minutes: 10
        env:
          GNUMAKEFLAGS: ''
          RUN_OPTS: ${{ matrix.run_opts }}

      - uses: ./.github/actions/slack
        with:
          label: ${{ matrix.run_opts }}
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: ${{ failure() }}

defaults:
  run:
    working-directory: build
