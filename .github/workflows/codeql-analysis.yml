name: "Code scanning - action"

on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**.md'
      - '**.rdoc'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '**.md'
      - '**.rdoc'
  schedule:
    - cron: '0 12 * * 4'

concurrency:
  group: ${{ github.workflow }} / ${{ startsWith(github.event_name, 'pull') && github.ref_name || github.sha }}
  cancel-in-progress: ${{ startsWith(github.event_name, 'pull') }}

jobs:
  CodeQL-Build:

    # CodeQL runs on ubuntu-latest and windows-latest
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, '[DOC]') && !contains(github.event.pull_request.labels.*.name, 'Documentation') }}

    env:
      enable_install_doc: no

    steps:
    - name: Install libraries
      run: |
        set -x
        sudo apt-get update -q || :
        sudo apt-get install --no-install-recommends -q -y build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev bison autoconf ruby

    - name: Checkout repository
      uses: actions/checkout@v3

    - uses: actions/cache@v3
      with:
        path: .downloaded-cache
        key: downloaded-cache

    - name: Remove an obsolete rubygems vendored file
      run: sudo rm /usr/lib/ruby/vendor_ruby/rubygems/defaults/operating_system.rb

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        config-file: ./.github/codeql/codeql-config.yml

    - name: Set ENV
      run: echo "GNUMAKEFLAGS=-j$((1 + $(nproc --all)))" >> $GITHUB_ENV

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
