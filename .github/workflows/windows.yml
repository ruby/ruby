name: Windows
on: [push, pull_request]
jobs:
  make:
    strategy:
      matrix:
        test_task: [test]
        os: [windows-2019]
        vs: [2019]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/cache@v1
        with:
          path: C:\vcpkg\downloads
          key: ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-
            ${{ runner.os }}-vcpkg-download-
      - name: Install libraries with vcpkg
        run: |
          vcpkg --triplet x64-windows install readline zlib
      - uses: actions/cache@v1
        with:
          path: C:\Users\runneradmin\AppData\Local\Temp\chocolatey
          key: ${{ runner.os }}-chocolatey-${{ matrix.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-chocolatey-${{ matrix.os }}-
            ${{ runner.os }}-chocolatey-
      - name: Install libraries with chocolatey
        run: |
          choco install --no-progress openssl winflexbison3
      # Not using official actions/checkout because it's unstable and sometimes doesn't work for a fork.
      - name: Checkout ruby
        run: |
          git clone --single-branch --shallow-since=yesterday --branch=${GITHUB_REF#refs/heads/} https://github.com/${{ github.repository }} src
          git -C src reset --hard ${{ github.sha }}
        if: github.event_name == 'push'
        shell: bash
      - name: Checkout a pull request
        run: |
          git clone --single-branch --depth=50 --branch=${{ github.event.pull_request.head.ref }} https://github.com/${{ github.event.pull_request.head.repo.full_name }} src
          git -C src reset --hard ${{ github.event.pull_request.head.sha }}
        if: github.event_name == 'pull_request'
      - run: ./src/tool/actions-commit-info.sh
        shell: bash
        id: commit_info
      - run: md build
        shell: cmd
      - name: Configure
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\${{ matrix.vs }}\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          ../src/win32/configure.bat --disable-install-doc --without-ext=+,dbm,gdbm --enable-bundled-libffi --with-opt-dir=C:/vcpkg/installed/x64-windows --with-openssl-dir="C:/Program Files/OpenSSL-Win64"
        working-directory: build
        shell: cmd
      - name: nmake
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\${{ matrix.vs }}\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set YACC=win_bison
          echo on
          nmake up
          nmake extract-gems
          nmake
        working-directory: build
        shell: cmd
      - name: nmake test
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\${{ matrix.vs }}\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          nmake ${{ matrix.test_task }}
        working-directory: build
        shell: cmd
      - uses: k0kubun/action-slack@v2.0.0
        with:
          payload: |
            {
              "ci": "GitHub Actions",
              "env": "${{ matrix.os }} / ${{ matrix.test_task }}",
              "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "commit": "${{ github.sha }}",
              "branch": "${{ github.ref }}".split('/').reverse()[0]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: failure() && github.event_name == 'push'
