name: bundled_gems

on:
  push:
    paths:
      - '.github/workflows/bundled_gems.yml'
      - 'gems/bundled_gems'
  pull_request:
    paths:
      - '.github/workflows/bundled_gems.yml'
      - 'gems/bundled_gems'
  schedule:
    - cron: '45 6 * * *'
  workflow_dispatch:

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  update:
    permissions:
      contents: write  # for Git to git push
    if: ${{ github.event_name != 'schedule' || github.repository == 'ruby/ruby' }}
    name: update ${{ github.workflow }}
    runs-on: ubuntu-latest
    steps:
      - name: git config
        run: |
          git config --global advice.detachedHead 0
          git config --global init.defaultBranch garbage

      - name: Set ENV
        run: |
          echo "GNUMAKEFLAGS=-j$((1 + $(nproc --all)))" >> $GITHUB_ENV
          echo "TODAY=$(date +%F)" >> $GITHUB_ENV

      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

      - uses: actions/cache@c17f4bf4666a8001b1a45c09eb7a485c41aa64c3 # v3.2.0
        with:
          path: .downloaded-cache
          key: downloaded-cache-${{ github.sha }}
          restore-keys: |
            downloaded-cache

      - name: Download previous gems list
        run: |
          data=bundled_gems.json
          mkdir -p .downloaded-cache
          ln -s .downloaded-cache/$data .
          curl -O -R -z ./$data https://stdgems.org/$data

      - name: Update bundled gems list
        run: |
          ruby -i~ tool/update-bundled_gems.rb gems/bundled_gems

      - name: Maintain updated gems list in NEWS
        run: |
          #!ruby
          require 'json'
          news = File.read("NEWS.md")
          prev = news[/since the \*+(\d+\.\d+\.\d+)\*+/, 1]
          prevs = [prev, prev.sub(/\.\d+\z/, '')]
          %W[bundled].each do |type|
            last = JSON.parse(File.read("#{type}_gems.json"))['gems'].filter_map do |g|
              v = g['versions'].values_at(*prevs).compact.first
              g = g['gem']
              g = 'RubyGems' if g == 'rubygems'
              [g, v] if v
            end.to_h
            changed = File.foreach("gems/#{type}_gems").filter_map do |l|
              next if l.start_with?("#")
              g, v = l.split(" ", 3)
              [g, v] unless last[g] == v
            end
            changed, added = changed.partition {|g, _| last[g]}
            news.sub!(/^\*( +)The following #{type} gems? are updated\.\n+\K(?: \1\*( +).*\n)*/) do
              mark = "#{$1} *#{$2}"
              changed.map {|g, v|"#{mark}#{g} #{v}\n"}.join("")
            end or next
            news.sub!(/^\*( +)The following default gems are now bundled gems\.\n+\K(?: \1\*( +).*\n)*/) do
              mark = "#{$1} *#{$2}"
              added.map {|g, v|"#{mark}#{g} #{v}\n"}.join("")
            end or next unless added.empty?
            File.write("NEWS.md", news)
          end
        shell: ruby {0}

      - name: Check diffs
        id: diff
        run: |
          git add -- NEWS.md
          git diff --no-ext-diff --ignore-submodules --quiet -- gems/bundled_gems
        continue-on-error: true

      - name: Install libraries
        run: |
          set -x
          sudo apt-get update -q || :
          sudo apt-get install --no-install-recommends -q -y build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev bison autoconf ruby
        if: ${{ steps.diff.outcome == 'failure' }}

      - name: Build
        run: |
          ./autogen.sh
          ./configure -C --disable-install-doc
          make
        if: ${{ steps.diff.outcome == 'failure' }}

      - name: Prepare bundled gems
        run: |
          make -s prepare-gems
        if: ${{ steps.diff.outcome == 'failure' }}

      - name: Test bundled gems
        run: |
          make -s test-bundled-gems
          git add -- gems/bundled_gems
        timeout-minutes: 30
        env:
          RUBY_TESTOPTS: "-q --tty=no"
          TEST_BUNDLED_GEMS_ALLOW_FAILURES: ""
        if: ${{ steps.diff.outcome == 'failure' }}

      - name: Show diffs
        id: show
        run: |
          git diff --cached --color --no-ext-diff --ignore-submodules --exit-code --
        continue-on-error: true

      - name: Commit
        run: |
          git pull --ff-only origin ${GITHUB_REF#refs/heads/}
          message="Update bundled gems list at "
          if [ ${{ steps.diff.outcome }} = success ]; then
            git commit --message="${message}${GITHUB_SHA:0:30} [ci skip]"
          else
            git commit --message="${message}${TODAY}"
          fi
          git push origin ${GITHUB_REF#refs/heads/}
        env:
          EMAIL: svn-admin@ruby-lang.org
          GIT_AUTHOR_NAME: git
          GIT_COMMITTER_NAME: git
        if: ${{ github.repository == 'ruby/ruby' && !startsWith(github.event_name, 'pull') && steps.show.outcome == 'failure' }}

      - uses: ruby/action-slack@b6882ea6ef8f556f9f9af9ec1220d3f1ced74acf # v3.0.0
        with:
          payload: |
            {
              "ci": "GitHub Actions",
              "env": "${{ github.workflow }} / update",
              "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "commit": "${{ github.sha }}",
              "branch": "${{ github.ref_name }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: ${{ failure() && github.event_name == 'push' }}
