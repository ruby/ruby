name: Ubuntu
on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**/man'
      - '**.md'
      - '**.rdoc'
      - '**/.document'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '**/man'
      - '**.md'
      - '**.rdoc'
      - '**/.document'

concurrency:
  group: ${{ github.workflow }} / ${{ startsWith(github.event_name, 'pull') && github.ref_name || github.sha }}
  cancel-in-progress: ${{ startsWith(github.event_name, 'pull') }}

permissions:
  contents: read

jobs:
  make:
    strategy:
      matrix:
        # main variables included in the job name
        test_task: [check]
        configure: [cppflags=-DRUBY_DEBUG] # default to use more assertions
        arch: ['']
        # specify all jobs with `include` to avoid testing duplicated things
        include:
          - test_task: check
          - test_task: check
            arch: i686
            configure: '' # test without -DRUBY_DEBUG as well
          - test_task: check
            configure: "--enable-shared --enable-load-relative"
          - test_task: test-all TESTS=--repeat-count=2
          - test_task: test-syntax-suggest
          - test_task: test-bundler-parallel
          - test_task: test-bundled-gems
      fail-fast: false
    env:
      GITPULLOPTIONS: --no-tags origin ${{github.ref}}
      RUBY_DEBUG: ci
      SETARCH: ${{ matrix.arch && format('setarch {0}', matrix.arch) }}
    runs-on: ubuntu-20.04
    if: ${{ !contains(github.event.head_commit.message, '[DOC]') && !contains(github.event.pull_request.labels.*.name, 'Documentation') }}
    steps:
      - run: mkdir build
        working-directory:
      - name: Set ENV
        run: |
          echo "GNUMAKEFLAGS=-j$((1 + $(nproc --all)))" >> $GITHUB_ENV
      - name: Install libraries
        env:
          arch: ${{matrix.arch}}
        run: |
          set -x
          arch=${arch:+:${arch/i[3-6]86/i386}}
          ${arch:+sudo dpkg --add-architecture ${arch#:}}
          sudo apt-get update -q || :
          sudo apt-get install --no-install-recommends -q -y \
          ${arch:+cross}build-essential${arch/:/-} \
          libssl-dev${arch} libyaml-dev${arch} libreadline6-dev${arch} \
          zlib1g-dev${arch} libncurses5-dev${arch} libffi-dev${arch} \
          bison autoconf ruby
          sudo apt-get install -q -y pkg-config${arch} || :
      - name: git config
        run: |
          git config --global advice.detachedHead 0
          git config --global init.defaultBranch garbage
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          path: src
      - uses: actions/cache@c17f4bf4666a8001b1a45c09eb7a485c41aa64c3 # v3.2.0
        with:
          path: src/.downloaded-cache
          key: downloaded-cache
      - name: Fixed world writable dirs
        run: |
          chmod -v go-w $HOME $HOME/.config
          sudo chmod -R go-w /usr/share
          sudo bash -c 'IFS=:; for d in '"$PATH"'; do chmod -v go-w $d; done' || :
      - run: ./autogen.sh
        working-directory: src
      - name: Run configure
        env:
          arch: ${{matrix.arch}}
        run: >-
          $SETARCH ../src/configure -C --disable-install-doc ${{ matrix.configure }}
          ${arch:+--target=$arch-$OSTYPE --host=$arch-$OSTYPE}
      - run: $SETARCH make incs
      - run: $SETARCH make prepare-gems
        if: ${{ matrix.test_task == 'test-bundled-gems' }}
      - run: $SETARCH make
      - run: $SETARCH make leaked-globals
        if: ${{ matrix.test_task == 'check' }}
      - name: Create dummy files in build dir
        run: |
          $SETARCH ./miniruby -e '(("a".."z").to_a+("A".."Z").to_a+("0".."9").to_a+%w[foo bar test zzz]).each{|basename|File.write("#{basename}.rb", "raise %(do not load #{basename}.rb)")}'
        if: ${{ matrix.test_task == 'check' }}
      - name: make ${{ matrix.test_task }}
        run: |
          $SETARCH make -s ${{ matrix.test_task }} ${TESTS:+TESTS=`echo "$TESTS" | sed 's| |$$/ -n!/|g;s|^|-n!/|;s|$|$$/|'`}
        timeout-minutes: 40
        env:
          RUBY_TESTOPTS: "-q --tty=no"
          TESTS: ${{ matrix.test_task == 'check' && matrix.skipped_tests || '' }}
          TEST_BUNDLED_GEMS_ALLOW_FAILURES: ""
          PRECHECK_BUNDLED_GEMS: "no"
      - name: make skipped tests
        run: |
          $SETARCH make -s test-all TESTS=`echo "$TESTS" | sed 's| |$$/ -n/|g;s|^|-n/|;s|$|$$/|'`
        env:
          GNUMAKEFLAGS: ""
          RUBY_TESTOPTS: "-v --tty=no"
          TESTS: ${{ matrix.skipped_tests }}
        if: ${{ matrix.test_task == 'check' && matrix.skipped_tests != '' }}
        continue-on-error: ${{ matrix.continue-on-skipped_tests || false }}
      - uses: ruby/action-slack@b6882ea6ef8f556f9f9af9ec1220d3f1ced74acf # v3.0.0
        with:
          payload: |
            {
              "ci": "GitHub Actions",
              "env": "${{ github.workflow }} / ${{ matrix.test_task }} ${{ matrix.configure }}${{ matrix.arch }}",
              "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "commit": "${{ github.sha }}",
              "branch": "${{ github.ref_name }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: ${{ failure() && github.event_name == 'push' }}

defaults:
  run:
    working-directory: build
