name: Ubuntu
on: [push, pull_request]
jobs:
  make:
    strategy:
      matrix:
        test_task: [ "check", "test-bundler", "test-bundled-gems", "test-all TESTS=--repeat-count=2" ]
        os: [ubuntu-latest, ubuntu-16.04]
        exclude:
          - test_task: test-bundler
            os: ubuntu-16.04
          - test_task: test-bundled-gems
            os: ubuntu-16.04
          - test_task: "test-all TESTS=--repeat-count=2"
            os: ubuntu-16.04
      fail-fast: false
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Install libraries
        run: |
          set -x
          sudo apt-get update -q || :
          sudo apt-get install --no-install-recommends -q -y build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev bison autoconf ruby
      # Not using official actions/checkout because it's unstable and sometimes doesn't work for a fork.
      - name: Checkout ruby
        run: |
          git clone --single-branch --shallow-since=yesterday --branch=${GITHUB_REF#refs/heads/} https://github.com/${{ github.repository }} src
          git -C src reset --hard "$GITHUB_SHA"
        if: github.event_name == 'push'
      - name: Checkout a pull request
        run: |
          git clone --single-branch --shallow-since=yesterday --branch=${{ github.event.pull_request.head.ref }} https://github.com/${{ github.event.pull_request.head.repo.full_name }} src
          git -C src reset --hard ${{ github.event.pull_request.head.sha }}
        if: github.event_name == 'pull_request'
      - run: ./src/tool/actions-commit-info.sh
        id: commit_info
      - name: Fixed world writable dirs
        run: |
          chmod go-w $HOME
          sudo chmod -R go-w /usr/share
      - name: Set ENV
        run: |
          echo '::set-env name=JOBS::'-j$((1 + $(nproc --all)))
      - name: Autoconf
        run: cd src && exec autoconf
      - name: configure
        run: |
          mkdir build
          cd build
          ../src/configure -C --disable-install-doc
      - name: Make
        run: make -C build $JOBS
      - name: Extract gems
        run: make -C build update-gems extract-gems
        if: matrix.test_task == 'check'
      - name: Create dummy files in build dir
        run: |
          cd build
          ./miniruby -e '(("a".."z").to_a+("A".."Z").to_a+("0".."9").to_a+%w[foo bar test zzz]).each{|basename|File.write("#{basename}.rb", "raise %(do not load #{basename}.rb)")}'
        if: matrix.test_task == 'check'
      - name: Tests
        run: make -C build $JOBS -s ${{ matrix.test_task }}
        env:
          RUBY_TESTOPTS: "-q --tty=no"
          # Remove minitest from TEST_BUNDLED_GEMS_ALLOW_FAILURES if https://github.com/seattlerb/minitest/pull/798 is resolved
          # rss needs to add workaround for the non rexml environment
          TEST_BUNDLED_GEMS_ALLOW_FAILURES: "minitest,xmlrpc,rss"
      - name: Leaked Globals
        run: make -C build -s leaked-globals
      - uses: k0kubun/action-slack@v2.0.0
        with:
          payload: |
            {
              "attachments": [{
                "text": "${{ matrix.os }} / ${{ matrix.test_task }} <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ steps.commit_info.outputs.COMMIT_DATE }} #${{ steps.commit_info.outputs.COMMIT_NUMBER_OF_DAY }}> " +
                        "(<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|" + "${{ github.sha }}".substring(0, 10) + ">) " +
                        "of ${{ github.repository }}@" + "${{ github.ref }}".split('/').reverse()[0] + " by ${{ github.event.head_commit.committer.name }} failed",
                "color": "danger"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure() && github.event_name == 'push'
