name: MJIT bindgen
on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**/man'
      - '**.md'
      - '**.rdoc'
      - '**/.document'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '**/man'
      - '**.md'
      - '**.rdoc'
      - '**/.document'

concurrency:
  group: ${{ github.workflow }} / ${{ startsWith(github.event_name, 'pull') && github.ref_name || github.sha }}
  cancel-in-progress: ${{ startsWith(github.event_name, 'pull') }}

permissions:
  contents: read

jobs:
  make:
    strategy:
      matrix:
        include:
          - task: mjit-bindgen
      fail-fast: false
    runs-on: ubuntu-20.04
    if: ${{ !contains(github.event.head_commit.message, '[DOC]') && !contains(github.event.pull_request.labels.*.name, 'Documentation') }}
    steps:
      - run: mkdir build
        working-directory:
      - name: Set ENV
        run: |
          echo "GNUMAKEFLAGS=-j$((1 + $(nproc --all)))" >> $GITHUB_ENV
      - name: Install libraries
        run: |
          set -x
          sudo apt-get update -q || :
          sudo apt-get install --no-install-recommends -q -y \
          build-essential \
          libssl-dev libyaml-dev libreadline6-dev \
          zlib1g-dev libncurses5-dev libffi-dev \
          libclang1-10 \
          bison autoconf
          sudo apt-get install -q -y pkg-config || :
      - name: Set up Ruby
        uses: ruby/setup-ruby@4b2d1d631efa087f8896c15a0c6023dc2f483198 # v1.128.0
        with:
          ruby-version: '3.1'
      - name: git config
        run: |
          git config --global advice.detachedHead 0
          git config --global init.defaultBranch garbage
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          path: src
      - uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3.2.2
        with:
          path: src/.downloaded-cache
          key: downloaded-cache
      - name: Fixed world writable dirs
        run: |
          chmod -v go-w $HOME $HOME/.config
          sudo chmod -R go-w /usr/share
          sudo bash -c 'IFS=:; for d in '"$PATH"'; do chmod -v go-w $d; done' || :
      - run: ./autogen.sh
        working-directory: src
      - name: Run configure
        run: ../src/configure -C --disable-install-doc --prefix=$(pwd)/install --enable-yjit=dev_nodebug
      - run: make incs
      - run: make
      - run: make install
      - run: make ${{ matrix.task }}
      - run: git diff --exit-code
        working-directory: src
      - uses: ruby/action-slack@b6882ea6ef8f556f9f9af9ec1220d3f1ced74acf # v3.0.0
        with:
          payload: |
            {
              "ci": "GitHub Actions",
              "env": "${{ matrix.os }} / ${{ matrix.test_task }}${{ matrix.configure }}",
              "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "commit": "${{ github.sha }}",
              "branch": "${{ github.ref_name }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: ${{ failure() && github.event_name == 'push' }}

defaults:
  run:
    working-directory: build
