name: Misc
on: [push, pull_request, merge_group]

concurrency:
  group: ${{ github.workflow }} / ${{ startsWith(github.event_name, 'pull') && github.ref_name || github.sha }}
  cancel-in-progress: ${{ startsWith(github.event_name, 'pull') }}

permissions:
  contents: read

jobs:
  checks:
    name: Miscellaneous checks

    permissions:
      contents: write # for Git to git push

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          token: ${{ (github.repository == 'ruby/ruby' && !startsWith(github.event_name, 'pull')) && secrets.MATZBOT_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}

      - uses: ./.github/actions/setup/directories
        with:
          makeup: true
          # Skip overwriting MATZBOT_GITHUB_TOKEN
          checkout: '' # false (ref: https://github.com/actions/runner/issues/2238)

      - name: Check if C-sources are US-ASCII
        run: |
          grep -r -n --include='*.[chyS]' --include='*.asm' $'[^\t-~]' -- . && exit 1 || :

      - name: Check for trailing spaces
        run: |
          git grep -I -n $'[\t ]$' -- '*.rb' '*.[chy]' '*.rs' '*.yml' && exit 1 || :
          git grep -n $'^[\t ][\t ]*$' -- '*.md' && exit 1 || :

      - name: Check for bash specific substitution in configure.ac
        run: |
          git grep -n '\${[A-Za-z_0-9]*/' -- configure.ac && exit 1 || :

      - name: Check for header macros
        run: |
          fail=
          for header in ruby/*.h; do
            git grep -l -F -e $header -e HAVE_`echo $header | tr a-z./ A-Z__` -- . > /dev/null && continue
            fail=1
            echo $header
          done
          exit $fail
        working-directory: include

      - id: gems
        run: true
        if: ${{ github.ref == 'refs/heads/master' }}

      - name: Download previous gems list
        run: |
          data=default_gems.json
          mkdir -p .downloaded-cache
          ln -s .downloaded-cache/$data .
          curl -O -R -z ./$data https://stdgems.org/$data
        if: ${{ steps.gems.outcome == 'success' }}

      - name: Make default gems list
        run: |
          #!ruby
          require 'rubygems'
          $:.unshift "lib"
          rgver = File.foreach("lib/rubygems.rb") do |line|
            break $1 if /^\s*VERSION\s*=\s*"([^"]+)"/ =~ line
          end
          gems = Dir.glob("{ext,lib}/**/*.gemspec").map do |f|
            spec = Gem::Specification.load(f)
            "#{spec.name} #{spec.version}"
          end.sort
          File.open("gems/default_gems", "w") do |f|
            f.puts "RubyGems #{rgver}"
            f.puts gems
          end
        shell: ruby --disable=gems {0}
        if: ${{ steps.gems.outcome == 'success' }}

      - name: Maintain updated gems list in NEWS
        run: |
          ruby tool/update-NEWS-gemlist.rb default
        if: ${{ steps.gems.outcome == 'success' }}

      - name: Check diffs
        id: diff
        run: |
          git diff --color --no-ext-diff --ignore-submodules --exit-code NEWS.md ||
          echo update=true >> $GITHUB_OUTPUT
        if: ${{ steps.gems.outcome == 'success' }}

      - name: Commit
        run: |
          git pull --ff-only origin ${GITHUB_REF#refs/heads/}
          git commit --message="Update default gems list at ${GITHUB_SHA:0:30} [ci skip]" NEWS.md
          git push origin ${GITHUB_REF#refs/heads/}
        env:
          EMAIL: svn-admin@ruby-lang.org
          GIT_AUTHOR_NAME: git
          GIT_COMMITTER_NAME: git
        if: >-
          ${{
          github.repository == 'ruby/ruby' &&
          !startsWith(github.event_name, 'pull') &&
          steps.diff.outputs.update
          }}

      - uses: ./.github/actions/slack
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: ${{ failure() }}
