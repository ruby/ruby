name: WebAssembly
on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**/man'
      - '**.md'
      - '**.rdoc'
      - '**/.document'
      - '.*.yml'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '**/man'
      - '**.md'
      - '**.rdoc'
      - '**/.document'
      - '.*.yml'
  merge_group:
    paths-ignore:
      - 'doc/**'
      - '**/man'
      - '**.md'
      - '**.rdoc'
      - '**/.document'
      - '.*.yml'

concurrency:
  group: ${{ github.workflow }} / ${{ startsWith(github.event_name, 'pull') && github.ref_name || github.sha }}
  cancel-in-progress: ${{ startsWith(github.event_name, 'pull') }}

permissions: # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  make:
    strategy:
      matrix:
        entry:
#         # wasmtime can't compile non-optimized Asyncified binary due to locals explosion
#         - { name: O0-debuginfo, optflags: '-O0', debugflags: '-g', wasmoptflags: '-O1' }
#         - { name: O1,           optflags: '-O1', debugflags: ''  , wasmoptflags: '-O1' }
          - { name: O2, optflags: '-O2', debugflags: '', wasmoptflags: '-O2' }
#         - { name: O3,           optflags: '-O3', debugflags: ''  , wasmoptflags: '-O3' }
#         # -O4 is equivalent to -O3 in clang, but it's different in wasm-opt
#         - { name: O4,           optflags: '-O3', debugflags: ''  , wasmoptflags: '-O4' }
#         - { name: Oz,           optflags: '-Oz', debugflags: ''  , wasmoptflags: '-Oz' }
      fail-fast: false

    env:
      RUBY_TESTOPTS: '-q --tty=no'
      GITPULLOPTIONS: --no-tags origin ${{ github.ref }}
      WASI_SDK_VERSION_MAJOR: 20
      WASI_SDK_VERSION_MINOR: 0
      BINARYEN_VERSION: 113
      WASMTIME_VERSION: v15.0.0

    runs-on: ubuntu-20.04

    if: >-
      ${{!(false
      || contains(github.event.head_commit.message, '[DOC]')
      || contains(github.event.pull_request.title, '[DOC]')
      || contains(github.event.pull_request.labels.*.name, 'Documentation')
      || (github.event_name == 'push' && github.actor == 'dependabot[bot]')
      )}}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: /.github

      - uses: ./.github/actions/setup/directories
        with:
          srcdir: src
          builddir: build
          makeup: true

      - name: Install libraries
        run: |
          set -ex
          sudo apt-get update -q || :
          sudo apt-get install --no-install-recommends -q -y ruby make autoconf git wget

          wasi_sdk_deb="wasi-sdk_${WASI_SDK_VERSION_MAJOR}.${WASI_SDK_VERSION_MINOR}_amd64.deb"
          wget "https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_SDK_VERSION_MAJOR}/${wasi_sdk_deb}"
          sudo dpkg -i "$wasi_sdk_deb"
          rm -f "$wasi_sdk_deb"

          mkdir build-sdk
          pushd build-sdk

          wasmtime_url="https://github.com/bytecodealliance/wasmtime/releases/download/${WASMTIME_VERSION}/wasmtime-${WASMTIME_VERSION}-x86_64-linux.tar.xz"
          wget -O - "$wasmtime_url" | tar xJf -
          sudo ln -fs "$PWD/wasmtime-${WASMTIME_VERSION}-x86_64-linux/wasmtime" /usr/local/bin/wasmtime

          binaryen_tarball="binaryen-version_${BINARYEN_VERSION}-x86_64-linux.tar.gz"
          binaryen_url="https://github.com/WebAssembly/binaryen/releases/download/version_${BINARYEN_VERSION}/${binaryen_tarball}"
          wget -O - "$binaryen_url" | tar xfz -
          sudo ln -fs "$PWD/binaryen-version_${BINARYEN_VERSION}/bin/wasm-opt" /usr/local/bin/wasm-opt
        working-directory: src

      - name: Set ENV
        run: |
          echo "WASI_SDK_PATH=/opt/wasi-sdk" >> $GITHUB_ENV

      - name: Build baseruby
        run: |
          set -ex
          mkdir ../baseruby
          pushd ../baseruby
          ../src/configure --prefix=$PWD/install
          make
          make install

      - name: Run configure
        run: |
          ../src/configure \
            --host wasm32-unknown-wasi \
            --with-baseruby=$PWD/../baseruby/install/bin/ruby \
            --with-static-linked-ext \
            --with-ext=bigdecimal,cgi/escape,continuation,coverage,date,dbm,digest/bubblebabble,digest,digest/md5,digest/rmd160,digest/sha1,digest/sha2,etc,fcntl,fiber,gdbm,json,json/generator,json/parser,nkf,objspace,pathname,racc/cparse,rbconfig/sizeof,ripper,stringio,strscan,monitor \
            LDFLAGS=" \
              -Xlinker --stack-first \
              -Xlinker -z -Xlinker stack-size=16777216 \
            " \
            optflags="${{ matrix.entry.optflags }}" \
            debugflags="${{ matrix.entry.debugflags }}" \
            wasmoptflags="${{ matrix.entry.wasmoptflags }} ${{ matrix.entry.debugflags }}"

      # miniruby may not be built when cross-compling
      - run: make mini ruby

      - run: make install DESTDIR=$PWD/../install
      - run: tar cfz ../install.tar.gz -C ../install .

      - name: Upload artifacts
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: ruby-wasm-install
          path: ${{ github.workspace }}/install.tar.gz
      - name: Show Playground URL to try the build
        run: |
          echo "Try on Playground: https://ruby.github.io/play-ruby?run=$GITHUB_RUN_ID" >> $GITHUB_STEP_SUMMARY

      - name: Run basictest
        run: wasmtime run ./../build/miniruby --mapdir /::./ -- basictest/test.rb
        working-directory: src

      - name: Run bootstraptest (no thread)
        run: |
          NO_THREAD_TESTS="$(grep -L Thread -R ./bootstraptest | awk -F/ '{ print $NF }' | uniq | sed -n 's/test_\(.*\).rb/\1/p' | paste -s -d, -)"
          ruby ./bootstraptest/runner.rb --ruby="$(which wasmtime) run $PWD/../build/ruby --mapdir /::./ -- " --verbose "--sets=$NO_THREAD_TESTS"
        working-directory: src

      - uses: ./.github/actions/slack
        with:
          label: ${{ matrix.entry.name }}
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: ${{ failure() }}

      # Workaround for https://github.com/orgs/community/discussions/25220
      - name: Save Pull Request number
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "${{ github.event.pull_request.number }}" >> ${{ github.workspace }}/github-pr-info.txt
      - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        if: ${{ github.event_name == 'pull_request' }}
        with:
          name: github-pr-info
          path: ${{ github.workspace }}/github-pr-info.txt

defaults:
  run:
    working-directory: build
