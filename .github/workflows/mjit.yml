name: MJIT
on: [push, pull_request]
jobs:
  make:
    strategy:
      matrix:
        test_task: [ "check" ] # to make job names consistent
        jit_opts: [ "--jit", "--jit-wait" ]
      fail-fast: false
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    env:
      TESTOPTS: '-q --tty=no'
      RUN_OPTS: '--disable-gems --jit-warnings ${{ matrix.jit_opts }}'
    steps:
      - name: Install libraries
        run: |
          set -x
          sudo apt-get update -q || :
          sudo apt-get install --no-install-recommends -q -y build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev bison autoconf ruby
      # Not using official actions/checkout because it's unstable and sometimes doesn't work for a fork.
      - name: Checkout ruby
        run: |
          git clone --single-branch --shallow-since=yesterday --branch=${GITHUB_REF#refs/heads/} https://github.com/${{ github.repository }} src
          git -C src reset --hard "$GITHUB_SHA"
        if: github.event_name == 'push'
      - name: Checkout a pull request
        run: |
          git clone --single-branch --depth=50 --branch=${{ github.event.pull_request.head.ref }} https://github.com/${{ github.event.pull_request.head.repo.full_name }} src
          git -C src reset --hard ${{ github.event.pull_request.head.sha }}
        if: github.event_name == 'pull_request'
      - run: ./src/tool/actions-commit-info.sh
        id: commit_info
      - name: Fixed world writable dirs
        run: |
          chmod go-w $HOME
          sudo chmod -R go-w /usr/share
      - name: Set ENV
        run: |
          echo '::set-env name=JOBS::'-j$((1 + $(nproc --all)))
      - run: autoconf
        working-directory: src
      - run: mkdir build
      - name: Run configure
        run: ../src/configure -C --disable-install-doc
        working-directory: build
      - run: make $JOBS
        working-directory: build
      - run: sudo make $JOBS -s install
        working-directory: build
      - run: make $JOBS -s test
        working-directory: build
      - run: make $JOBS -s test-all
        working-directory: build
      - run: make $JOBS -s test-spec
        working-directory: build
      - uses: k0kubun/action-slack@v2.0.0
        with:
          payload: |
            {
              "ci": "GitHub Actions",
              "env": "${{ github.workflow }} / ${{ matrix.test_task }} ${{ matrix.jit_opts }}",
              "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "commit": "${{ github.sha }}",
              "branch": "${{ github.ref }}".split('/').reverse()[0]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: failure() && github.event_name == 'push'
