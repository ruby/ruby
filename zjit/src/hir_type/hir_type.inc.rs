// This file is @generated by src/hir_type/gen_hir_type.rb.
mod bits {
  pub const Any: u64 = CValue | RubyValue;
  pub const Array: u64 = ArrayExact | ArraySubclass;
  pub const ArrayExact: u64 = 1u64 << 0;
  pub const ArraySubclass: u64 = 1u64 << 1;
  pub const BasicObject: u64 = BasicObjectExact | BasicObjectSubclass | Object;
  pub const BasicObjectExact: u64 = 1u64 << 2;
  pub const BasicObjectSubclass: u64 = 1u64 << 3;
  pub const Bignum: u64 = 1u64 << 4;
  pub const BoolExact: u64 = FalseClassExact | TrueClassExact;
  pub const BuiltinExact: u64 = ArrayExact | BasicObjectExact | FalseClassExact | FloatExact | HashExact | IntegerExact | NilClassExact | ObjectExact | StringExact | SymbolExact | TrueClassExact;
  pub const CBool: u64 = 1u64 << 5;
  pub const CDouble: u64 = 1u64 << 6;
  pub const CInt: u64 = CSigned | CUnsigned;
  pub const CInt16: u64 = 1u64 << 7;
  pub const CInt32: u64 = 1u64 << 8;
  pub const CInt64: u64 = 1u64 << 9;
  pub const CInt8: u64 = 1u64 << 10;
  pub const CNull: u64 = 1u64 << 11;
  pub const CPtr: u64 = 1u64 << 12;
  pub const CSigned: u64 = CInt16 | CInt32 | CInt64 | CInt8;
  pub const CUInt16: u64 = 1u64 << 13;
  pub const CUInt32: u64 = 1u64 << 14;
  pub const CUInt64: u64 = 1u64 << 15;
  pub const CUInt8: u64 = 1u64 << 16;
  pub const CUnsigned: u64 = CUInt16 | CUInt32 | CUInt64 | CUInt8;
  pub const CValue: u64 = CBool | CDouble | CInt | CNull | CPtr;
  pub const CallableMethodEntry: u64 = 1u64 << 17;
  pub const DynamicSymbol: u64 = 1u64 << 18;
  pub const Empty: u64 = 0u64;
  pub const FalseClass: u64 = FalseClassExact | FalseClassSubclass;
  pub const FalseClassExact: u64 = 1u64 << 19;
  pub const FalseClassSubclass: u64 = 1u64 << 20;
  pub const Fixnum: u64 = 1u64 << 21;
  pub const Float: u64 = FloatExact | FloatSubclass;
  pub const FloatExact: u64 = Flonum | HeapFloat;
  pub const FloatSubclass: u64 = 1u64 << 22;
  pub const Flonum: u64 = 1u64 << 23;
  pub const Hash: u64 = HashExact | HashSubclass;
  pub const HashExact: u64 = 1u64 << 24;
  pub const HashSubclass: u64 = 1u64 << 25;
  pub const HeapFloat: u64 = 1u64 << 26;
  pub const Immediate: u64 = FalseClassExact | Fixnum | Flonum | NilClassExact | StaticSymbol | TrueClassExact | Undef;
  pub const Integer: u64 = IntegerExact | IntegerSubclass;
  pub const IntegerExact: u64 = Bignum | Fixnum;
  pub const IntegerSubclass: u64 = 1u64 << 27;
  pub const NilClass: u64 = NilClassExact | NilClassSubclass;
  pub const NilClassExact: u64 = 1u64 << 28;
  pub const NilClassSubclass: u64 = 1u64 << 29;
  pub const Object: u64 = Array | FalseClass | Float | Hash | Integer | NilClass | ObjectExact | ObjectSubclass | String | Symbol | TrueClass;
  pub const ObjectExact: u64 = 1u64 << 30;
  pub const ObjectSubclass: u64 = 1u64 << 31;
  pub const RubyValue: u64 = BasicObject | CallableMethodEntry | Undef;
  pub const StaticSymbol: u64 = 1u64 << 32;
  pub const String: u64 = StringExact | StringSubclass;
  pub const StringExact: u64 = 1u64 << 33;
  pub const StringSubclass: u64 = 1u64 << 34;
  pub const Subclass: u64 = ArraySubclass | BasicObjectSubclass | FalseClassSubclass | FloatSubclass | HashSubclass | IntegerSubclass | NilClassSubclass | ObjectSubclass | StringSubclass | SymbolSubclass | TrueClassSubclass;
  pub const Symbol: u64 = SymbolExact | SymbolSubclass;
  pub const SymbolExact: u64 = DynamicSymbol | StaticSymbol;
  pub const SymbolSubclass: u64 = 1u64 << 35;
  pub const TrueClass: u64 = TrueClassExact | TrueClassSubclass;
  pub const TrueClassExact: u64 = 1u64 << 36;
  pub const TrueClassSubclass: u64 = 1u64 << 37;
  pub const Undef: u64 = 1u64 << 38;
  pub const AllBitPatterns: [(&'static str, u64); 64] = [
    ("Any", Any),
    ("RubyValue", RubyValue),
    ("Immediate", Immediate),
    ("Undef", Undef),
    ("BasicObject", BasicObject),
    ("Object", Object),
    ("TrueClass", TrueClass),
    ("Subclass", Subclass),
    ("TrueClassSubclass", TrueClassSubclass),
    ("BuiltinExact", BuiltinExact),
    ("BoolExact", BoolExact),
    ("TrueClassExact", TrueClassExact),
    ("Symbol", Symbol),
    ("SymbolSubclass", SymbolSubclass),
    ("String", String),
    ("StringSubclass", StringSubclass),
    ("StringExact", StringExact),
    ("SymbolExact", SymbolExact),
    ("StaticSymbol", StaticSymbol),
    ("ObjectSubclass", ObjectSubclass),
    ("ObjectExact", ObjectExact),
    ("NilClass", NilClass),
    ("NilClassSubclass", NilClassSubclass),
    ("NilClassExact", NilClassExact),
    ("Integer", Integer),
    ("IntegerSubclass", IntegerSubclass),
    ("Float", Float),
    ("FloatExact", FloatExact),
    ("HeapFloat", HeapFloat),
    ("Hash", Hash),
    ("HashSubclass", HashSubclass),
    ("HashExact", HashExact),
    ("Flonum", Flonum),
    ("FloatSubclass", FloatSubclass),
    ("IntegerExact", IntegerExact),
    ("Fixnum", Fixnum),
    ("FalseClass", FalseClass),
    ("FalseClassSubclass", FalseClassSubclass),
    ("FalseClassExact", FalseClassExact),
    ("DynamicSymbol", DynamicSymbol),
    ("CallableMethodEntry", CallableMethodEntry),
    ("CValue", CValue),
    ("CInt", CInt),
    ("CUnsigned", CUnsigned),
    ("CUInt8", CUInt8),
    ("CUInt64", CUInt64),
    ("CUInt32", CUInt32),
    ("CUInt16", CUInt16),
    ("CPtr", CPtr),
    ("CNull", CNull),
    ("CSigned", CSigned),
    ("CInt8", CInt8),
    ("CInt64", CInt64),
    ("CInt32", CInt32),
    ("CInt16", CInt16),
    ("CDouble", CDouble),
    ("CBool", CBool),
    ("Bignum", Bignum),
    ("BasicObjectSubclass", BasicObjectSubclass),
    ("BasicObjectExact", BasicObjectExact),
    ("Array", Array),
    ("ArraySubclass", ArraySubclass),
    ("ArrayExact", ArrayExact),
    ("Empty", Empty),
  ];
  pub const NumTypeBits: u64 = 39;
}
pub mod types {
  use super::*;
  pub const Any: Type = Type::from_bits(bits::Any);
  pub const Array: Type = Type::from_bits(bits::Array);
  pub const ArrayExact: Type = Type::from_bits(bits::ArrayExact);
  pub const ArraySubclass: Type = Type::from_bits(bits::ArraySubclass);
  pub const BasicObject: Type = Type::from_bits(bits::BasicObject);
  pub const BasicObjectExact: Type = Type::from_bits(bits::BasicObjectExact);
  pub const BasicObjectSubclass: Type = Type::from_bits(bits::BasicObjectSubclass);
  pub const Bignum: Type = Type::from_bits(bits::Bignum);
  pub const BoolExact: Type = Type::from_bits(bits::BoolExact);
  pub const BuiltinExact: Type = Type::from_bits(bits::BuiltinExact);
  pub const CBool: Type = Type::from_bits(bits::CBool);
  pub const CDouble: Type = Type::from_bits(bits::CDouble);
  pub const CInt: Type = Type::from_bits(bits::CInt);
  pub const CInt16: Type = Type::from_bits(bits::CInt16);
  pub const CInt32: Type = Type::from_bits(bits::CInt32);
  pub const CInt64: Type = Type::from_bits(bits::CInt64);
  pub const CInt8: Type = Type::from_bits(bits::CInt8);
  pub const CNull: Type = Type::from_bits(bits::CNull);
  pub const CPtr: Type = Type::from_bits(bits::CPtr);
  pub const CSigned: Type = Type::from_bits(bits::CSigned);
  pub const CUInt16: Type = Type::from_bits(bits::CUInt16);
  pub const CUInt32: Type = Type::from_bits(bits::CUInt32);
  pub const CUInt64: Type = Type::from_bits(bits::CUInt64);
  pub const CUInt8: Type = Type::from_bits(bits::CUInt8);
  pub const CUnsigned: Type = Type::from_bits(bits::CUnsigned);
  pub const CValue: Type = Type::from_bits(bits::CValue);
  pub const CallableMethodEntry: Type = Type::from_bits(bits::CallableMethodEntry);
  pub const DynamicSymbol: Type = Type::from_bits(bits::DynamicSymbol);
  pub const Empty: Type = Type::from_bits(bits::Empty);
  pub const FalseClass: Type = Type::from_bits(bits::FalseClass);
  pub const FalseClassExact: Type = Type::from_bits(bits::FalseClassExact);
  pub const FalseClassSubclass: Type = Type::from_bits(bits::FalseClassSubclass);
  pub const Fixnum: Type = Type::from_bits(bits::Fixnum);
  pub const Float: Type = Type::from_bits(bits::Float);
  pub const FloatExact: Type = Type::from_bits(bits::FloatExact);
  pub const FloatSubclass: Type = Type::from_bits(bits::FloatSubclass);
  pub const Flonum: Type = Type::from_bits(bits::Flonum);
  pub const Hash: Type = Type::from_bits(bits::Hash);
  pub const HashExact: Type = Type::from_bits(bits::HashExact);
  pub const HashSubclass: Type = Type::from_bits(bits::HashSubclass);
  pub const HeapFloat: Type = Type::from_bits(bits::HeapFloat);
  pub const Immediate: Type = Type::from_bits(bits::Immediate);
  pub const Integer: Type = Type::from_bits(bits::Integer);
  pub const IntegerExact: Type = Type::from_bits(bits::IntegerExact);
  pub const IntegerSubclass: Type = Type::from_bits(bits::IntegerSubclass);
  pub const NilClass: Type = Type::from_bits(bits::NilClass);
  pub const NilClassExact: Type = Type::from_bits(bits::NilClassExact);
  pub const NilClassSubclass: Type = Type::from_bits(bits::NilClassSubclass);
  pub const Object: Type = Type::from_bits(bits::Object);
  pub const ObjectExact: Type = Type::from_bits(bits::ObjectExact);
  pub const ObjectSubclass: Type = Type::from_bits(bits::ObjectSubclass);
  pub const RubyValue: Type = Type::from_bits(bits::RubyValue);
  pub const StaticSymbol: Type = Type::from_bits(bits::StaticSymbol);
  pub const String: Type = Type::from_bits(bits::String);
  pub const StringExact: Type = Type::from_bits(bits::StringExact);
  pub const StringSubclass: Type = Type::from_bits(bits::StringSubclass);
  pub const Subclass: Type = Type::from_bits(bits::Subclass);
  pub const Symbol: Type = Type::from_bits(bits::Symbol);
  pub const SymbolExact: Type = Type::from_bits(bits::SymbolExact);
  pub const SymbolSubclass: Type = Type::from_bits(bits::SymbolSubclass);
  pub const TrueClass: Type = Type::from_bits(bits::TrueClass);
  pub const TrueClassExact: Type = Type::from_bits(bits::TrueClassExact);
  pub const TrueClassSubclass: Type = Type::from_bits(bits::TrueClassSubclass);
  pub const Undef: Type = Type::from_bits(bits::Undef);
}
