/* C code produced by gperf version 3.0.3 */
/* Command-line: gperf -7 -c -j1 -i1 -t -C -P -T -H uniname2ctype_hash -Q uniname2ctype_pool -N uniname2ctype_p  */
#ifndef USE_UNICODE_PROPERTIES
/* Computed positions: -k'1,3' */
#else /* USE_UNICODE_PROPERTIES */
/* Computed positions: -k'1-3,5-6,12,16,$' */
#endif /* USE_UNICODE_PROPERTIES */

#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
/* The character set is not based on ISO-646.  */
error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
#endif


#define long size_t

/* 'NEWLINE': [[:NEWLINE:]] */
static const OnigCodePoint CR_NEWLINE[] = {
	1,
	0x000a, 0x000a,
}; /* CR_NEWLINE */

/* 'Alpha': [[:Alpha:]] */
static const OnigCodePoint CR_Alpha[] = {
	600,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0345, 0x0345,
	0x0370, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x05b0, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0610, 0x061a,
	0x0620, 0x0657,
	0x0659, 0x065f,
	0x066e, 0x06d3,
	0x06d5, 0x06dc,
	0x06e1, 0x06e8,
	0x06ed, 0x06ef,
	0x06fa, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x073f,
	0x074d, 0x07b1,
	0x07ca, 0x07ea,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x0817,
	0x081a, 0x082c,
	0x0840, 0x0858,
	0x08a0, 0x08b2,
	0x08e4, 0x08e9,
	0x08f0, 0x093b,
	0x093d, 0x094c,
	0x094e, 0x0950,
	0x0955, 0x0963,
	0x0971, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cc,
	0x09ce, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09f0, 0x09f1,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4c,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a70, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acc,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4c,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b71, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcc,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0c00, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4c,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c81, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccc,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0cf1, 0x0cf2,
	0x0d01, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4c,
	0x0d4e, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d7a, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e46,
	0x0e4d, 0x0e4d,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ecd, 0x0ecd,
	0x0edc, 0x0edf,
	0x0f00, 0x0f00,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f81,
	0x0f88, 0x0f97,
	0x0f99, 0x0fbc,
	0x1000, 0x1036,
	0x1038, 0x1038,
	0x103b, 0x103f,
	0x1050, 0x1062,
	0x1065, 0x1068,
	0x106e, 0x1086,
	0x108e, 0x108e,
	0x109c, 0x109d,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x10fa,
	0x10fc, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x135f,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1713,
	0x1720, 0x1733,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17b3,
	0x17b6, 0x17c8,
	0x17d7, 0x17d7,
	0x17dc, 0x17dc,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1920, 0x192b,
	0x1930, 0x1938,
	0x1950, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x1a00, 0x1a1b,
	0x1a20, 0x1a5e,
	0x1a61, 0x1a74,
	0x1aa7, 0x1aa7,
	0x1b00, 0x1b33,
	0x1b35, 0x1b43,
	0x1b45, 0x1b4b,
	0x1b80, 0x1ba9,
	0x1bac, 0x1baf,
	0x1bba, 0x1be5,
	0x1be7, 0x1bf1,
	0x1c00, 0x1c35,
	0x1c4d, 0x1c4f,
	0x1c5a, 0x1c7d,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf3,
	0x1cf5, 0x1cf6,
	0x1d00, 0x1dbf,
	0x1de7, 0x1df4,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x24b6, 0x24e9,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2cf2, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2dff,
	0x2e2f, 0x2e2f,
	0x3005, 0x3007,
	0x3021, 0x3029,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa61f,
	0xa62a, 0xa62b,
	0xa640, 0xa66e,
	0xa674, 0xa67b,
	0xa67f, 0xa69d,
	0xa69f, 0xa6ef,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa827,
	0xa840, 0xa873,
	0xa880, 0xa8c3,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa90a, 0xa92a,
	0xa930, 0xa952,
	0xa960, 0xa97c,
	0xa980, 0xa9b2,
	0xa9b4, 0xa9bf,
	0xa9cf, 0xa9cf,
	0xa9e0, 0xa9e4,
	0xa9e6, 0xa9ef,
	0xa9fa, 0xa9fe,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa7e, 0xaabe,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadd,
	0xaae0, 0xaaef,
	0xaaf2, 0xaaf5,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5a,
	0xab5c, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabea,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031f,
	0x10330, 0x1034a,
	0x10350, 0x1037a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10860, 0x10876,
	0x10880, 0x1089e,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10a80, 0x10a9c,
	0x10ac0, 0x10ac7,
	0x10ac9, 0x10ae4,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10b80, 0x10b91,
	0x10c00, 0x10c48,
	0x11000, 0x11045,
	0x11082, 0x110b8,
	0x110d0, 0x110e8,
	0x11100, 0x11132,
	0x11150, 0x11172,
	0x11176, 0x11176,
	0x11180, 0x111bf,
	0x111c1, 0x111c4,
	0x111da, 0x111da,
	0x11200, 0x11211,
	0x11213, 0x11234,
	0x11237, 0x11237,
	0x112b0, 0x112e8,
	0x11301, 0x11303,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133d, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134c,
	0x11357, 0x11357,
	0x1135d, 0x11363,
	0x11480, 0x114c1,
	0x114c4, 0x114c5,
	0x114c7, 0x114c7,
	0x11580, 0x115b5,
	0x115b8, 0x115be,
	0x11600, 0x1163e,
	0x11640, 0x11640,
	0x11644, 0x11644,
	0x11680, 0x116b5,
	0x118a0, 0x118df,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16ad0, 0x16aed,
	0x16b00, 0x16b36,
	0x16b40, 0x16b43,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f93, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1bc9e, 0x1bc9e,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1e800, 0x1e8c4,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1f130, 0x1f149,
	0x1f150, 0x1f169,
	0x1f170, 0x1f189,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Alpha */

/* 'Blank': [[:Blank:]] */
static const OnigCodePoint CR_Blank[] = {
	8,
	0x0009, 0x0009,
	0x0020, 0x0020,
	0x00a0, 0x00a0,
	0x1680, 0x1680,
	0x2000, 0x200a,
	0x202f, 0x202f,
	0x205f, 0x205f,
	0x3000, 0x3000,
}; /* CR_Blank */

/* 'Cntrl': [[:Cntrl:]] */
static const OnigCodePoint CR_Cntrl[] = {
	2,
	0x0000, 0x001f,
	0x007f, 0x009f,
}; /* CR_Cntrl */

/* 'Digit': [[:Digit:]] */
static const OnigCodePoint CR_Digit[] = {
	50,
	0x0030, 0x0039,
	0x0660, 0x0669,
	0x06f0, 0x06f9,
	0x07c0, 0x07c9,
	0x0966, 0x096f,
	0x09e6, 0x09ef,
	0x0a66, 0x0a6f,
	0x0ae6, 0x0aef,
	0x0b66, 0x0b6f,
	0x0be6, 0x0bef,
	0x0c66, 0x0c6f,
	0x0ce6, 0x0cef,
	0x0d66, 0x0d6f,
	0x0de6, 0x0def,
	0x0e50, 0x0e59,
	0x0ed0, 0x0ed9,
	0x0f20, 0x0f29,
	0x1040, 0x1049,
	0x1090, 0x1099,
	0x17e0, 0x17e9,
	0x1810, 0x1819,
	0x1946, 0x194f,
	0x19d0, 0x19d9,
	0x1a80, 0x1a89,
	0x1a90, 0x1a99,
	0x1b50, 0x1b59,
	0x1bb0, 0x1bb9,
	0x1c40, 0x1c49,
	0x1c50, 0x1c59,
	0xa620, 0xa629,
	0xa8d0, 0xa8d9,
	0xa900, 0xa909,
	0xa9d0, 0xa9d9,
	0xa9f0, 0xa9f9,
	0xaa50, 0xaa59,
	0xabf0, 0xabf9,
	0xff10, 0xff19,
	0x104a0, 0x104a9,
	0x11066, 0x1106f,
	0x110f0, 0x110f9,
	0x11136, 0x1113f,
	0x111d0, 0x111d9,
	0x112f0, 0x112f9,
	0x114d0, 0x114d9,
	0x11650, 0x11659,
	0x116c0, 0x116c9,
	0x118e0, 0x118e9,
	0x16a60, 0x16a69,
	0x16b50, 0x16b59,
	0x1d7ce, 0x1d7ff,
}; /* CR_Digit */

/* 'Graph': [[:Graph:]] */
static const OnigCodePoint CR_Graph[] = {
	605,
	0x0021, 0x007e,
	0x00a1, 0x0377,
	0x037a, 0x037f,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x058d, 0x058f,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x061c,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x08a0, 0x08b2,
	0x08e4, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c00, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c81, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d01, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0de6, 0x0def,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x167f,
	0x1681, 0x169c,
	0x16a0, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1ab0, 0x1abe,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cc0, 0x1cc7,
	0x1cd0, 0x1cf6,
	0x1cf8, 0x1cf9,
	0x1d00, 0x1df5,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x200b, 0x2027,
	0x202a, 0x202e,
	0x2030, 0x205e,
	0x2060, 0x2064,
	0x2066, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20bd,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23fa,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x2b73,
	0x2b76, 0x2b95,
	0x2b98, 0x2bb9,
	0x2bbd, 0x2bc8,
	0x2bca, 0x2bd1,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf3,
	0x2cf9, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e42,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3001, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcc,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa69d,
	0xa69f, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9fe,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaac2,
	0xaadb, 0xaaf6,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xe000, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe2d,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xfffd,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018c,
	0x10190, 0x1019b,
	0x101a0, 0x101a0,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x102e0, 0x102fb,
	0x10300, 0x10323,
	0x10330, 0x1034a,
	0x10350, 0x1037a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x1056f, 0x1056f,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1089e,
	0x108a7, 0x108af,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a9f,
	0x10ac0, 0x10ae6,
	0x10aeb, 0x10af6,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b91,
	0x10b99, 0x10b9c,
	0x10ba9, 0x10baf,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x1107f, 0x110c1,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11100, 0x11134,
	0x11136, 0x11143,
	0x11150, 0x11176,
	0x11180, 0x111c8,
	0x111cd, 0x111cd,
	0x111d0, 0x111da,
	0x111e1, 0x111f4,
	0x11200, 0x11211,
	0x11213, 0x1123d,
	0x112b0, 0x112ea,
	0x112f0, 0x112f9,
	0x11301, 0x11303,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133c, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134d,
	0x11357, 0x11357,
	0x1135d, 0x11363,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x11480, 0x114c7,
	0x114d0, 0x114d9,
	0x11580, 0x115b5,
	0x115b8, 0x115c9,
	0x11600, 0x11644,
	0x11650, 0x11659,
	0x11680, 0x116b7,
	0x116c0, 0x116c9,
	0x118a0, 0x118f2,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x12470, 0x12474,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16a60, 0x16a69,
	0x16a6e, 0x16a6f,
	0x16ad0, 0x16aed,
	0x16af0, 0x16af5,
	0x16b00, 0x16b45,
	0x16b50, 0x16b59,
	0x16b5b, 0x16b61,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f8f, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1bc9c, 0x1bca3,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1e800, 0x1e8c4,
	0x1e8c7, 0x1e8d6,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1eef0, 0x1eef1,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0bf,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0f5,
	0x1f100, 0x1f10c,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f16b,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f32c,
	0x1f330, 0x1f37d,
	0x1f380, 0x1f3ce,
	0x1f3d4, 0x1f3f7,
	0x1f400, 0x1f4fe,
	0x1f500, 0x1f54a,
	0x1f550, 0x1f579,
	0x1f57b, 0x1f5a3,
	0x1f5a5, 0x1f642,
	0x1f645, 0x1f6cf,
	0x1f6e0, 0x1f6ec,
	0x1f6f0, 0x1f6f3,
	0x1f700, 0x1f773,
	0x1f780, 0x1f7d4,
	0x1f800, 0x1f80b,
	0x1f810, 0x1f847,
	0x1f850, 0x1f859,
	0x1f860, 0x1f887,
	0x1f890, 0x1f8ad,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xf0000, 0xffffd,
	0x100000, 0x10fffd,
}; /* CR_Graph */

/* 'Lower': [[:Lower:]] */
static const OnigCodePoint CR_Lower[] = {
	633,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00df, 0x00f6,
	0x00f8, 0x00ff,
	0x0101, 0x0101,
	0x0103, 0x0103,
	0x0105, 0x0105,
	0x0107, 0x0107,
	0x0109, 0x0109,
	0x010b, 0x010b,
	0x010d, 0x010d,
	0x010f, 0x010f,
	0x0111, 0x0111,
	0x0113, 0x0113,
	0x0115, 0x0115,
	0x0117, 0x0117,
	0x0119, 0x0119,
	0x011b, 0x011b,
	0x011d, 0x011d,
	0x011f, 0x011f,
	0x0121, 0x0121,
	0x0123, 0x0123,
	0x0125, 0x0125,
	0x0127, 0x0127,
	0x0129, 0x0129,
	0x012b, 0x012b,
	0x012d, 0x012d,
	0x012f, 0x012f,
	0x0131, 0x0131,
	0x0133, 0x0133,
	0x0135, 0x0135,
	0x0137, 0x0138,
	0x013a, 0x013a,
	0x013c, 0x013c,
	0x013e, 0x013e,
	0x0140, 0x0140,
	0x0142, 0x0142,
	0x0144, 0x0144,
	0x0146, 0x0146,
	0x0148, 0x0149,
	0x014b, 0x014b,
	0x014d, 0x014d,
	0x014f, 0x014f,
	0x0151, 0x0151,
	0x0153, 0x0153,
	0x0155, 0x0155,
	0x0157, 0x0157,
	0x0159, 0x0159,
	0x015b, 0x015b,
	0x015d, 0x015d,
	0x015f, 0x015f,
	0x0161, 0x0161,
	0x0163, 0x0163,
	0x0165, 0x0165,
	0x0167, 0x0167,
	0x0169, 0x0169,
	0x016b, 0x016b,
	0x016d, 0x016d,
	0x016f, 0x016f,
	0x0171, 0x0171,
	0x0173, 0x0173,
	0x0175, 0x0175,
	0x0177, 0x0177,
	0x017a, 0x017a,
	0x017c, 0x017c,
	0x017e, 0x0180,
	0x0183, 0x0183,
	0x0185, 0x0185,
	0x0188, 0x0188,
	0x018c, 0x018d,
	0x0192, 0x0192,
	0x0195, 0x0195,
	0x0199, 0x019b,
	0x019e, 0x019e,
	0x01a1, 0x01a1,
	0x01a3, 0x01a3,
	0x01a5, 0x01a5,
	0x01a8, 0x01a8,
	0x01aa, 0x01ab,
	0x01ad, 0x01ad,
	0x01b0, 0x01b0,
	0x01b4, 0x01b4,
	0x01b6, 0x01b6,
	0x01b9, 0x01ba,
	0x01bd, 0x01bf,
	0x01c6, 0x01c6,
	0x01c9, 0x01c9,
	0x01cc, 0x01cc,
	0x01ce, 0x01ce,
	0x01d0, 0x01d0,
	0x01d2, 0x01d2,
	0x01d4, 0x01d4,
	0x01d6, 0x01d6,
	0x01d8, 0x01d8,
	0x01da, 0x01da,
	0x01dc, 0x01dd,
	0x01df, 0x01df,
	0x01e1, 0x01e1,
	0x01e3, 0x01e3,
	0x01e5, 0x01e5,
	0x01e7, 0x01e7,
	0x01e9, 0x01e9,
	0x01eb, 0x01eb,
	0x01ed, 0x01ed,
	0x01ef, 0x01f0,
	0x01f3, 0x01f3,
	0x01f5, 0x01f5,
	0x01f9, 0x01f9,
	0x01fb, 0x01fb,
	0x01fd, 0x01fd,
	0x01ff, 0x01ff,
	0x0201, 0x0201,
	0x0203, 0x0203,
	0x0205, 0x0205,
	0x0207, 0x0207,
	0x0209, 0x0209,
	0x020b, 0x020b,
	0x020d, 0x020d,
	0x020f, 0x020f,
	0x0211, 0x0211,
	0x0213, 0x0213,
	0x0215, 0x0215,
	0x0217, 0x0217,
	0x0219, 0x0219,
	0x021b, 0x021b,
	0x021d, 0x021d,
	0x021f, 0x021f,
	0x0221, 0x0221,
	0x0223, 0x0223,
	0x0225, 0x0225,
	0x0227, 0x0227,
	0x0229, 0x0229,
	0x022b, 0x022b,
	0x022d, 0x022d,
	0x022f, 0x022f,
	0x0231, 0x0231,
	0x0233, 0x0239,
	0x023c, 0x023c,
	0x023f, 0x0240,
	0x0242, 0x0242,
	0x0247, 0x0247,
	0x0249, 0x0249,
	0x024b, 0x024b,
	0x024d, 0x024d,
	0x024f, 0x0293,
	0x0295, 0x02b8,
	0x02c0, 0x02c1,
	0x02e0, 0x02e4,
	0x0345, 0x0345,
	0x0371, 0x0371,
	0x0373, 0x0373,
	0x0377, 0x0377,
	0x037a, 0x037d,
	0x0390, 0x0390,
	0x03ac, 0x03ce,
	0x03d0, 0x03d1,
	0x03d5, 0x03d7,
	0x03d9, 0x03d9,
	0x03db, 0x03db,
	0x03dd, 0x03dd,
	0x03df, 0x03df,
	0x03e1, 0x03e1,
	0x03e3, 0x03e3,
	0x03e5, 0x03e5,
	0x03e7, 0x03e7,
	0x03e9, 0x03e9,
	0x03eb, 0x03eb,
	0x03ed, 0x03ed,
	0x03ef, 0x03f3,
	0x03f5, 0x03f5,
	0x03f8, 0x03f8,
	0x03fb, 0x03fc,
	0x0430, 0x045f,
	0x0461, 0x0461,
	0x0463, 0x0463,
	0x0465, 0x0465,
	0x0467, 0x0467,
	0x0469, 0x0469,
	0x046b, 0x046b,
	0x046d, 0x046d,
	0x046f, 0x046f,
	0x0471, 0x0471,
	0x0473, 0x0473,
	0x0475, 0x0475,
	0x0477, 0x0477,
	0x0479, 0x0479,
	0x047b, 0x047b,
	0x047d, 0x047d,
	0x047f, 0x047f,
	0x0481, 0x0481,
	0x048b, 0x048b,
	0x048d, 0x048d,
	0x048f, 0x048f,
	0x0491, 0x0491,
	0x0493, 0x0493,
	0x0495, 0x0495,
	0x0497, 0x0497,
	0x0499, 0x0499,
	0x049b, 0x049b,
	0x049d, 0x049d,
	0x049f, 0x049f,
	0x04a1, 0x04a1,
	0x04a3, 0x04a3,
	0x04a5, 0x04a5,
	0x04a7, 0x04a7,
	0x04a9, 0x04a9,
	0x04ab, 0x04ab,
	0x04ad, 0x04ad,
	0x04af, 0x04af,
	0x04b1, 0x04b1,
	0x04b3, 0x04b3,
	0x04b5, 0x04b5,
	0x04b7, 0x04b7,
	0x04b9, 0x04b9,
	0x04bb, 0x04bb,
	0x04bd, 0x04bd,
	0x04bf, 0x04bf,
	0x04c2, 0x04c2,
	0x04c4, 0x04c4,
	0x04c6, 0x04c6,
	0x04c8, 0x04c8,
	0x04ca, 0x04ca,
	0x04cc, 0x04cc,
	0x04ce, 0x04cf,
	0x04d1, 0x04d1,
	0x04d3, 0x04d3,
	0x04d5, 0x04d5,
	0x04d7, 0x04d7,
	0x04d9, 0x04d9,
	0x04db, 0x04db,
	0x04dd, 0x04dd,
	0x04df, 0x04df,
	0x04e1, 0x04e1,
	0x04e3, 0x04e3,
	0x04e5, 0x04e5,
	0x04e7, 0x04e7,
	0x04e9, 0x04e9,
	0x04eb, 0x04eb,
	0x04ed, 0x04ed,
	0x04ef, 0x04ef,
	0x04f1, 0x04f1,
	0x04f3, 0x04f3,
	0x04f5, 0x04f5,
	0x04f7, 0x04f7,
	0x04f9, 0x04f9,
	0x04fb, 0x04fb,
	0x04fd, 0x04fd,
	0x04ff, 0x04ff,
	0x0501, 0x0501,
	0x0503, 0x0503,
	0x0505, 0x0505,
	0x0507, 0x0507,
	0x0509, 0x0509,
	0x050b, 0x050b,
	0x050d, 0x050d,
	0x050f, 0x050f,
	0x0511, 0x0511,
	0x0513, 0x0513,
	0x0515, 0x0515,
	0x0517, 0x0517,
	0x0519, 0x0519,
	0x051b, 0x051b,
	0x051d, 0x051d,
	0x051f, 0x051f,
	0x0521, 0x0521,
	0x0523, 0x0523,
	0x0525, 0x0525,
	0x0527, 0x0527,
	0x0529, 0x0529,
	0x052b, 0x052b,
	0x052d, 0x052d,
	0x052f, 0x052f,
	0x0561, 0x0587,
	0x1d00, 0x1dbf,
	0x1e01, 0x1e01,
	0x1e03, 0x1e03,
	0x1e05, 0x1e05,
	0x1e07, 0x1e07,
	0x1e09, 0x1e09,
	0x1e0b, 0x1e0b,
	0x1e0d, 0x1e0d,
	0x1e0f, 0x1e0f,
	0x1e11, 0x1e11,
	0x1e13, 0x1e13,
	0x1e15, 0x1e15,
	0x1e17, 0x1e17,
	0x1e19, 0x1e19,
	0x1e1b, 0x1e1b,
	0x1e1d, 0x1e1d,
	0x1e1f, 0x1e1f,
	0x1e21, 0x1e21,
	0x1e23, 0x1e23,
	0x1e25, 0x1e25,
	0x1e27, 0x1e27,
	0x1e29, 0x1e29,
	0x1e2b, 0x1e2b,
	0x1e2d, 0x1e2d,
	0x1e2f, 0x1e2f,
	0x1e31, 0x1e31,
	0x1e33, 0x1e33,
	0x1e35, 0x1e35,
	0x1e37, 0x1e37,
	0x1e39, 0x1e39,
	0x1e3b, 0x1e3b,
	0x1e3d, 0x1e3d,
	0x1e3f, 0x1e3f,
	0x1e41, 0x1e41,
	0x1e43, 0x1e43,
	0x1e45, 0x1e45,
	0x1e47, 0x1e47,
	0x1e49, 0x1e49,
	0x1e4b, 0x1e4b,
	0x1e4d, 0x1e4d,
	0x1e4f, 0x1e4f,
	0x1e51, 0x1e51,
	0x1e53, 0x1e53,
	0x1e55, 0x1e55,
	0x1e57, 0x1e57,
	0x1e59, 0x1e59,
	0x1e5b, 0x1e5b,
	0x1e5d, 0x1e5d,
	0x1e5f, 0x1e5f,
	0x1e61, 0x1e61,
	0x1e63, 0x1e63,
	0x1e65, 0x1e65,
	0x1e67, 0x1e67,
	0x1e69, 0x1e69,
	0x1e6b, 0x1e6b,
	0x1e6d, 0x1e6d,
	0x1e6f, 0x1e6f,
	0x1e71, 0x1e71,
	0x1e73, 0x1e73,
	0x1e75, 0x1e75,
	0x1e77, 0x1e77,
	0x1e79, 0x1e79,
	0x1e7b, 0x1e7b,
	0x1e7d, 0x1e7d,
	0x1e7f, 0x1e7f,
	0x1e81, 0x1e81,
	0x1e83, 0x1e83,
	0x1e85, 0x1e85,
	0x1e87, 0x1e87,
	0x1e89, 0x1e89,
	0x1e8b, 0x1e8b,
	0x1e8d, 0x1e8d,
	0x1e8f, 0x1e8f,
	0x1e91, 0x1e91,
	0x1e93, 0x1e93,
	0x1e95, 0x1e9d,
	0x1e9f, 0x1e9f,
	0x1ea1, 0x1ea1,
	0x1ea3, 0x1ea3,
	0x1ea5, 0x1ea5,
	0x1ea7, 0x1ea7,
	0x1ea9, 0x1ea9,
	0x1eab, 0x1eab,
	0x1ead, 0x1ead,
	0x1eaf, 0x1eaf,
	0x1eb1, 0x1eb1,
	0x1eb3, 0x1eb3,
	0x1eb5, 0x1eb5,
	0x1eb7, 0x1eb7,
	0x1eb9, 0x1eb9,
	0x1ebb, 0x1ebb,
	0x1ebd, 0x1ebd,
	0x1ebf, 0x1ebf,
	0x1ec1, 0x1ec1,
	0x1ec3, 0x1ec3,
	0x1ec5, 0x1ec5,
	0x1ec7, 0x1ec7,
	0x1ec9, 0x1ec9,
	0x1ecb, 0x1ecb,
	0x1ecd, 0x1ecd,
	0x1ecf, 0x1ecf,
	0x1ed1, 0x1ed1,
	0x1ed3, 0x1ed3,
	0x1ed5, 0x1ed5,
	0x1ed7, 0x1ed7,
	0x1ed9, 0x1ed9,
	0x1edb, 0x1edb,
	0x1edd, 0x1edd,
	0x1edf, 0x1edf,
	0x1ee1, 0x1ee1,
	0x1ee3, 0x1ee3,
	0x1ee5, 0x1ee5,
	0x1ee7, 0x1ee7,
	0x1ee9, 0x1ee9,
	0x1eeb, 0x1eeb,
	0x1eed, 0x1eed,
	0x1eef, 0x1eef,
	0x1ef1, 0x1ef1,
	0x1ef3, 0x1ef3,
	0x1ef5, 0x1ef5,
	0x1ef7, 0x1ef7,
	0x1ef9, 0x1ef9,
	0x1efb, 0x1efb,
	0x1efd, 0x1efd,
	0x1eff, 0x1f07,
	0x1f10, 0x1f15,
	0x1f20, 0x1f27,
	0x1f30, 0x1f37,
	0x1f40, 0x1f45,
	0x1f50, 0x1f57,
	0x1f60, 0x1f67,
	0x1f70, 0x1f7d,
	0x1f80, 0x1f87,
	0x1f90, 0x1f97,
	0x1fa0, 0x1fa7,
	0x1fb0, 0x1fb4,
	0x1fb6, 0x1fb7,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fc7,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fd7,
	0x1fe0, 0x1fe7,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ff7,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x210a, 0x210a,
	0x210e, 0x210f,
	0x2113, 0x2113,
	0x212f, 0x212f,
	0x2134, 0x2134,
	0x2139, 0x2139,
	0x213c, 0x213d,
	0x2146, 0x2149,
	0x214e, 0x214e,
	0x2170, 0x217f,
	0x2184, 0x2184,
	0x24d0, 0x24e9,
	0x2c30, 0x2c5e,
	0x2c61, 0x2c61,
	0x2c65, 0x2c66,
	0x2c68, 0x2c68,
	0x2c6a, 0x2c6a,
	0x2c6c, 0x2c6c,
	0x2c71, 0x2c71,
	0x2c73, 0x2c74,
	0x2c76, 0x2c7d,
	0x2c81, 0x2c81,
	0x2c83, 0x2c83,
	0x2c85, 0x2c85,
	0x2c87, 0x2c87,
	0x2c89, 0x2c89,
	0x2c8b, 0x2c8b,
	0x2c8d, 0x2c8d,
	0x2c8f, 0x2c8f,
	0x2c91, 0x2c91,
	0x2c93, 0x2c93,
	0x2c95, 0x2c95,
	0x2c97, 0x2c97,
	0x2c99, 0x2c99,
	0x2c9b, 0x2c9b,
	0x2c9d, 0x2c9d,
	0x2c9f, 0x2c9f,
	0x2ca1, 0x2ca1,
	0x2ca3, 0x2ca3,
	0x2ca5, 0x2ca5,
	0x2ca7, 0x2ca7,
	0x2ca9, 0x2ca9,
	0x2cab, 0x2cab,
	0x2cad, 0x2cad,
	0x2caf, 0x2caf,
	0x2cb1, 0x2cb1,
	0x2cb3, 0x2cb3,
	0x2cb5, 0x2cb5,
	0x2cb7, 0x2cb7,
	0x2cb9, 0x2cb9,
	0x2cbb, 0x2cbb,
	0x2cbd, 0x2cbd,
	0x2cbf, 0x2cbf,
	0x2cc1, 0x2cc1,
	0x2cc3, 0x2cc3,
	0x2cc5, 0x2cc5,
	0x2cc7, 0x2cc7,
	0x2cc9, 0x2cc9,
	0x2ccb, 0x2ccb,
	0x2ccd, 0x2ccd,
	0x2ccf, 0x2ccf,
	0x2cd1, 0x2cd1,
	0x2cd3, 0x2cd3,
	0x2cd5, 0x2cd5,
	0x2cd7, 0x2cd7,
	0x2cd9, 0x2cd9,
	0x2cdb, 0x2cdb,
	0x2cdd, 0x2cdd,
	0x2cdf, 0x2cdf,
	0x2ce1, 0x2ce1,
	0x2ce3, 0x2ce4,
	0x2cec, 0x2cec,
	0x2cee, 0x2cee,
	0x2cf3, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0xa641, 0xa641,
	0xa643, 0xa643,
	0xa645, 0xa645,
	0xa647, 0xa647,
	0xa649, 0xa649,
	0xa64b, 0xa64b,
	0xa64d, 0xa64d,
	0xa64f, 0xa64f,
	0xa651, 0xa651,
	0xa653, 0xa653,
	0xa655, 0xa655,
	0xa657, 0xa657,
	0xa659, 0xa659,
	0xa65b, 0xa65b,
	0xa65d, 0xa65d,
	0xa65f, 0xa65f,
	0xa661, 0xa661,
	0xa663, 0xa663,
	0xa665, 0xa665,
	0xa667, 0xa667,
	0xa669, 0xa669,
	0xa66b, 0xa66b,
	0xa66d, 0xa66d,
	0xa681, 0xa681,
	0xa683, 0xa683,
	0xa685, 0xa685,
	0xa687, 0xa687,
	0xa689, 0xa689,
	0xa68b, 0xa68b,
	0xa68d, 0xa68d,
	0xa68f, 0xa68f,
	0xa691, 0xa691,
	0xa693, 0xa693,
	0xa695, 0xa695,
	0xa697, 0xa697,
	0xa699, 0xa699,
	0xa69b, 0xa69d,
	0xa723, 0xa723,
	0xa725, 0xa725,
	0xa727, 0xa727,
	0xa729, 0xa729,
	0xa72b, 0xa72b,
	0xa72d, 0xa72d,
	0xa72f, 0xa731,
	0xa733, 0xa733,
	0xa735, 0xa735,
	0xa737, 0xa737,
	0xa739, 0xa739,
	0xa73b, 0xa73b,
	0xa73d, 0xa73d,
	0xa73f, 0xa73f,
	0xa741, 0xa741,
	0xa743, 0xa743,
	0xa745, 0xa745,
	0xa747, 0xa747,
	0xa749, 0xa749,
	0xa74b, 0xa74b,
	0xa74d, 0xa74d,
	0xa74f, 0xa74f,
	0xa751, 0xa751,
	0xa753, 0xa753,
	0xa755, 0xa755,
	0xa757, 0xa757,
	0xa759, 0xa759,
	0xa75b, 0xa75b,
	0xa75d, 0xa75d,
	0xa75f, 0xa75f,
	0xa761, 0xa761,
	0xa763, 0xa763,
	0xa765, 0xa765,
	0xa767, 0xa767,
	0xa769, 0xa769,
	0xa76b, 0xa76b,
	0xa76d, 0xa76d,
	0xa76f, 0xa778,
	0xa77a, 0xa77a,
	0xa77c, 0xa77c,
	0xa77f, 0xa77f,
	0xa781, 0xa781,
	0xa783, 0xa783,
	0xa785, 0xa785,
	0xa787, 0xa787,
	0xa78c, 0xa78c,
	0xa78e, 0xa78e,
	0xa791, 0xa791,
	0xa793, 0xa795,
	0xa797, 0xa797,
	0xa799, 0xa799,
	0xa79b, 0xa79b,
	0xa79d, 0xa79d,
	0xa79f, 0xa79f,
	0xa7a1, 0xa7a1,
	0xa7a3, 0xa7a3,
	0xa7a5, 0xa7a5,
	0xa7a7, 0xa7a7,
	0xa7a9, 0xa7a9,
	0xa7f8, 0xa7fa,
	0xab30, 0xab5a,
	0xab5c, 0xab5f,
	0xab64, 0xab65,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff41, 0xff5a,
	0x10428, 0x1044f,
	0x118c0, 0x118df,
	0x1d41a, 0x1d433,
	0x1d44e, 0x1d454,
	0x1d456, 0x1d467,
	0x1d482, 0x1d49b,
	0x1d4b6, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d4cf,
	0x1d4ea, 0x1d503,
	0x1d51e, 0x1d537,
	0x1d552, 0x1d56b,
	0x1d586, 0x1d59f,
	0x1d5ba, 0x1d5d3,
	0x1d5ee, 0x1d607,
	0x1d622, 0x1d63b,
	0x1d656, 0x1d66f,
	0x1d68a, 0x1d6a5,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6e1,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d71b,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d755,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d78f,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7c9,
	0x1d7cb, 0x1d7cb,
}; /* CR_Lower */

/* 'Print': [[:Print:]] */
static const OnigCodePoint CR_Print[] = {
	602,
	0x0020, 0x007e,
	0x00a0, 0x0377,
	0x037a, 0x037f,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x058d, 0x058f,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x061c,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x08a0, 0x08b2,
	0x08e4, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c00, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c81, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d01, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0de6, 0x0def,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1ab0, 0x1abe,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cc0, 0x1cc7,
	0x1cd0, 0x1cf6,
	0x1cf8, 0x1cf9,
	0x1d00, 0x1df5,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2027,
	0x202a, 0x2064,
	0x2066, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20bd,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23fa,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x2b73,
	0x2b76, 0x2b95,
	0x2b98, 0x2bb9,
	0x2bbd, 0x2bc8,
	0x2bca, 0x2bd1,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf3,
	0x2cf9, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e42,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcc,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa69d,
	0xa69f, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9fe,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaac2,
	0xaadb, 0xaaf6,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xe000, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe2d,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xfffd,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018c,
	0x10190, 0x1019b,
	0x101a0, 0x101a0,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x102e0, 0x102fb,
	0x10300, 0x10323,
	0x10330, 0x1034a,
	0x10350, 0x1037a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x1056f, 0x1056f,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1089e,
	0x108a7, 0x108af,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a9f,
	0x10ac0, 0x10ae6,
	0x10aeb, 0x10af6,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b91,
	0x10b99, 0x10b9c,
	0x10ba9, 0x10baf,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x1107f, 0x110c1,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11100, 0x11134,
	0x11136, 0x11143,
	0x11150, 0x11176,
	0x11180, 0x111c8,
	0x111cd, 0x111cd,
	0x111d0, 0x111da,
	0x111e1, 0x111f4,
	0x11200, 0x11211,
	0x11213, 0x1123d,
	0x112b0, 0x112ea,
	0x112f0, 0x112f9,
	0x11301, 0x11303,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133c, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134d,
	0x11357, 0x11357,
	0x1135d, 0x11363,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x11480, 0x114c7,
	0x114d0, 0x114d9,
	0x11580, 0x115b5,
	0x115b8, 0x115c9,
	0x11600, 0x11644,
	0x11650, 0x11659,
	0x11680, 0x116b7,
	0x116c0, 0x116c9,
	0x118a0, 0x118f2,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x12470, 0x12474,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16a60, 0x16a69,
	0x16a6e, 0x16a6f,
	0x16ad0, 0x16aed,
	0x16af0, 0x16af5,
	0x16b00, 0x16b45,
	0x16b50, 0x16b59,
	0x16b5b, 0x16b61,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f8f, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1bc9c, 0x1bca3,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1e800, 0x1e8c4,
	0x1e8c7, 0x1e8d6,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1eef0, 0x1eef1,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0bf,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0f5,
	0x1f100, 0x1f10c,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f16b,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f32c,
	0x1f330, 0x1f37d,
	0x1f380, 0x1f3ce,
	0x1f3d4, 0x1f3f7,
	0x1f400, 0x1f4fe,
	0x1f500, 0x1f54a,
	0x1f550, 0x1f579,
	0x1f57b, 0x1f5a3,
	0x1f5a5, 0x1f642,
	0x1f645, 0x1f6cf,
	0x1f6e0, 0x1f6ec,
	0x1f6f0, 0x1f6f3,
	0x1f700, 0x1f773,
	0x1f780, 0x1f7d4,
	0x1f800, 0x1f80b,
	0x1f810, 0x1f847,
	0x1f850, 0x1f859,
	0x1f860, 0x1f887,
	0x1f890, 0x1f8ad,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xf0000, 0xffffd,
	0x100000, 0x10fffd,
}; /* CR_Print */

/* 'Punct': [[:Punct:]] */
static const OnigCodePoint CR_Punct[] = {
	155,
	0x0021, 0x0023,
	0x0025, 0x002a,
	0x002c, 0x002f,
	0x003a, 0x003b,
	0x003f, 0x0040,
	0x005b, 0x005d,
	0x005f, 0x005f,
	0x007b, 0x007b,
	0x007d, 0x007d,
	0x00a1, 0x00a1,
	0x00a7, 0x00a7,
	0x00ab, 0x00ab,
	0x00b6, 0x00b7,
	0x00bb, 0x00bb,
	0x00bf, 0x00bf,
	0x037e, 0x037e,
	0x0387, 0x0387,
	0x055a, 0x055f,
	0x0589, 0x058a,
	0x05be, 0x05be,
	0x05c0, 0x05c0,
	0x05c3, 0x05c3,
	0x05c6, 0x05c6,
	0x05f3, 0x05f4,
	0x0609, 0x060a,
	0x060c, 0x060d,
	0x061b, 0x061b,
	0x061e, 0x061f,
	0x066a, 0x066d,
	0x06d4, 0x06d4,
	0x0700, 0x070d,
	0x07f7, 0x07f9,
	0x0830, 0x083e,
	0x085e, 0x085e,
	0x0964, 0x0965,
	0x0970, 0x0970,
	0x0af0, 0x0af0,
	0x0df4, 0x0df4,
	0x0e4f, 0x0e4f,
	0x0e5a, 0x0e5b,
	0x0f04, 0x0f12,
	0x0f14, 0x0f14,
	0x0f3a, 0x0f3d,
	0x0f85, 0x0f85,
	0x0fd0, 0x0fd4,
	0x0fd9, 0x0fda,
	0x104a, 0x104f,
	0x10fb, 0x10fb,
	0x1360, 0x1368,
	0x1400, 0x1400,
	0x166d, 0x166e,
	0x169b, 0x169c,
	0x16eb, 0x16ed,
	0x1735, 0x1736,
	0x17d4, 0x17d6,
	0x17d8, 0x17da,
	0x1800, 0x180a,
	0x1944, 0x1945,
	0x1a1e, 0x1a1f,
	0x1aa0, 0x1aa6,
	0x1aa8, 0x1aad,
	0x1b5a, 0x1b60,
	0x1bfc, 0x1bff,
	0x1c3b, 0x1c3f,
	0x1c7e, 0x1c7f,
	0x1cc0, 0x1cc7,
	0x1cd3, 0x1cd3,
	0x2010, 0x2027,
	0x2030, 0x2043,
	0x2045, 0x2051,
	0x2053, 0x205e,
	0x207d, 0x207e,
	0x208d, 0x208e,
	0x2308, 0x230b,
	0x2329, 0x232a,
	0x2768, 0x2775,
	0x27c5, 0x27c6,
	0x27e6, 0x27ef,
	0x2983, 0x2998,
	0x29d8, 0x29db,
	0x29fc, 0x29fd,
	0x2cf9, 0x2cfc,
	0x2cfe, 0x2cff,
	0x2d70, 0x2d70,
	0x2e00, 0x2e2e,
	0x2e30, 0x2e42,
	0x3001, 0x3003,
	0x3008, 0x3011,
	0x3014, 0x301f,
	0x3030, 0x3030,
	0x303d, 0x303d,
	0x30a0, 0x30a0,
	0x30fb, 0x30fb,
	0xa4fe, 0xa4ff,
	0xa60d, 0xa60f,
	0xa673, 0xa673,
	0xa67e, 0xa67e,
	0xa6f2, 0xa6f7,
	0xa874, 0xa877,
	0xa8ce, 0xa8cf,
	0xa8f8, 0xa8fa,
	0xa92e, 0xa92f,
	0xa95f, 0xa95f,
	0xa9c1, 0xa9cd,
	0xa9de, 0xa9df,
	0xaa5c, 0xaa5f,
	0xaade, 0xaadf,
	0xaaf0, 0xaaf1,
	0xabeb, 0xabeb,
	0xfd3e, 0xfd3f,
	0xfe10, 0xfe19,
	0xfe30, 0xfe52,
	0xfe54, 0xfe61,
	0xfe63, 0xfe63,
	0xfe68, 0xfe68,
	0xfe6a, 0xfe6b,
	0xff01, 0xff03,
	0xff05, 0xff0a,
	0xff0c, 0xff0f,
	0xff1a, 0xff1b,
	0xff1f, 0xff20,
	0xff3b, 0xff3d,
	0xff3f, 0xff3f,
	0xff5b, 0xff5b,
	0xff5d, 0xff5d,
	0xff5f, 0xff65,
	0x10100, 0x10102,
	0x1039f, 0x1039f,
	0x103d0, 0x103d0,
	0x1056f, 0x1056f,
	0x10857, 0x10857,
	0x1091f, 0x1091f,
	0x1093f, 0x1093f,
	0x10a50, 0x10a58,
	0x10a7f, 0x10a7f,
	0x10af0, 0x10af6,
	0x10b39, 0x10b3f,
	0x10b99, 0x10b9c,
	0x11047, 0x1104d,
	0x110bb, 0x110bc,
	0x110be, 0x110c1,
	0x11140, 0x11143,
	0x11174, 0x11175,
	0x111c5, 0x111c8,
	0x111cd, 0x111cd,
	0x11238, 0x1123d,
	0x114c6, 0x114c6,
	0x115c1, 0x115c9,
	0x11641, 0x11643,
	0x12470, 0x12474,
	0x16a6e, 0x16a6f,
	0x16af5, 0x16af5,
	0x16b37, 0x16b3b,
	0x16b44, 0x16b44,
	0x1bc9f, 0x1bc9f,
}; /* CR_Punct */

/* 'Space': [[:Space:]] */
static const OnigCodePoint CR_Space[] = {
	10,
	0x0009, 0x000d,
	0x0020, 0x0020,
	0x0085, 0x0085,
	0x00a0, 0x00a0,
	0x1680, 0x1680,
	0x2000, 0x200a,
	0x2028, 0x2029,
	0x202f, 0x202f,
	0x205f, 0x205f,
	0x3000, 0x3000,
}; /* CR_Space */

/* 'Upper': [[:Upper:]] */
static const OnigCodePoint CR_Upper[] = {
	627,
	0x0041, 0x005a,
	0x00c0, 0x00d6,
	0x00d8, 0x00de,
	0x0100, 0x0100,
	0x0102, 0x0102,
	0x0104, 0x0104,
	0x0106, 0x0106,
	0x0108, 0x0108,
	0x010a, 0x010a,
	0x010c, 0x010c,
	0x010e, 0x010e,
	0x0110, 0x0110,
	0x0112, 0x0112,
	0x0114, 0x0114,
	0x0116, 0x0116,
	0x0118, 0x0118,
	0x011a, 0x011a,
	0x011c, 0x011c,
	0x011e, 0x011e,
	0x0120, 0x0120,
	0x0122, 0x0122,
	0x0124, 0x0124,
	0x0126, 0x0126,
	0x0128, 0x0128,
	0x012a, 0x012a,
	0x012c, 0x012c,
	0x012e, 0x012e,
	0x0130, 0x0130,
	0x0132, 0x0132,
	0x0134, 0x0134,
	0x0136, 0x0136,
	0x0139, 0x0139,
	0x013b, 0x013b,
	0x013d, 0x013d,
	0x013f, 0x013f,
	0x0141, 0x0141,
	0x0143, 0x0143,
	0x0145, 0x0145,
	0x0147, 0x0147,
	0x014a, 0x014a,
	0x014c, 0x014c,
	0x014e, 0x014e,
	0x0150, 0x0150,
	0x0152, 0x0152,
	0x0154, 0x0154,
	0x0156, 0x0156,
	0x0158, 0x0158,
	0x015a, 0x015a,
	0x015c, 0x015c,
	0x015e, 0x015e,
	0x0160, 0x0160,
	0x0162, 0x0162,
	0x0164, 0x0164,
	0x0166, 0x0166,
	0x0168, 0x0168,
	0x016a, 0x016a,
	0x016c, 0x016c,
	0x016e, 0x016e,
	0x0170, 0x0170,
	0x0172, 0x0172,
	0x0174, 0x0174,
	0x0176, 0x0176,
	0x0178, 0x0179,
	0x017b, 0x017b,
	0x017d, 0x017d,
	0x0181, 0x0182,
	0x0184, 0x0184,
	0x0186, 0x0187,
	0x0189, 0x018b,
	0x018e, 0x0191,
	0x0193, 0x0194,
	0x0196, 0x0198,
	0x019c, 0x019d,
	0x019f, 0x01a0,
	0x01a2, 0x01a2,
	0x01a4, 0x01a4,
	0x01a6, 0x01a7,
	0x01a9, 0x01a9,
	0x01ac, 0x01ac,
	0x01ae, 0x01af,
	0x01b1, 0x01b3,
	0x01b5, 0x01b5,
	0x01b7, 0x01b8,
	0x01bc, 0x01bc,
	0x01c4, 0x01c4,
	0x01c7, 0x01c7,
	0x01ca, 0x01ca,
	0x01cd, 0x01cd,
	0x01cf, 0x01cf,
	0x01d1, 0x01d1,
	0x01d3, 0x01d3,
	0x01d5, 0x01d5,
	0x01d7, 0x01d7,
	0x01d9, 0x01d9,
	0x01db, 0x01db,
	0x01de, 0x01de,
	0x01e0, 0x01e0,
	0x01e2, 0x01e2,
	0x01e4, 0x01e4,
	0x01e6, 0x01e6,
	0x01e8, 0x01e8,
	0x01ea, 0x01ea,
	0x01ec, 0x01ec,
	0x01ee, 0x01ee,
	0x01f1, 0x01f1,
	0x01f4, 0x01f4,
	0x01f6, 0x01f8,
	0x01fa, 0x01fa,
	0x01fc, 0x01fc,
	0x01fe, 0x01fe,
	0x0200, 0x0200,
	0x0202, 0x0202,
	0x0204, 0x0204,
	0x0206, 0x0206,
	0x0208, 0x0208,
	0x020a, 0x020a,
	0x020c, 0x020c,
	0x020e, 0x020e,
	0x0210, 0x0210,
	0x0212, 0x0212,
	0x0214, 0x0214,
	0x0216, 0x0216,
	0x0218, 0x0218,
	0x021a, 0x021a,
	0x021c, 0x021c,
	0x021e, 0x021e,
	0x0220, 0x0220,
	0x0222, 0x0222,
	0x0224, 0x0224,
	0x0226, 0x0226,
	0x0228, 0x0228,
	0x022a, 0x022a,
	0x022c, 0x022c,
	0x022e, 0x022e,
	0x0230, 0x0230,
	0x0232, 0x0232,
	0x023a, 0x023b,
	0x023d, 0x023e,
	0x0241, 0x0241,
	0x0243, 0x0246,
	0x0248, 0x0248,
	0x024a, 0x024a,
	0x024c, 0x024c,
	0x024e, 0x024e,
	0x0370, 0x0370,
	0x0372, 0x0372,
	0x0376, 0x0376,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x038f,
	0x0391, 0x03a1,
	0x03a3, 0x03ab,
	0x03cf, 0x03cf,
	0x03d2, 0x03d4,
	0x03d8, 0x03d8,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03e2,
	0x03e4, 0x03e4,
	0x03e6, 0x03e6,
	0x03e8, 0x03e8,
	0x03ea, 0x03ea,
	0x03ec, 0x03ec,
	0x03ee, 0x03ee,
	0x03f4, 0x03f4,
	0x03f7, 0x03f7,
	0x03f9, 0x03fa,
	0x03fd, 0x042f,
	0x0460, 0x0460,
	0x0462, 0x0462,
	0x0464, 0x0464,
	0x0466, 0x0466,
	0x0468, 0x0468,
	0x046a, 0x046a,
	0x046c, 0x046c,
	0x046e, 0x046e,
	0x0470, 0x0470,
	0x0472, 0x0472,
	0x0474, 0x0474,
	0x0476, 0x0476,
	0x0478, 0x0478,
	0x047a, 0x047a,
	0x047c, 0x047c,
	0x047e, 0x047e,
	0x0480, 0x0480,
	0x048a, 0x048a,
	0x048c, 0x048c,
	0x048e, 0x048e,
	0x0490, 0x0490,
	0x0492, 0x0492,
	0x0494, 0x0494,
	0x0496, 0x0496,
	0x0498, 0x0498,
	0x049a, 0x049a,
	0x049c, 0x049c,
	0x049e, 0x049e,
	0x04a0, 0x04a0,
	0x04a2, 0x04a2,
	0x04a4, 0x04a4,
	0x04a6, 0x04a6,
	0x04a8, 0x04a8,
	0x04aa, 0x04aa,
	0x04ac, 0x04ac,
	0x04ae, 0x04ae,
	0x04b0, 0x04b0,
	0x04b2, 0x04b2,
	0x04b4, 0x04b4,
	0x04b6, 0x04b6,
	0x04b8, 0x04b8,
	0x04ba, 0x04ba,
	0x04bc, 0x04bc,
	0x04be, 0x04be,
	0x04c0, 0x04c1,
	0x04c3, 0x04c3,
	0x04c5, 0x04c5,
	0x04c7, 0x04c7,
	0x04c9, 0x04c9,
	0x04cb, 0x04cb,
	0x04cd, 0x04cd,
	0x04d0, 0x04d0,
	0x04d2, 0x04d2,
	0x04d4, 0x04d4,
	0x04d6, 0x04d6,
	0x04d8, 0x04d8,
	0x04da, 0x04da,
	0x04dc, 0x04dc,
	0x04de, 0x04de,
	0x04e0, 0x04e0,
	0x04e2, 0x04e2,
	0x04e4, 0x04e4,
	0x04e6, 0x04e6,
	0x04e8, 0x04e8,
	0x04ea, 0x04ea,
	0x04ec, 0x04ec,
	0x04ee, 0x04ee,
	0x04f0, 0x04f0,
	0x04f2, 0x04f2,
	0x04f4, 0x04f4,
	0x04f6, 0x04f6,
	0x04f8, 0x04f8,
	0x04fa, 0x04fa,
	0x04fc, 0x04fc,
	0x04fe, 0x04fe,
	0x0500, 0x0500,
	0x0502, 0x0502,
	0x0504, 0x0504,
	0x0506, 0x0506,
	0x0508, 0x0508,
	0x050a, 0x050a,
	0x050c, 0x050c,
	0x050e, 0x050e,
	0x0510, 0x0510,
	0x0512, 0x0512,
	0x0514, 0x0514,
	0x0516, 0x0516,
	0x0518, 0x0518,
	0x051a, 0x051a,
	0x051c, 0x051c,
	0x051e, 0x051e,
	0x0520, 0x0520,
	0x0522, 0x0522,
	0x0524, 0x0524,
	0x0526, 0x0526,
	0x0528, 0x0528,
	0x052a, 0x052a,
	0x052c, 0x052c,
	0x052e, 0x052e,
	0x0531, 0x0556,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x1e00, 0x1e00,
	0x1e02, 0x1e02,
	0x1e04, 0x1e04,
	0x1e06, 0x1e06,
	0x1e08, 0x1e08,
	0x1e0a, 0x1e0a,
	0x1e0c, 0x1e0c,
	0x1e0e, 0x1e0e,
	0x1e10, 0x1e10,
	0x1e12, 0x1e12,
	0x1e14, 0x1e14,
	0x1e16, 0x1e16,
	0x1e18, 0x1e18,
	0x1e1a, 0x1e1a,
	0x1e1c, 0x1e1c,
	0x1e1e, 0x1e1e,
	0x1e20, 0x1e20,
	0x1e22, 0x1e22,
	0x1e24, 0x1e24,
	0x1e26, 0x1e26,
	0x1e28, 0x1e28,
	0x1e2a, 0x1e2a,
	0x1e2c, 0x1e2c,
	0x1e2e, 0x1e2e,
	0x1e30, 0x1e30,
	0x1e32, 0x1e32,
	0x1e34, 0x1e34,
	0x1e36, 0x1e36,
	0x1e38, 0x1e38,
	0x1e3a, 0x1e3a,
	0x1e3c, 0x1e3c,
	0x1e3e, 0x1e3e,
	0x1e40, 0x1e40,
	0x1e42, 0x1e42,
	0x1e44, 0x1e44,
	0x1e46, 0x1e46,
	0x1e48, 0x1e48,
	0x1e4a, 0x1e4a,
	0x1e4c, 0x1e4c,
	0x1e4e, 0x1e4e,
	0x1e50, 0x1e50,
	0x1e52, 0x1e52,
	0x1e54, 0x1e54,
	0x1e56, 0x1e56,
	0x1e58, 0x1e58,
	0x1e5a, 0x1e5a,
	0x1e5c, 0x1e5c,
	0x1e5e, 0x1e5e,
	0x1e60, 0x1e60,
	0x1e62, 0x1e62,
	0x1e64, 0x1e64,
	0x1e66, 0x1e66,
	0x1e68, 0x1e68,
	0x1e6a, 0x1e6a,
	0x1e6c, 0x1e6c,
	0x1e6e, 0x1e6e,
	0x1e70, 0x1e70,
	0x1e72, 0x1e72,
	0x1e74, 0x1e74,
	0x1e76, 0x1e76,
	0x1e78, 0x1e78,
	0x1e7a, 0x1e7a,
	0x1e7c, 0x1e7c,
	0x1e7e, 0x1e7e,
	0x1e80, 0x1e80,
	0x1e82, 0x1e82,
	0x1e84, 0x1e84,
	0x1e86, 0x1e86,
	0x1e88, 0x1e88,
	0x1e8a, 0x1e8a,
	0x1e8c, 0x1e8c,
	0x1e8e, 0x1e8e,
	0x1e90, 0x1e90,
	0x1e92, 0x1e92,
	0x1e94, 0x1e94,
	0x1e9e, 0x1e9e,
	0x1ea0, 0x1ea0,
	0x1ea2, 0x1ea2,
	0x1ea4, 0x1ea4,
	0x1ea6, 0x1ea6,
	0x1ea8, 0x1ea8,
	0x1eaa, 0x1eaa,
	0x1eac, 0x1eac,
	0x1eae, 0x1eae,
	0x1eb0, 0x1eb0,
	0x1eb2, 0x1eb2,
	0x1eb4, 0x1eb4,
	0x1eb6, 0x1eb6,
	0x1eb8, 0x1eb8,
	0x1eba, 0x1eba,
	0x1ebc, 0x1ebc,
	0x1ebe, 0x1ebe,
	0x1ec0, 0x1ec0,
	0x1ec2, 0x1ec2,
	0x1ec4, 0x1ec4,
	0x1ec6, 0x1ec6,
	0x1ec8, 0x1ec8,
	0x1eca, 0x1eca,
	0x1ecc, 0x1ecc,
	0x1ece, 0x1ece,
	0x1ed0, 0x1ed0,
	0x1ed2, 0x1ed2,
	0x1ed4, 0x1ed4,
	0x1ed6, 0x1ed6,
	0x1ed8, 0x1ed8,
	0x1eda, 0x1eda,
	0x1edc, 0x1edc,
	0x1ede, 0x1ede,
	0x1ee0, 0x1ee0,
	0x1ee2, 0x1ee2,
	0x1ee4, 0x1ee4,
	0x1ee6, 0x1ee6,
	0x1ee8, 0x1ee8,
	0x1eea, 0x1eea,
	0x1eec, 0x1eec,
	0x1eee, 0x1eee,
	0x1ef0, 0x1ef0,
	0x1ef2, 0x1ef2,
	0x1ef4, 0x1ef4,
	0x1ef6, 0x1ef6,
	0x1ef8, 0x1ef8,
	0x1efa, 0x1efa,
	0x1efc, 0x1efc,
	0x1efe, 0x1efe,
	0x1f08, 0x1f0f,
	0x1f18, 0x1f1d,
	0x1f28, 0x1f2f,
	0x1f38, 0x1f3f,
	0x1f48, 0x1f4d,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f5f,
	0x1f68, 0x1f6f,
	0x1fb8, 0x1fbb,
	0x1fc8, 0x1fcb,
	0x1fd8, 0x1fdb,
	0x1fe8, 0x1fec,
	0x1ff8, 0x1ffb,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210b, 0x210d,
	0x2110, 0x2112,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x2130, 0x2133,
	0x213e, 0x213f,
	0x2145, 0x2145,
	0x2160, 0x216f,
	0x2183, 0x2183,
	0x24b6, 0x24cf,
	0x2c00, 0x2c2e,
	0x2c60, 0x2c60,
	0x2c62, 0x2c64,
	0x2c67, 0x2c67,
	0x2c69, 0x2c69,
	0x2c6b, 0x2c6b,
	0x2c6d, 0x2c70,
	0x2c72, 0x2c72,
	0x2c75, 0x2c75,
	0x2c7e, 0x2c80,
	0x2c82, 0x2c82,
	0x2c84, 0x2c84,
	0x2c86, 0x2c86,
	0x2c88, 0x2c88,
	0x2c8a, 0x2c8a,
	0x2c8c, 0x2c8c,
	0x2c8e, 0x2c8e,
	0x2c90, 0x2c90,
	0x2c92, 0x2c92,
	0x2c94, 0x2c94,
	0x2c96, 0x2c96,
	0x2c98, 0x2c98,
	0x2c9a, 0x2c9a,
	0x2c9c, 0x2c9c,
	0x2c9e, 0x2c9e,
	0x2ca0, 0x2ca0,
	0x2ca2, 0x2ca2,
	0x2ca4, 0x2ca4,
	0x2ca6, 0x2ca6,
	0x2ca8, 0x2ca8,
	0x2caa, 0x2caa,
	0x2cac, 0x2cac,
	0x2cae, 0x2cae,
	0x2cb0, 0x2cb0,
	0x2cb2, 0x2cb2,
	0x2cb4, 0x2cb4,
	0x2cb6, 0x2cb6,
	0x2cb8, 0x2cb8,
	0x2cba, 0x2cba,
	0x2cbc, 0x2cbc,
	0x2cbe, 0x2cbe,
	0x2cc0, 0x2cc0,
	0x2cc2, 0x2cc2,
	0x2cc4, 0x2cc4,
	0x2cc6, 0x2cc6,
	0x2cc8, 0x2cc8,
	0x2cca, 0x2cca,
	0x2ccc, 0x2ccc,
	0x2cce, 0x2cce,
	0x2cd0, 0x2cd0,
	0x2cd2, 0x2cd2,
	0x2cd4, 0x2cd4,
	0x2cd6, 0x2cd6,
	0x2cd8, 0x2cd8,
	0x2cda, 0x2cda,
	0x2cdc, 0x2cdc,
	0x2cde, 0x2cde,
	0x2ce0, 0x2ce0,
	0x2ce2, 0x2ce2,
	0x2ceb, 0x2ceb,
	0x2ced, 0x2ced,
	0x2cf2, 0x2cf2,
	0xa640, 0xa640,
	0xa642, 0xa642,
	0xa644, 0xa644,
	0xa646, 0xa646,
	0xa648, 0xa648,
	0xa64a, 0xa64a,
	0xa64c, 0xa64c,
	0xa64e, 0xa64e,
	0xa650, 0xa650,
	0xa652, 0xa652,
	0xa654, 0xa654,
	0xa656, 0xa656,
	0xa658, 0xa658,
	0xa65a, 0xa65a,
	0xa65c, 0xa65c,
	0xa65e, 0xa65e,
	0xa660, 0xa660,
	0xa662, 0xa662,
	0xa664, 0xa664,
	0xa666, 0xa666,
	0xa668, 0xa668,
	0xa66a, 0xa66a,
	0xa66c, 0xa66c,
	0xa680, 0xa680,
	0xa682, 0xa682,
	0xa684, 0xa684,
	0xa686, 0xa686,
	0xa688, 0xa688,
	0xa68a, 0xa68a,
	0xa68c, 0xa68c,
	0xa68e, 0xa68e,
	0xa690, 0xa690,
	0xa692, 0xa692,
	0xa694, 0xa694,
	0xa696, 0xa696,
	0xa698, 0xa698,
	0xa69a, 0xa69a,
	0xa722, 0xa722,
	0xa724, 0xa724,
	0xa726, 0xa726,
	0xa728, 0xa728,
	0xa72a, 0xa72a,
	0xa72c, 0xa72c,
	0xa72e, 0xa72e,
	0xa732, 0xa732,
	0xa734, 0xa734,
	0xa736, 0xa736,
	0xa738, 0xa738,
	0xa73a, 0xa73a,
	0xa73c, 0xa73c,
	0xa73e, 0xa73e,
	0xa740, 0xa740,
	0xa742, 0xa742,
	0xa744, 0xa744,
	0xa746, 0xa746,
	0xa748, 0xa748,
	0xa74a, 0xa74a,
	0xa74c, 0xa74c,
	0xa74e, 0xa74e,
	0xa750, 0xa750,
	0xa752, 0xa752,
	0xa754, 0xa754,
	0xa756, 0xa756,
	0xa758, 0xa758,
	0xa75a, 0xa75a,
	0xa75c, 0xa75c,
	0xa75e, 0xa75e,
	0xa760, 0xa760,
	0xa762, 0xa762,
	0xa764, 0xa764,
	0xa766, 0xa766,
	0xa768, 0xa768,
	0xa76a, 0xa76a,
	0xa76c, 0xa76c,
	0xa76e, 0xa76e,
	0xa779, 0xa779,
	0xa77b, 0xa77b,
	0xa77d, 0xa77e,
	0xa780, 0xa780,
	0xa782, 0xa782,
	0xa784, 0xa784,
	0xa786, 0xa786,
	0xa78b, 0xa78b,
	0xa78d, 0xa78d,
	0xa790, 0xa790,
	0xa792, 0xa792,
	0xa796, 0xa796,
	0xa798, 0xa798,
	0xa79a, 0xa79a,
	0xa79c, 0xa79c,
	0xa79e, 0xa79e,
	0xa7a0, 0xa7a0,
	0xa7a2, 0xa7a2,
	0xa7a4, 0xa7a4,
	0xa7a6, 0xa7a6,
	0xa7a8, 0xa7a8,
	0xa7aa, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xff21, 0xff3a,
	0x10400, 0x10427,
	0x118a0, 0x118bf,
	0x1d400, 0x1d419,
	0x1d434, 0x1d44d,
	0x1d468, 0x1d481,
	0x1d49c, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b5,
	0x1d4d0, 0x1d4e9,
	0x1d504, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d538, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d56c, 0x1d585,
	0x1d5a0, 0x1d5b9,
	0x1d5d4, 0x1d5ed,
	0x1d608, 0x1d621,
	0x1d63c, 0x1d655,
	0x1d670, 0x1d689,
	0x1d6a8, 0x1d6c0,
	0x1d6e2, 0x1d6fa,
	0x1d71c, 0x1d734,
	0x1d756, 0x1d76e,
	0x1d790, 0x1d7a8,
	0x1d7ca, 0x1d7ca,
	0x1f130, 0x1f149,
	0x1f150, 0x1f169,
	0x1f170, 0x1f189,
}; /* CR_Upper */

/* 'XDigit': [[:XDigit:]] */
static const OnigCodePoint CR_XDigit[] = {
	3,
	0x0030, 0x0039,
	0x0041, 0x0046,
	0x0061, 0x0066,
}; /* CR_XDigit */

/* 'Word': [[:Word:]] */
static const OnigCodePoint CR_Word[] = {
	629,
	0x0030, 0x0039,
	0x0041, 0x005a,
	0x005f, 0x005f,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0300, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x0483, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0610, 0x061a,
	0x0620, 0x0669,
	0x066e, 0x06d3,
	0x06d5, 0x06dc,
	0x06df, 0x06e8,
	0x06ea, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x082d,
	0x0840, 0x085b,
	0x08a0, 0x08b2,
	0x08e4, 0x0963,
	0x0966, 0x096f,
	0x0971, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09f1,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b6f,
	0x0b71, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bef,
	0x0c00, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c81, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d01, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d6f,
	0x0d7a, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0de6, 0x0def,
	0x0df2, 0x0df3,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e4e,
	0x0e50, 0x0e59,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f00,
	0x0f18, 0x0f19,
	0x0f20, 0x0f29,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f3e, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f84,
	0x0f86, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x1000, 0x1049,
	0x1050, 0x109d,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x10fa,
	0x10fc, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x135f,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1734,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17d3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dd,
	0x17e0, 0x17e9,
	0x180b, 0x180d,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1946, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19d9,
	0x1a00, 0x1a1b,
	0x1a20, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa7, 0x1aa7,
	0x1ab0, 0x1abe,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b59,
	0x1b6b, 0x1b73,
	0x1b80, 0x1bf3,
	0x1c00, 0x1c37,
	0x1c40, 0x1c49,
	0x1c4d, 0x1c7d,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1cf6,
	0x1cf8, 0x1cf9,
	0x1d00, 0x1df5,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x203f, 0x2040,
	0x2054, 0x2054,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x20d0, 0x20f0,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x24b6, 0x24e9,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d6f,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2dff,
	0x2e2f, 0x2e2f,
	0x3005, 0x3007,
	0x3021, 0x302f,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x3099, 0x309a,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa62b,
	0xa640, 0xa672,
	0xa674, 0xa67d,
	0xa67f, 0xa69d,
	0xa69f, 0xa6f1,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa827,
	0xa840, 0xa873,
	0xa880, 0xa8c4,
	0xa8d0, 0xa8d9,
	0xa8e0, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa900, 0xa92d,
	0xa930, 0xa953,
	0xa960, 0xa97c,
	0xa980, 0xa9c0,
	0xa9cf, 0xa9d9,
	0xa9e0, 0xa9fe,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa60, 0xaa76,
	0xaa7a, 0xaac2,
	0xaadb, 0xaadd,
	0xaae0, 0xaaef,
	0xaaf2, 0xaaf6,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5a,
	0xab5c, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabea,
	0xabec, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe2d,
	0xfe33, 0xfe34,
	0xfe4d, 0xfe4f,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff10, 0xff19,
	0xff21, 0xff3a,
	0xff3f, 0xff3f,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x101fd, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x102e0, 0x102e0,
	0x10300, 0x1031f,
	0x10330, 0x1034a,
	0x10350, 0x1037a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10860, 0x10876,
	0x10880, 0x1089e,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x10a60, 0x10a7c,
	0x10a80, 0x10a9c,
	0x10ac0, 0x10ac7,
	0x10ac9, 0x10ae6,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10b80, 0x10b91,
	0x10c00, 0x10c48,
	0x11000, 0x11046,
	0x11066, 0x1106f,
	0x1107f, 0x110ba,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11100, 0x11134,
	0x11136, 0x1113f,
	0x11150, 0x11173,
	0x11176, 0x11176,
	0x11180, 0x111c4,
	0x111d0, 0x111da,
	0x11200, 0x11211,
	0x11213, 0x11237,
	0x112b0, 0x112ea,
	0x112f0, 0x112f9,
	0x11301, 0x11303,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133c, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134d,
	0x11357, 0x11357,
	0x1135d, 0x11363,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x11480, 0x114c5,
	0x114c7, 0x114c7,
	0x114d0, 0x114d9,
	0x11580, 0x115b5,
	0x115b8, 0x115c0,
	0x11600, 0x11640,
	0x11644, 0x11644,
	0x11650, 0x11659,
	0x11680, 0x116b7,
	0x116c0, 0x116c9,
	0x118a0, 0x118e9,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16a60, 0x16a69,
	0x16ad0, 0x16aed,
	0x16af0, 0x16af4,
	0x16b00, 0x16b36,
	0x16b40, 0x16b43,
	0x16b50, 0x16b59,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f8f, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1bc9d, 0x1bc9e,
	0x1d165, 0x1d169,
	0x1d16d, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1e800, 0x1e8c4,
	0x1e8d0, 0x1e8d6,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1f130, 0x1f149,
	0x1f150, 0x1f169,
	0x1f170, 0x1f189,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0100, 0xe01ef,
}; /* CR_Word */

/* 'Alnum': [[:Alnum:]] */
static const OnigCodePoint CR_Alnum[] = {
	630,
	0x0030, 0x0039,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0345, 0x0345,
	0x0370, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x05b0, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0610, 0x061a,
	0x0620, 0x0657,
	0x0659, 0x0669,
	0x066e, 0x06d3,
	0x06d5, 0x06dc,
	0x06e1, 0x06e8,
	0x06ed, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x073f,
	0x074d, 0x07b1,
	0x07c0, 0x07ea,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x0817,
	0x081a, 0x082c,
	0x0840, 0x0858,
	0x08a0, 0x08b2,
	0x08e4, 0x08e9,
	0x08f0, 0x093b,
	0x093d, 0x094c,
	0x094e, 0x0950,
	0x0955, 0x0963,
	0x0966, 0x096f,
	0x0971, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cc,
	0x09ce, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09f1,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4c,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acc,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4c,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b6f,
	0x0b71, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcc,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bef,
	0x0c00, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4c,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c81, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccc,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d01, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4c,
	0x0d4e, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d6f,
	0x0d7a, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0de6, 0x0def,
	0x0df2, 0x0df3,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e46,
	0x0e4d, 0x0e4d,
	0x0e50, 0x0e59,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ecd, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f00,
	0x0f20, 0x0f29,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f81,
	0x0f88, 0x0f97,
	0x0f99, 0x0fbc,
	0x1000, 0x1036,
	0x1038, 0x1038,
	0x103b, 0x1049,
	0x1050, 0x1062,
	0x1065, 0x1068,
	0x106e, 0x1086,
	0x108e, 0x108e,
	0x1090, 0x1099,
	0x109c, 0x109d,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x10fa,
	0x10fc, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x135f,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1713,
	0x1720, 0x1733,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17b3,
	0x17b6, 0x17c8,
	0x17d7, 0x17d7,
	0x17dc, 0x17dc,
	0x17e0, 0x17e9,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1920, 0x192b,
	0x1930, 0x1938,
	0x1946, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19d9,
	0x1a00, 0x1a1b,
	0x1a20, 0x1a5e,
	0x1a61, 0x1a74,
	0x1a80, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa7, 0x1aa7,
	0x1b00, 0x1b33,
	0x1b35, 0x1b43,
	0x1b45, 0x1b4b,
	0x1b50, 0x1b59,
	0x1b80, 0x1ba9,
	0x1bac, 0x1be5,
	0x1be7, 0x1bf1,
	0x1c00, 0x1c35,
	0x1c40, 0x1c49,
	0x1c4d, 0x1c7d,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf3,
	0x1cf5, 0x1cf6,
	0x1d00, 0x1dbf,
	0x1de7, 0x1df4,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x24b6, 0x24e9,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2cf2, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2dff,
	0x2e2f, 0x2e2f,
	0x3005, 0x3007,
	0x3021, 0x3029,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa62b,
	0xa640, 0xa66e,
	0xa674, 0xa67b,
	0xa67f, 0xa69d,
	0xa69f, 0xa6ef,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa827,
	0xa840, 0xa873,
	0xa880, 0xa8c3,
	0xa8d0, 0xa8d9,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa900, 0xa92a,
	0xa930, 0xa952,
	0xa960, 0xa97c,
	0xa980, 0xa9b2,
	0xa9b4, 0xa9bf,
	0xa9cf, 0xa9d9,
	0xa9e0, 0xa9e4,
	0xa9e6, 0xa9fe,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa7e, 0xaabe,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadd,
	0xaae0, 0xaaef,
	0xaaf2, 0xaaf5,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5a,
	0xab5c, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabea,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff10, 0xff19,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031f,
	0x10330, 0x1034a,
	0x10350, 0x1037a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10860, 0x10876,
	0x10880, 0x1089e,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10a80, 0x10a9c,
	0x10ac0, 0x10ac7,
	0x10ac9, 0x10ae4,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10b80, 0x10b91,
	0x10c00, 0x10c48,
	0x11000, 0x11045,
	0x11066, 0x1106f,
	0x11082, 0x110b8,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11100, 0x11132,
	0x11136, 0x1113f,
	0x11150, 0x11172,
	0x11176, 0x11176,
	0x11180, 0x111bf,
	0x111c1, 0x111c4,
	0x111d0, 0x111da,
	0x11200, 0x11211,
	0x11213, 0x11234,
	0x11237, 0x11237,
	0x112b0, 0x112e8,
	0x112f0, 0x112f9,
	0x11301, 0x11303,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133d, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134c,
	0x11357, 0x11357,
	0x1135d, 0x11363,
	0x11480, 0x114c1,
	0x114c4, 0x114c5,
	0x114c7, 0x114c7,
	0x114d0, 0x114d9,
	0x11580, 0x115b5,
	0x115b8, 0x115be,
	0x11600, 0x1163e,
	0x11640, 0x11640,
	0x11644, 0x11644,
	0x11650, 0x11659,
	0x11680, 0x116b5,
	0x116c0, 0x116c9,
	0x118a0, 0x118e9,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16a60, 0x16a69,
	0x16ad0, 0x16aed,
	0x16b00, 0x16b36,
	0x16b40, 0x16b43,
	0x16b50, 0x16b59,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f93, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1bc9e, 0x1bc9e,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1e800, 0x1e8c4,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1f130, 0x1f149,
	0x1f150, 0x1f169,
	0x1f170, 0x1f189,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Alnum */

/* 'ASCII': [[:ASCII:]] */
static const OnigCodePoint CR_ASCII[] = {
	1,
	0x0000, 0x007f,
}; /* CR_ASCII */

#ifdef USE_UNICODE_PROPERTIES
/* 'Any': - */
static const OnigCodePoint CR_Any[] = {
	1,
	0x0000, 0x10ffff,
}; /* CR_Any */

/* 'Assigned': - */
static const OnigCodePoint CR_Assigned[] = {
	600,
	0x0000, 0x0377,
	0x037a, 0x037f,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x058d, 0x058f,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x061c,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x08a0, 0x08b2,
	0x08e4, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c00, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c81, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d01, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0de6, 0x0def,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1ab0, 0x1abe,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cc0, 0x1cc7,
	0x1cd0, 0x1cf6,
	0x1cf8, 0x1cf9,
	0x1d00, 0x1df5,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x2066, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20bd,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23fa,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x2b73,
	0x2b76, 0x2b95,
	0x2b98, 0x2bb9,
	0x2bbd, 0x2bc8,
	0x2bca, 0x2bd1,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf3,
	0x2cf9, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e42,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcc,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa69d,
	0xa69f, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9fe,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaac2,
	0xaadb, 0xaaf6,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xd800, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe2d,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xfffd,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018c,
	0x10190, 0x1019b,
	0x101a0, 0x101a0,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x102e0, 0x102fb,
	0x10300, 0x10323,
	0x10330, 0x1034a,
	0x10350, 0x1037a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x1056f, 0x1056f,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1089e,
	0x108a7, 0x108af,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a9f,
	0x10ac0, 0x10ae6,
	0x10aeb, 0x10af6,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b91,
	0x10b99, 0x10b9c,
	0x10ba9, 0x10baf,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x1107f, 0x110c1,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11100, 0x11134,
	0x11136, 0x11143,
	0x11150, 0x11176,
	0x11180, 0x111c8,
	0x111cd, 0x111cd,
	0x111d0, 0x111da,
	0x111e1, 0x111f4,
	0x11200, 0x11211,
	0x11213, 0x1123d,
	0x112b0, 0x112ea,
	0x112f0, 0x112f9,
	0x11301, 0x11303,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133c, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134d,
	0x11357, 0x11357,
	0x1135d, 0x11363,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x11480, 0x114c7,
	0x114d0, 0x114d9,
	0x11580, 0x115b5,
	0x115b8, 0x115c9,
	0x11600, 0x11644,
	0x11650, 0x11659,
	0x11680, 0x116b7,
	0x116c0, 0x116c9,
	0x118a0, 0x118f2,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x12470, 0x12474,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16a60, 0x16a69,
	0x16a6e, 0x16a6f,
	0x16ad0, 0x16aed,
	0x16af0, 0x16af5,
	0x16b00, 0x16b45,
	0x16b50, 0x16b59,
	0x16b5b, 0x16b61,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f8f, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1bc9c, 0x1bca3,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1e800, 0x1e8c4,
	0x1e8c7, 0x1e8d6,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1eef0, 0x1eef1,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0bf,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0f5,
	0x1f100, 0x1f10c,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f16b,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f32c,
	0x1f330, 0x1f37d,
	0x1f380, 0x1f3ce,
	0x1f3d4, 0x1f3f7,
	0x1f400, 0x1f4fe,
	0x1f500, 0x1f54a,
	0x1f550, 0x1f579,
	0x1f57b, 0x1f5a3,
	0x1f5a5, 0x1f642,
	0x1f645, 0x1f6cf,
	0x1f6e0, 0x1f6ec,
	0x1f6f0, 0x1f6f3,
	0x1f700, 0x1f773,
	0x1f780, 0x1f7d4,
	0x1f800, 0x1f80b,
	0x1f810, 0x1f847,
	0x1f850, 0x1f859,
	0x1f860, 0x1f887,
	0x1f890, 0x1f8ad,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xf0000, 0xffffd,
	0x100000, 0x10fffd,
}; /* CR_Assigned */

/* 'C': Major Category */
static const OnigCodePoint CR_C[] = {
	603,
	0x0000, 0x001f,
	0x007f, 0x009f,
	0x00ad, 0x00ad,
	0x0378, 0x0379,
	0x0380, 0x0383,
	0x038b, 0x038b,
	0x038d, 0x038d,
	0x03a2, 0x03a2,
	0x0530, 0x0530,
	0x0557, 0x0558,
	0x0560, 0x0560,
	0x0588, 0x0588,
	0x058b, 0x058c,
	0x0590, 0x0590,
	0x05c8, 0x05cf,
	0x05eb, 0x05ef,
	0x05f5, 0x0605,
	0x061c, 0x061d,
	0x06dd, 0x06dd,
	0x070e, 0x070f,
	0x074b, 0x074c,
	0x07b2, 0x07bf,
	0x07fb, 0x07ff,
	0x082e, 0x082f,
	0x083f, 0x083f,
	0x085c, 0x085d,
	0x085f, 0x089f,
	0x08b3, 0x08e3,
	0x0984, 0x0984,
	0x098d, 0x098e,
	0x0991, 0x0992,
	0x09a9, 0x09a9,
	0x09b1, 0x09b1,
	0x09b3, 0x09b5,
	0x09ba, 0x09bb,
	0x09c5, 0x09c6,
	0x09c9, 0x09ca,
	0x09cf, 0x09d6,
	0x09d8, 0x09db,
	0x09de, 0x09de,
	0x09e4, 0x09e5,
	0x09fc, 0x0a00,
	0x0a04, 0x0a04,
	0x0a0b, 0x0a0e,
	0x0a11, 0x0a12,
	0x0a29, 0x0a29,
	0x0a31, 0x0a31,
	0x0a34, 0x0a34,
	0x0a37, 0x0a37,
	0x0a3a, 0x0a3b,
	0x0a3d, 0x0a3d,
	0x0a43, 0x0a46,
	0x0a49, 0x0a4a,
	0x0a4e, 0x0a50,
	0x0a52, 0x0a58,
	0x0a5d, 0x0a5d,
	0x0a5f, 0x0a65,
	0x0a76, 0x0a80,
	0x0a84, 0x0a84,
	0x0a8e, 0x0a8e,
	0x0a92, 0x0a92,
	0x0aa9, 0x0aa9,
	0x0ab1, 0x0ab1,
	0x0ab4, 0x0ab4,
	0x0aba, 0x0abb,
	0x0ac6, 0x0ac6,
	0x0aca, 0x0aca,
	0x0ace, 0x0acf,
	0x0ad1, 0x0adf,
	0x0ae4, 0x0ae5,
	0x0af2, 0x0b00,
	0x0b04, 0x0b04,
	0x0b0d, 0x0b0e,
	0x0b11, 0x0b12,
	0x0b29, 0x0b29,
	0x0b31, 0x0b31,
	0x0b34, 0x0b34,
	0x0b3a, 0x0b3b,
	0x0b45, 0x0b46,
	0x0b49, 0x0b4a,
	0x0b4e, 0x0b55,
	0x0b58, 0x0b5b,
	0x0b5e, 0x0b5e,
	0x0b64, 0x0b65,
	0x0b78, 0x0b81,
	0x0b84, 0x0b84,
	0x0b8b, 0x0b8d,
	0x0b91, 0x0b91,
	0x0b96, 0x0b98,
	0x0b9b, 0x0b9b,
	0x0b9d, 0x0b9d,
	0x0ba0, 0x0ba2,
	0x0ba5, 0x0ba7,
	0x0bab, 0x0bad,
	0x0bba, 0x0bbd,
	0x0bc3, 0x0bc5,
	0x0bc9, 0x0bc9,
	0x0bce, 0x0bcf,
	0x0bd1, 0x0bd6,
	0x0bd8, 0x0be5,
	0x0bfb, 0x0bff,
	0x0c04, 0x0c04,
	0x0c0d, 0x0c0d,
	0x0c11, 0x0c11,
	0x0c29, 0x0c29,
	0x0c3a, 0x0c3c,
	0x0c45, 0x0c45,
	0x0c49, 0x0c49,
	0x0c4e, 0x0c54,
	0x0c57, 0x0c57,
	0x0c5a, 0x0c5f,
	0x0c64, 0x0c65,
	0x0c70, 0x0c77,
	0x0c80, 0x0c80,
	0x0c84, 0x0c84,
	0x0c8d, 0x0c8d,
	0x0c91, 0x0c91,
	0x0ca9, 0x0ca9,
	0x0cb4, 0x0cb4,
	0x0cba, 0x0cbb,
	0x0cc5, 0x0cc5,
	0x0cc9, 0x0cc9,
	0x0cce, 0x0cd4,
	0x0cd7, 0x0cdd,
	0x0cdf, 0x0cdf,
	0x0ce4, 0x0ce5,
	0x0cf0, 0x0cf0,
	0x0cf3, 0x0d00,
	0x0d04, 0x0d04,
	0x0d0d, 0x0d0d,
	0x0d11, 0x0d11,
	0x0d3b, 0x0d3c,
	0x0d45, 0x0d45,
	0x0d49, 0x0d49,
	0x0d4f, 0x0d56,
	0x0d58, 0x0d5f,
	0x0d64, 0x0d65,
	0x0d76, 0x0d78,
	0x0d80, 0x0d81,
	0x0d84, 0x0d84,
	0x0d97, 0x0d99,
	0x0db2, 0x0db2,
	0x0dbc, 0x0dbc,
	0x0dbe, 0x0dbf,
	0x0dc7, 0x0dc9,
	0x0dcb, 0x0dce,
	0x0dd5, 0x0dd5,
	0x0dd7, 0x0dd7,
	0x0de0, 0x0de5,
	0x0df0, 0x0df1,
	0x0df5, 0x0e00,
	0x0e3b, 0x0e3e,
	0x0e5c, 0x0e80,
	0x0e83, 0x0e83,
	0x0e85, 0x0e86,
	0x0e89, 0x0e89,
	0x0e8b, 0x0e8c,
	0x0e8e, 0x0e93,
	0x0e98, 0x0e98,
	0x0ea0, 0x0ea0,
	0x0ea4, 0x0ea4,
	0x0ea6, 0x0ea6,
	0x0ea8, 0x0ea9,
	0x0eac, 0x0eac,
	0x0eba, 0x0eba,
	0x0ebe, 0x0ebf,
	0x0ec5, 0x0ec5,
	0x0ec7, 0x0ec7,
	0x0ece, 0x0ecf,
	0x0eda, 0x0edb,
	0x0ee0, 0x0eff,
	0x0f48, 0x0f48,
	0x0f6d, 0x0f70,
	0x0f98, 0x0f98,
	0x0fbd, 0x0fbd,
	0x0fcd, 0x0fcd,
	0x0fdb, 0x0fff,
	0x10c6, 0x10c6,
	0x10c8, 0x10cc,
	0x10ce, 0x10cf,
	0x1249, 0x1249,
	0x124e, 0x124f,
	0x1257, 0x1257,
	0x1259, 0x1259,
	0x125e, 0x125f,
	0x1289, 0x1289,
	0x128e, 0x128f,
	0x12b1, 0x12b1,
	0x12b6, 0x12b7,
	0x12bf, 0x12bf,
	0x12c1, 0x12c1,
	0x12c6, 0x12c7,
	0x12d7, 0x12d7,
	0x1311, 0x1311,
	0x1316, 0x1317,
	0x135b, 0x135c,
	0x137d, 0x137f,
	0x139a, 0x139f,
	0x13f5, 0x13ff,
	0x169d, 0x169f,
	0x16f9, 0x16ff,
	0x170d, 0x170d,
	0x1715, 0x171f,
	0x1737, 0x173f,
	0x1754, 0x175f,
	0x176d, 0x176d,
	0x1771, 0x1771,
	0x1774, 0x177f,
	0x17de, 0x17df,
	0x17ea, 0x17ef,
	0x17fa, 0x17ff,
	0x180e, 0x180f,
	0x181a, 0x181f,
	0x1878, 0x187f,
	0x18ab, 0x18af,
	0x18f6, 0x18ff,
	0x191f, 0x191f,
	0x192c, 0x192f,
	0x193c, 0x193f,
	0x1941, 0x1943,
	0x196e, 0x196f,
	0x1975, 0x197f,
	0x19ac, 0x19af,
	0x19ca, 0x19cf,
	0x19db, 0x19dd,
	0x1a1c, 0x1a1d,
	0x1a5f, 0x1a5f,
	0x1a7d, 0x1a7e,
	0x1a8a, 0x1a8f,
	0x1a9a, 0x1a9f,
	0x1aae, 0x1aaf,
	0x1abf, 0x1aff,
	0x1b4c, 0x1b4f,
	0x1b7d, 0x1b7f,
	0x1bf4, 0x1bfb,
	0x1c38, 0x1c3a,
	0x1c4a, 0x1c4c,
	0x1c80, 0x1cbf,
	0x1cc8, 0x1ccf,
	0x1cf7, 0x1cf7,
	0x1cfa, 0x1cff,
	0x1df6, 0x1dfb,
	0x1f16, 0x1f17,
	0x1f1e, 0x1f1f,
	0x1f46, 0x1f47,
	0x1f4e, 0x1f4f,
	0x1f58, 0x1f58,
	0x1f5a, 0x1f5a,
	0x1f5c, 0x1f5c,
	0x1f5e, 0x1f5e,
	0x1f7e, 0x1f7f,
	0x1fb5, 0x1fb5,
	0x1fc5, 0x1fc5,
	0x1fd4, 0x1fd5,
	0x1fdc, 0x1fdc,
	0x1ff0, 0x1ff1,
	0x1ff5, 0x1ff5,
	0x1fff, 0x1fff,
	0x200b, 0x200f,
	0x202a, 0x202e,
	0x2060, 0x206f,
	0x2072, 0x2073,
	0x208f, 0x208f,
	0x209d, 0x209f,
	0x20be, 0x20cf,
	0x20f1, 0x20ff,
	0x218a, 0x218f,
	0x23fb, 0x23ff,
	0x2427, 0x243f,
	0x244b, 0x245f,
	0x2b74, 0x2b75,
	0x2b96, 0x2b97,
	0x2bba, 0x2bbc,
	0x2bc9, 0x2bc9,
	0x2bd2, 0x2bff,
	0x2c2f, 0x2c2f,
	0x2c5f, 0x2c5f,
	0x2cf4, 0x2cf8,
	0x2d26, 0x2d26,
	0x2d28, 0x2d2c,
	0x2d2e, 0x2d2f,
	0x2d68, 0x2d6e,
	0x2d71, 0x2d7e,
	0x2d97, 0x2d9f,
	0x2da7, 0x2da7,
	0x2daf, 0x2daf,
	0x2db7, 0x2db7,
	0x2dbf, 0x2dbf,
	0x2dc7, 0x2dc7,
	0x2dcf, 0x2dcf,
	0x2dd7, 0x2dd7,
	0x2ddf, 0x2ddf,
	0x2e43, 0x2e7f,
	0x2e9a, 0x2e9a,
	0x2ef4, 0x2eff,
	0x2fd6, 0x2fef,
	0x2ffc, 0x2fff,
	0x3040, 0x3040,
	0x3097, 0x3098,
	0x3100, 0x3104,
	0x312e, 0x3130,
	0x318f, 0x318f,
	0x31bb, 0x31bf,
	0x31e4, 0x31ef,
	0x321f, 0x321f,
	0x32ff, 0x32ff,
	0x4db6, 0x4dbf,
	0x9fcd, 0x9fff,
	0xa48d, 0xa48f,
	0xa4c7, 0xa4cf,
	0xa62c, 0xa63f,
	0xa69e, 0xa69e,
	0xa6f8, 0xa6ff,
	0xa78f, 0xa78f,
	0xa7ae, 0xa7af,
	0xa7b2, 0xa7f6,
	0xa82c, 0xa82f,
	0xa83a, 0xa83f,
	0xa878, 0xa87f,
	0xa8c5, 0xa8cd,
	0xa8da, 0xa8df,
	0xa8fc, 0xa8ff,
	0xa954, 0xa95e,
	0xa97d, 0xa97f,
	0xa9ce, 0xa9ce,
	0xa9da, 0xa9dd,
	0xa9ff, 0xa9ff,
	0xaa37, 0xaa3f,
	0xaa4e, 0xaa4f,
	0xaa5a, 0xaa5b,
	0xaac3, 0xaada,
	0xaaf7, 0xab00,
	0xab07, 0xab08,
	0xab0f, 0xab10,
	0xab17, 0xab1f,
	0xab27, 0xab27,
	0xab2f, 0xab2f,
	0xab60, 0xab63,
	0xab66, 0xabbf,
	0xabee, 0xabef,
	0xabfa, 0xabff,
	0xd7a4, 0xd7af,
	0xd7c7, 0xd7ca,
	0xd7fc, 0xf8ff,
	0xfa6e, 0xfa6f,
	0xfada, 0xfaff,
	0xfb07, 0xfb12,
	0xfb18, 0xfb1c,
	0xfb37, 0xfb37,
	0xfb3d, 0xfb3d,
	0xfb3f, 0xfb3f,
	0xfb42, 0xfb42,
	0xfb45, 0xfb45,
	0xfbc2, 0xfbd2,
	0xfd40, 0xfd4f,
	0xfd90, 0xfd91,
	0xfdc8, 0xfdef,
	0xfdfe, 0xfdff,
	0xfe1a, 0xfe1f,
	0xfe2e, 0xfe2f,
	0xfe53, 0xfe53,
	0xfe67, 0xfe67,
	0xfe6c, 0xfe6f,
	0xfe75, 0xfe75,
	0xfefd, 0xff00,
	0xffbf, 0xffc1,
	0xffc8, 0xffc9,
	0xffd0, 0xffd1,
	0xffd8, 0xffd9,
	0xffdd, 0xffdf,
	0xffe7, 0xffe7,
	0xffef, 0xfffb,
	0xfffe, 0xffff,
	0x1000c, 0x1000c,
	0x10027, 0x10027,
	0x1003b, 0x1003b,
	0x1003e, 0x1003e,
	0x1004e, 0x1004f,
	0x1005e, 0x1007f,
	0x100fb, 0x100ff,
	0x10103, 0x10106,
	0x10134, 0x10136,
	0x1018d, 0x1018f,
	0x1019c, 0x1019f,
	0x101a1, 0x101cf,
	0x101fe, 0x1027f,
	0x1029d, 0x1029f,
	0x102d1, 0x102df,
	0x102fc, 0x102ff,
	0x10324, 0x1032f,
	0x1034b, 0x1034f,
	0x1037b, 0x1037f,
	0x1039e, 0x1039e,
	0x103c4, 0x103c7,
	0x103d6, 0x103ff,
	0x1049e, 0x1049f,
	0x104aa, 0x104ff,
	0x10528, 0x1052f,
	0x10564, 0x1056e,
	0x10570, 0x105ff,
	0x10737, 0x1073f,
	0x10756, 0x1075f,
	0x10768, 0x107ff,
	0x10806, 0x10807,
	0x10809, 0x10809,
	0x10836, 0x10836,
	0x10839, 0x1083b,
	0x1083d, 0x1083e,
	0x10856, 0x10856,
	0x1089f, 0x108a6,
	0x108b0, 0x108ff,
	0x1091c, 0x1091e,
	0x1093a, 0x1093e,
	0x10940, 0x1097f,
	0x109b8, 0x109bd,
	0x109c0, 0x109ff,
	0x10a04, 0x10a04,
	0x10a07, 0x10a0b,
	0x10a14, 0x10a14,
	0x10a18, 0x10a18,
	0x10a34, 0x10a37,
	0x10a3b, 0x10a3e,
	0x10a48, 0x10a4f,
	0x10a59, 0x10a5f,
	0x10aa0, 0x10abf,
	0x10ae7, 0x10aea,
	0x10af7, 0x10aff,
	0x10b36, 0x10b38,
	0x10b56, 0x10b57,
	0x10b73, 0x10b77,
	0x10b92, 0x10b98,
	0x10b9d, 0x10ba8,
	0x10bb0, 0x10bff,
	0x10c49, 0x10e5f,
	0x10e7f, 0x10fff,
	0x1104e, 0x11051,
	0x11070, 0x1107e,
	0x110bd, 0x110bd,
	0x110c2, 0x110cf,
	0x110e9, 0x110ef,
	0x110fa, 0x110ff,
	0x11135, 0x11135,
	0x11144, 0x1114f,
	0x11177, 0x1117f,
	0x111c9, 0x111cc,
	0x111ce, 0x111cf,
	0x111db, 0x111e0,
	0x111f5, 0x111ff,
	0x11212, 0x11212,
	0x1123e, 0x112af,
	0x112eb, 0x112ef,
	0x112fa, 0x11300,
	0x11304, 0x11304,
	0x1130d, 0x1130e,
	0x11311, 0x11312,
	0x11329, 0x11329,
	0x11331, 0x11331,
	0x11334, 0x11334,
	0x1133a, 0x1133b,
	0x11345, 0x11346,
	0x11349, 0x1134a,
	0x1134e, 0x11356,
	0x11358, 0x1135c,
	0x11364, 0x11365,
	0x1136d, 0x1136f,
	0x11375, 0x1147f,
	0x114c8, 0x114cf,
	0x114da, 0x1157f,
	0x115b6, 0x115b7,
	0x115ca, 0x115ff,
	0x11645, 0x1164f,
	0x1165a, 0x1167f,
	0x116b8, 0x116bf,
	0x116ca, 0x1189f,
	0x118f3, 0x118fe,
	0x11900, 0x11abf,
	0x11af9, 0x11fff,
	0x12399, 0x123ff,
	0x1246f, 0x1246f,
	0x12475, 0x12fff,
	0x1342f, 0x167ff,
	0x16a39, 0x16a3f,
	0x16a5f, 0x16a5f,
	0x16a6a, 0x16a6d,
	0x16a70, 0x16acf,
	0x16aee, 0x16aef,
	0x16af6, 0x16aff,
	0x16b46, 0x16b4f,
	0x16b5a, 0x16b5a,
	0x16b62, 0x16b62,
	0x16b78, 0x16b7c,
	0x16b90, 0x16eff,
	0x16f45, 0x16f4f,
	0x16f7f, 0x16f8e,
	0x16fa0, 0x1afff,
	0x1b002, 0x1bbff,
	0x1bc6b, 0x1bc6f,
	0x1bc7d, 0x1bc7f,
	0x1bc89, 0x1bc8f,
	0x1bc9a, 0x1bc9b,
	0x1bca0, 0x1cfff,
	0x1d0f6, 0x1d0ff,
	0x1d127, 0x1d128,
	0x1d173, 0x1d17a,
	0x1d1de, 0x1d1ff,
	0x1d246, 0x1d2ff,
	0x1d357, 0x1d35f,
	0x1d372, 0x1d3ff,
	0x1d455, 0x1d455,
	0x1d49d, 0x1d49d,
	0x1d4a0, 0x1d4a1,
	0x1d4a3, 0x1d4a4,
	0x1d4a7, 0x1d4a8,
	0x1d4ad, 0x1d4ad,
	0x1d4ba, 0x1d4ba,
	0x1d4bc, 0x1d4bc,
	0x1d4c4, 0x1d4c4,
	0x1d506, 0x1d506,
	0x1d50b, 0x1d50c,
	0x1d515, 0x1d515,
	0x1d51d, 0x1d51d,
	0x1d53a, 0x1d53a,
	0x1d53f, 0x1d53f,
	0x1d545, 0x1d545,
	0x1d547, 0x1d549,
	0x1d551, 0x1d551,
	0x1d6a6, 0x1d6a7,
	0x1d7cc, 0x1d7cd,
	0x1d800, 0x1e7ff,
	0x1e8c5, 0x1e8c6,
	0x1e8d7, 0x1edff,
	0x1ee04, 0x1ee04,
	0x1ee20, 0x1ee20,
	0x1ee23, 0x1ee23,
	0x1ee25, 0x1ee26,
	0x1ee28, 0x1ee28,
	0x1ee33, 0x1ee33,
	0x1ee38, 0x1ee38,
	0x1ee3a, 0x1ee3a,
	0x1ee3c, 0x1ee41,
	0x1ee43, 0x1ee46,
	0x1ee48, 0x1ee48,
	0x1ee4a, 0x1ee4a,
	0x1ee4c, 0x1ee4c,
	0x1ee50, 0x1ee50,
	0x1ee53, 0x1ee53,
	0x1ee55, 0x1ee56,
	0x1ee58, 0x1ee58,
	0x1ee5a, 0x1ee5a,
	0x1ee5c, 0x1ee5c,
	0x1ee5e, 0x1ee5e,
	0x1ee60, 0x1ee60,
	0x1ee63, 0x1ee63,
	0x1ee65, 0x1ee66,
	0x1ee6b, 0x1ee6b,
	0x1ee73, 0x1ee73,
	0x1ee78, 0x1ee78,
	0x1ee7d, 0x1ee7d,
	0x1ee7f, 0x1ee7f,
	0x1ee8a, 0x1ee8a,
	0x1ee9c, 0x1eea0,
	0x1eea4, 0x1eea4,
	0x1eeaa, 0x1eeaa,
	0x1eebc, 0x1eeef,
	0x1eef2, 0x1efff,
	0x1f02c, 0x1f02f,
	0x1f094, 0x1f09f,
	0x1f0af, 0x1f0b0,
	0x1f0c0, 0x1f0c0,
	0x1f0d0, 0x1f0d0,
	0x1f0f6, 0x1f0ff,
	0x1f10d, 0x1f10f,
	0x1f12f, 0x1f12f,
	0x1f16c, 0x1f16f,
	0x1f19b, 0x1f1e5,
	0x1f203, 0x1f20f,
	0x1f23b, 0x1f23f,
	0x1f249, 0x1f24f,
	0x1f252, 0x1f2ff,
	0x1f32d, 0x1f32f,
	0x1f37e, 0x1f37f,
	0x1f3cf, 0x1f3d3,
	0x1f3f8, 0x1f3ff,
	0x1f4ff, 0x1f4ff,
	0x1f54b, 0x1f54f,
	0x1f57a, 0x1f57a,
	0x1f5a4, 0x1f5a4,
	0x1f643, 0x1f644,
	0x1f6d0, 0x1f6df,
	0x1f6ed, 0x1f6ef,
	0x1f6f4, 0x1f6ff,
	0x1f774, 0x1f77f,
	0x1f7d5, 0x1f7ff,
	0x1f80c, 0x1f80f,
	0x1f848, 0x1f84f,
	0x1f85a, 0x1f85f,
	0x1f888, 0x1f88f,
	0x1f8ae, 0x1ffff,
	0x2a6d7, 0x2a6ff,
	0x2b735, 0x2b73f,
	0x2b81e, 0x2f7ff,
	0x2fa1e, 0xe00ff,
	0xe01f0, 0x10ffff,
}; /* CR_C */

/* 'Cc': General Category */
#define CR_Cc CR_Cntrl

/* 'Cf': General Category */
static const OnigCodePoint CR_Cf[] = {
	17,
	0x00ad, 0x00ad,
	0x0600, 0x0605,
	0x061c, 0x061c,
	0x06dd, 0x06dd,
	0x070f, 0x070f,
	0x180e, 0x180e,
	0x200b, 0x200f,
	0x202a, 0x202e,
	0x2060, 0x2064,
	0x2066, 0x206f,
	0xfeff, 0xfeff,
	0xfff9, 0xfffb,
	0x110bd, 0x110bd,
	0x1bca0, 0x1bca3,
	0x1d173, 0x1d17a,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
}; /* CR_Cf */

/* 'Cn': General Category */
static const OnigCodePoint CR_Cn[] = {
	600,
	0x0378, 0x0379,
	0x0380, 0x0383,
	0x038b, 0x038b,
	0x038d, 0x038d,
	0x03a2, 0x03a2,
	0x0530, 0x0530,
	0x0557, 0x0558,
	0x0560, 0x0560,
	0x0588, 0x0588,
	0x058b, 0x058c,
	0x0590, 0x0590,
	0x05c8, 0x05cf,
	0x05eb, 0x05ef,
	0x05f5, 0x05ff,
	0x061d, 0x061d,
	0x070e, 0x070e,
	0x074b, 0x074c,
	0x07b2, 0x07bf,
	0x07fb, 0x07ff,
	0x082e, 0x082f,
	0x083f, 0x083f,
	0x085c, 0x085d,
	0x085f, 0x089f,
	0x08b3, 0x08e3,
	0x0984, 0x0984,
	0x098d, 0x098e,
	0x0991, 0x0992,
	0x09a9, 0x09a9,
	0x09b1, 0x09b1,
	0x09b3, 0x09b5,
	0x09ba, 0x09bb,
	0x09c5, 0x09c6,
	0x09c9, 0x09ca,
	0x09cf, 0x09d6,
	0x09d8, 0x09db,
	0x09de, 0x09de,
	0x09e4, 0x09e5,
	0x09fc, 0x0a00,
	0x0a04, 0x0a04,
	0x0a0b, 0x0a0e,
	0x0a11, 0x0a12,
	0x0a29, 0x0a29,
	0x0a31, 0x0a31,
	0x0a34, 0x0a34,
	0x0a37, 0x0a37,
	0x0a3a, 0x0a3b,
	0x0a3d, 0x0a3d,
	0x0a43, 0x0a46,
	0x0a49, 0x0a4a,
	0x0a4e, 0x0a50,
	0x0a52, 0x0a58,
	0x0a5d, 0x0a5d,
	0x0a5f, 0x0a65,
	0x0a76, 0x0a80,
	0x0a84, 0x0a84,
	0x0a8e, 0x0a8e,
	0x0a92, 0x0a92,
	0x0aa9, 0x0aa9,
	0x0ab1, 0x0ab1,
	0x0ab4, 0x0ab4,
	0x0aba, 0x0abb,
	0x0ac6, 0x0ac6,
	0x0aca, 0x0aca,
	0x0ace, 0x0acf,
	0x0ad1, 0x0adf,
	0x0ae4, 0x0ae5,
	0x0af2, 0x0b00,
	0x0b04, 0x0b04,
	0x0b0d, 0x0b0e,
	0x0b11, 0x0b12,
	0x0b29, 0x0b29,
	0x0b31, 0x0b31,
	0x0b34, 0x0b34,
	0x0b3a, 0x0b3b,
	0x0b45, 0x0b46,
	0x0b49, 0x0b4a,
	0x0b4e, 0x0b55,
	0x0b58, 0x0b5b,
	0x0b5e, 0x0b5e,
	0x0b64, 0x0b65,
	0x0b78, 0x0b81,
	0x0b84, 0x0b84,
	0x0b8b, 0x0b8d,
	0x0b91, 0x0b91,
	0x0b96, 0x0b98,
	0x0b9b, 0x0b9b,
	0x0b9d, 0x0b9d,
	0x0ba0, 0x0ba2,
	0x0ba5, 0x0ba7,
	0x0bab, 0x0bad,
	0x0bba, 0x0bbd,
	0x0bc3, 0x0bc5,
	0x0bc9, 0x0bc9,
	0x0bce, 0x0bcf,
	0x0bd1, 0x0bd6,
	0x0bd8, 0x0be5,
	0x0bfb, 0x0bff,
	0x0c04, 0x0c04,
	0x0c0d, 0x0c0d,
	0x0c11, 0x0c11,
	0x0c29, 0x0c29,
	0x0c3a, 0x0c3c,
	0x0c45, 0x0c45,
	0x0c49, 0x0c49,
	0x0c4e, 0x0c54,
	0x0c57, 0x0c57,
	0x0c5a, 0x0c5f,
	0x0c64, 0x0c65,
	0x0c70, 0x0c77,
	0x0c80, 0x0c80,
	0x0c84, 0x0c84,
	0x0c8d, 0x0c8d,
	0x0c91, 0x0c91,
	0x0ca9, 0x0ca9,
	0x0cb4, 0x0cb4,
	0x0cba, 0x0cbb,
	0x0cc5, 0x0cc5,
	0x0cc9, 0x0cc9,
	0x0cce, 0x0cd4,
	0x0cd7, 0x0cdd,
	0x0cdf, 0x0cdf,
	0x0ce4, 0x0ce5,
	0x0cf0, 0x0cf0,
	0x0cf3, 0x0d00,
	0x0d04, 0x0d04,
	0x0d0d, 0x0d0d,
	0x0d11, 0x0d11,
	0x0d3b, 0x0d3c,
	0x0d45, 0x0d45,
	0x0d49, 0x0d49,
	0x0d4f, 0x0d56,
	0x0d58, 0x0d5f,
	0x0d64, 0x0d65,
	0x0d76, 0x0d78,
	0x0d80, 0x0d81,
	0x0d84, 0x0d84,
	0x0d97, 0x0d99,
	0x0db2, 0x0db2,
	0x0dbc, 0x0dbc,
	0x0dbe, 0x0dbf,
	0x0dc7, 0x0dc9,
	0x0dcb, 0x0dce,
	0x0dd5, 0x0dd5,
	0x0dd7, 0x0dd7,
	0x0de0, 0x0de5,
	0x0df0, 0x0df1,
	0x0df5, 0x0e00,
	0x0e3b, 0x0e3e,
	0x0e5c, 0x0e80,
	0x0e83, 0x0e83,
	0x0e85, 0x0e86,
	0x0e89, 0x0e89,
	0x0e8b, 0x0e8c,
	0x0e8e, 0x0e93,
	0x0e98, 0x0e98,
	0x0ea0, 0x0ea0,
	0x0ea4, 0x0ea4,
	0x0ea6, 0x0ea6,
	0x0ea8, 0x0ea9,
	0x0eac, 0x0eac,
	0x0eba, 0x0eba,
	0x0ebe, 0x0ebf,
	0x0ec5, 0x0ec5,
	0x0ec7, 0x0ec7,
	0x0ece, 0x0ecf,
	0x0eda, 0x0edb,
	0x0ee0, 0x0eff,
	0x0f48, 0x0f48,
	0x0f6d, 0x0f70,
	0x0f98, 0x0f98,
	0x0fbd, 0x0fbd,
	0x0fcd, 0x0fcd,
	0x0fdb, 0x0fff,
	0x10c6, 0x10c6,
	0x10c8, 0x10cc,
	0x10ce, 0x10cf,
	0x1249, 0x1249,
	0x124e, 0x124f,
	0x1257, 0x1257,
	0x1259, 0x1259,
	0x125e, 0x125f,
	0x1289, 0x1289,
	0x128e, 0x128f,
	0x12b1, 0x12b1,
	0x12b6, 0x12b7,
	0x12bf, 0x12bf,
	0x12c1, 0x12c1,
	0x12c6, 0x12c7,
	0x12d7, 0x12d7,
	0x1311, 0x1311,
	0x1316, 0x1317,
	0x135b, 0x135c,
	0x137d, 0x137f,
	0x139a, 0x139f,
	0x13f5, 0x13ff,
	0x169d, 0x169f,
	0x16f9, 0x16ff,
	0x170d, 0x170d,
	0x1715, 0x171f,
	0x1737, 0x173f,
	0x1754, 0x175f,
	0x176d, 0x176d,
	0x1771, 0x1771,
	0x1774, 0x177f,
	0x17de, 0x17df,
	0x17ea, 0x17ef,
	0x17fa, 0x17ff,
	0x180f, 0x180f,
	0x181a, 0x181f,
	0x1878, 0x187f,
	0x18ab, 0x18af,
	0x18f6, 0x18ff,
	0x191f, 0x191f,
	0x192c, 0x192f,
	0x193c, 0x193f,
	0x1941, 0x1943,
	0x196e, 0x196f,
	0x1975, 0x197f,
	0x19ac, 0x19af,
	0x19ca, 0x19cf,
	0x19db, 0x19dd,
	0x1a1c, 0x1a1d,
	0x1a5f, 0x1a5f,
	0x1a7d, 0x1a7e,
	0x1a8a, 0x1a8f,
	0x1a9a, 0x1a9f,
	0x1aae, 0x1aaf,
	0x1abf, 0x1aff,
	0x1b4c, 0x1b4f,
	0x1b7d, 0x1b7f,
	0x1bf4, 0x1bfb,
	0x1c38, 0x1c3a,
	0x1c4a, 0x1c4c,
	0x1c80, 0x1cbf,
	0x1cc8, 0x1ccf,
	0x1cf7, 0x1cf7,
	0x1cfa, 0x1cff,
	0x1df6, 0x1dfb,
	0x1f16, 0x1f17,
	0x1f1e, 0x1f1f,
	0x1f46, 0x1f47,
	0x1f4e, 0x1f4f,
	0x1f58, 0x1f58,
	0x1f5a, 0x1f5a,
	0x1f5c, 0x1f5c,
	0x1f5e, 0x1f5e,
	0x1f7e, 0x1f7f,
	0x1fb5, 0x1fb5,
	0x1fc5, 0x1fc5,
	0x1fd4, 0x1fd5,
	0x1fdc, 0x1fdc,
	0x1ff0, 0x1ff1,
	0x1ff5, 0x1ff5,
	0x1fff, 0x1fff,
	0x2065, 0x2065,
	0x2072, 0x2073,
	0x208f, 0x208f,
	0x209d, 0x209f,
	0x20be, 0x20cf,
	0x20f1, 0x20ff,
	0x218a, 0x218f,
	0x23fb, 0x23ff,
	0x2427, 0x243f,
	0x244b, 0x245f,
	0x2b74, 0x2b75,
	0x2b96, 0x2b97,
	0x2bba, 0x2bbc,
	0x2bc9, 0x2bc9,
	0x2bd2, 0x2bff,
	0x2c2f, 0x2c2f,
	0x2c5f, 0x2c5f,
	0x2cf4, 0x2cf8,
	0x2d26, 0x2d26,
	0x2d28, 0x2d2c,
	0x2d2e, 0x2d2f,
	0x2d68, 0x2d6e,
	0x2d71, 0x2d7e,
	0x2d97, 0x2d9f,
	0x2da7, 0x2da7,
	0x2daf, 0x2daf,
	0x2db7, 0x2db7,
	0x2dbf, 0x2dbf,
	0x2dc7, 0x2dc7,
	0x2dcf, 0x2dcf,
	0x2dd7, 0x2dd7,
	0x2ddf, 0x2ddf,
	0x2e43, 0x2e7f,
	0x2e9a, 0x2e9a,
	0x2ef4, 0x2eff,
	0x2fd6, 0x2fef,
	0x2ffc, 0x2fff,
	0x3040, 0x3040,
	0x3097, 0x3098,
	0x3100, 0x3104,
	0x312e, 0x3130,
	0x318f, 0x318f,
	0x31bb, 0x31bf,
	0x31e4, 0x31ef,
	0x321f, 0x321f,
	0x32ff, 0x32ff,
	0x4db6, 0x4dbf,
	0x9fcd, 0x9fff,
	0xa48d, 0xa48f,
	0xa4c7, 0xa4cf,
	0xa62c, 0xa63f,
	0xa69e, 0xa69e,
	0xa6f8, 0xa6ff,
	0xa78f, 0xa78f,
	0xa7ae, 0xa7af,
	0xa7b2, 0xa7f6,
	0xa82c, 0xa82f,
	0xa83a, 0xa83f,
	0xa878, 0xa87f,
	0xa8c5, 0xa8cd,
	0xa8da, 0xa8df,
	0xa8fc, 0xa8ff,
	0xa954, 0xa95e,
	0xa97d, 0xa97f,
	0xa9ce, 0xa9ce,
	0xa9da, 0xa9dd,
	0xa9ff, 0xa9ff,
	0xaa37, 0xaa3f,
	0xaa4e, 0xaa4f,
	0xaa5a, 0xaa5b,
	0xaac3, 0xaada,
	0xaaf7, 0xab00,
	0xab07, 0xab08,
	0xab0f, 0xab10,
	0xab17, 0xab1f,
	0xab27, 0xab27,
	0xab2f, 0xab2f,
	0xab60, 0xab63,
	0xab66, 0xabbf,
	0xabee, 0xabef,
	0xabfa, 0xabff,
	0xd7a4, 0xd7af,
	0xd7c7, 0xd7ca,
	0xd7fc, 0xd7ff,
	0xfa6e, 0xfa6f,
	0xfada, 0xfaff,
	0xfb07, 0xfb12,
	0xfb18, 0xfb1c,
	0xfb37, 0xfb37,
	0xfb3d, 0xfb3d,
	0xfb3f, 0xfb3f,
	0xfb42, 0xfb42,
	0xfb45, 0xfb45,
	0xfbc2, 0xfbd2,
	0xfd40, 0xfd4f,
	0xfd90, 0xfd91,
	0xfdc8, 0xfdef,
	0xfdfe, 0xfdff,
	0xfe1a, 0xfe1f,
	0xfe2e, 0xfe2f,
	0xfe53, 0xfe53,
	0xfe67, 0xfe67,
	0xfe6c, 0xfe6f,
	0xfe75, 0xfe75,
	0xfefd, 0xfefe,
	0xff00, 0xff00,
	0xffbf, 0xffc1,
	0xffc8, 0xffc9,
	0xffd0, 0xffd1,
	0xffd8, 0xffd9,
	0xffdd, 0xffdf,
	0xffe7, 0xffe7,
	0xffef, 0xfff8,
	0xfffe, 0xffff,
	0x1000c, 0x1000c,
	0x10027, 0x10027,
	0x1003b, 0x1003b,
	0x1003e, 0x1003e,
	0x1004e, 0x1004f,
	0x1005e, 0x1007f,
	0x100fb, 0x100ff,
	0x10103, 0x10106,
	0x10134, 0x10136,
	0x1018d, 0x1018f,
	0x1019c, 0x1019f,
	0x101a1, 0x101cf,
	0x101fe, 0x1027f,
	0x1029d, 0x1029f,
	0x102d1, 0x102df,
	0x102fc, 0x102ff,
	0x10324, 0x1032f,
	0x1034b, 0x1034f,
	0x1037b, 0x1037f,
	0x1039e, 0x1039e,
	0x103c4, 0x103c7,
	0x103d6, 0x103ff,
	0x1049e, 0x1049f,
	0x104aa, 0x104ff,
	0x10528, 0x1052f,
	0x10564, 0x1056e,
	0x10570, 0x105ff,
	0x10737, 0x1073f,
	0x10756, 0x1075f,
	0x10768, 0x107ff,
	0x10806, 0x10807,
	0x10809, 0x10809,
	0x10836, 0x10836,
	0x10839, 0x1083b,
	0x1083d, 0x1083e,
	0x10856, 0x10856,
	0x1089f, 0x108a6,
	0x108b0, 0x108ff,
	0x1091c, 0x1091e,
	0x1093a, 0x1093e,
	0x10940, 0x1097f,
	0x109b8, 0x109bd,
	0x109c0, 0x109ff,
	0x10a04, 0x10a04,
	0x10a07, 0x10a0b,
	0x10a14, 0x10a14,
	0x10a18, 0x10a18,
	0x10a34, 0x10a37,
	0x10a3b, 0x10a3e,
	0x10a48, 0x10a4f,
	0x10a59, 0x10a5f,
	0x10aa0, 0x10abf,
	0x10ae7, 0x10aea,
	0x10af7, 0x10aff,
	0x10b36, 0x10b38,
	0x10b56, 0x10b57,
	0x10b73, 0x10b77,
	0x10b92, 0x10b98,
	0x10b9d, 0x10ba8,
	0x10bb0, 0x10bff,
	0x10c49, 0x10e5f,
	0x10e7f, 0x10fff,
	0x1104e, 0x11051,
	0x11070, 0x1107e,
	0x110c2, 0x110cf,
	0x110e9, 0x110ef,
	0x110fa, 0x110ff,
	0x11135, 0x11135,
	0x11144, 0x1114f,
	0x11177, 0x1117f,
	0x111c9, 0x111cc,
	0x111ce, 0x111cf,
	0x111db, 0x111e0,
	0x111f5, 0x111ff,
	0x11212, 0x11212,
	0x1123e, 0x112af,
	0x112eb, 0x112ef,
	0x112fa, 0x11300,
	0x11304, 0x11304,
	0x1130d, 0x1130e,
	0x11311, 0x11312,
	0x11329, 0x11329,
	0x11331, 0x11331,
	0x11334, 0x11334,
	0x1133a, 0x1133b,
	0x11345, 0x11346,
	0x11349, 0x1134a,
	0x1134e, 0x11356,
	0x11358, 0x1135c,
	0x11364, 0x11365,
	0x1136d, 0x1136f,
	0x11375, 0x1147f,
	0x114c8, 0x114cf,
	0x114da, 0x1157f,
	0x115b6, 0x115b7,
	0x115ca, 0x115ff,
	0x11645, 0x1164f,
	0x1165a, 0x1167f,
	0x116b8, 0x116bf,
	0x116ca, 0x1189f,
	0x118f3, 0x118fe,
	0x11900, 0x11abf,
	0x11af9, 0x11fff,
	0x12399, 0x123ff,
	0x1246f, 0x1246f,
	0x12475, 0x12fff,
	0x1342f, 0x167ff,
	0x16a39, 0x16a3f,
	0x16a5f, 0x16a5f,
	0x16a6a, 0x16a6d,
	0x16a70, 0x16acf,
	0x16aee, 0x16aef,
	0x16af6, 0x16aff,
	0x16b46, 0x16b4f,
	0x16b5a, 0x16b5a,
	0x16b62, 0x16b62,
	0x16b78, 0x16b7c,
	0x16b90, 0x16eff,
	0x16f45, 0x16f4f,
	0x16f7f, 0x16f8e,
	0x16fa0, 0x1afff,
	0x1b002, 0x1bbff,
	0x1bc6b, 0x1bc6f,
	0x1bc7d, 0x1bc7f,
	0x1bc89, 0x1bc8f,
	0x1bc9a, 0x1bc9b,
	0x1bca4, 0x1cfff,
	0x1d0f6, 0x1d0ff,
	0x1d127, 0x1d128,
	0x1d1de, 0x1d1ff,
	0x1d246, 0x1d2ff,
	0x1d357, 0x1d35f,
	0x1d372, 0x1d3ff,
	0x1d455, 0x1d455,
	0x1d49d, 0x1d49d,
	0x1d4a0, 0x1d4a1,
	0x1d4a3, 0x1d4a4,
	0x1d4a7, 0x1d4a8,
	0x1d4ad, 0x1d4ad,
	0x1d4ba, 0x1d4ba,
	0x1d4bc, 0x1d4bc,
	0x1d4c4, 0x1d4c4,
	0x1d506, 0x1d506,
	0x1d50b, 0x1d50c,
	0x1d515, 0x1d515,
	0x1d51d, 0x1d51d,
	0x1d53a, 0x1d53a,
	0x1d53f, 0x1d53f,
	0x1d545, 0x1d545,
	0x1d547, 0x1d549,
	0x1d551, 0x1d551,
	0x1d6a6, 0x1d6a7,
	0x1d7cc, 0x1d7cd,
	0x1d800, 0x1e7ff,
	0x1e8c5, 0x1e8c6,
	0x1e8d7, 0x1edff,
	0x1ee04, 0x1ee04,
	0x1ee20, 0x1ee20,
	0x1ee23, 0x1ee23,
	0x1ee25, 0x1ee26,
	0x1ee28, 0x1ee28,
	0x1ee33, 0x1ee33,
	0x1ee38, 0x1ee38,
	0x1ee3a, 0x1ee3a,
	0x1ee3c, 0x1ee41,
	0x1ee43, 0x1ee46,
	0x1ee48, 0x1ee48,
	0x1ee4a, 0x1ee4a,
	0x1ee4c, 0x1ee4c,
	0x1ee50, 0x1ee50,
	0x1ee53, 0x1ee53,
	0x1ee55, 0x1ee56,
	0x1ee58, 0x1ee58,
	0x1ee5a, 0x1ee5a,
	0x1ee5c, 0x1ee5c,
	0x1ee5e, 0x1ee5e,
	0x1ee60, 0x1ee60,
	0x1ee63, 0x1ee63,
	0x1ee65, 0x1ee66,
	0x1ee6b, 0x1ee6b,
	0x1ee73, 0x1ee73,
	0x1ee78, 0x1ee78,
	0x1ee7d, 0x1ee7d,
	0x1ee7f, 0x1ee7f,
	0x1ee8a, 0x1ee8a,
	0x1ee9c, 0x1eea0,
	0x1eea4, 0x1eea4,
	0x1eeaa, 0x1eeaa,
	0x1eebc, 0x1eeef,
	0x1eef2, 0x1efff,
	0x1f02c, 0x1f02f,
	0x1f094, 0x1f09f,
	0x1f0af, 0x1f0b0,
	0x1f0c0, 0x1f0c0,
	0x1f0d0, 0x1f0d0,
	0x1f0f6, 0x1f0ff,
	0x1f10d, 0x1f10f,
	0x1f12f, 0x1f12f,
	0x1f16c, 0x1f16f,
	0x1f19b, 0x1f1e5,
	0x1f203, 0x1f20f,
	0x1f23b, 0x1f23f,
	0x1f249, 0x1f24f,
	0x1f252, 0x1f2ff,
	0x1f32d, 0x1f32f,
	0x1f37e, 0x1f37f,
	0x1f3cf, 0x1f3d3,
	0x1f3f8, 0x1f3ff,
	0x1f4ff, 0x1f4ff,
	0x1f54b, 0x1f54f,
	0x1f57a, 0x1f57a,
	0x1f5a4, 0x1f5a4,
	0x1f643, 0x1f644,
	0x1f6d0, 0x1f6df,
	0x1f6ed, 0x1f6ef,
	0x1f6f4, 0x1f6ff,
	0x1f774, 0x1f77f,
	0x1f7d5, 0x1f7ff,
	0x1f80c, 0x1f80f,
	0x1f848, 0x1f84f,
	0x1f85a, 0x1f85f,
	0x1f888, 0x1f88f,
	0x1f8ae, 0x1ffff,
	0x2a6d7, 0x2a6ff,
	0x2b735, 0x2b73f,
	0x2b81e, 0x2f7ff,
	0x2fa1e, 0xe0000,
	0xe0002, 0xe001f,
	0xe0080, 0xe00ff,
	0xe01f0, 0xeffff,
	0xffffe, 0xfffff,
	0x10fffe, 0x10ffff,
}; /* CR_Cn */

/* 'Co': General Category */
static const OnigCodePoint CR_Co[] = {
	3,
	0xe000, 0xf8ff,
	0xf0000, 0xffffd,
	0x100000, 0x10fffd,
}; /* CR_Co */

/* 'Cs': General Category */
static const OnigCodePoint CR_Cs[] = {
	1,
	0xd800, 0xdfff,
}; /* CR_Cs */

/* 'L': Major Category */
static const OnigCodePoint CR_L[] = {
	537,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0370, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0620, 0x064a,
	0x066e, 0x066f,
	0x0671, 0x06d3,
	0x06d5, 0x06d5,
	0x06e5, 0x06e6,
	0x06ee, 0x06ef,
	0x06fa, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x0710,
	0x0712, 0x072f,
	0x074d, 0x07a5,
	0x07b1, 0x07b1,
	0x07ca, 0x07ea,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x0815,
	0x081a, 0x081a,
	0x0824, 0x0824,
	0x0828, 0x0828,
	0x0840, 0x0858,
	0x08a0, 0x08b2,
	0x0904, 0x0939,
	0x093d, 0x093d,
	0x0950, 0x0950,
	0x0958, 0x0961,
	0x0971, 0x0980,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09bd,
	0x09ce, 0x09ce,
	0x09dc, 0x09dd,
	0x09df, 0x09e1,
	0x09f0, 0x09f1,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a72, 0x0a74,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0abd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae1,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b3d,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b71, 0x0b71,
	0x0b83, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bd0, 0x0bd0,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c3d,
	0x0c58, 0x0c59,
	0x0c60, 0x0c61,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cbd,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0cf1, 0x0cf2,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d3d,
	0x0d4e, 0x0d4e,
	0x0d60, 0x0d61,
	0x0d7a, 0x0d7f,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0e01, 0x0e30,
	0x0e32, 0x0e33,
	0x0e40, 0x0e46,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb0,
	0x0eb2, 0x0eb3,
	0x0ebd, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0edc, 0x0edf,
	0x0f00, 0x0f00,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f88, 0x0f8c,
	0x1000, 0x102a,
	0x103f, 0x103f,
	0x1050, 0x1055,
	0x105a, 0x105d,
	0x1061, 0x1061,
	0x1065, 0x1066,
	0x106e, 0x1070,
	0x1075, 0x1081,
	0x108e, 0x108e,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x10fa,
	0x10fc, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16f1, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1711,
	0x1720, 0x1731,
	0x1740, 0x1751,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1780, 0x17b3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dc,
	0x1820, 0x1877,
	0x1880, 0x18a8,
	0x18aa, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1950, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19c1, 0x19c7,
	0x1a00, 0x1a16,
	0x1a20, 0x1a54,
	0x1aa7, 0x1aa7,
	0x1b05, 0x1b33,
	0x1b45, 0x1b4b,
	0x1b83, 0x1ba0,
	0x1bae, 0x1baf,
	0x1bba, 0x1be5,
	0x1c00, 0x1c23,
	0x1c4d, 0x1c4f,
	0x1c5a, 0x1c7d,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf1,
	0x1cf5, 0x1cf6,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2183, 0x2184,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2cf2, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2e2f, 0x2e2f,
	0x3005, 0x3006,
	0x3031, 0x3035,
	0x303b, 0x303c,
	0x3041, 0x3096,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa61f,
	0xa62a, 0xa62b,
	0xa640, 0xa66e,
	0xa67f, 0xa69d,
	0xa6a0, 0xa6e5,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa822,
	0xa840, 0xa873,
	0xa882, 0xa8b3,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa90a, 0xa925,
	0xa930, 0xa946,
	0xa960, 0xa97c,
	0xa984, 0xa9b2,
	0xa9cf, 0xa9cf,
	0xa9e0, 0xa9e4,
	0xa9e6, 0xa9ef,
	0xa9fa, 0xa9fe,
	0xaa00, 0xaa28,
	0xaa40, 0xaa42,
	0xaa44, 0xaa4b,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa7e, 0xaaaf,
	0xaab1, 0xaab1,
	0xaab5, 0xaab6,
	0xaab9, 0xaabd,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadd,
	0xaae0, 0xaaea,
	0xaaf2, 0xaaf4,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5a,
	0xab5c, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabe2,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb1d,
	0xfb1f, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031f,
	0x10330, 0x10340,
	0x10342, 0x10349,
	0x10350, 0x10375,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x10400, 0x1049d,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10860, 0x10876,
	0x10880, 0x1089e,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a00,
	0x10a10, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10a80, 0x10a9c,
	0x10ac0, 0x10ac7,
	0x10ac9, 0x10ae4,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10b80, 0x10b91,
	0x10c00, 0x10c48,
	0x11003, 0x11037,
	0x11083, 0x110af,
	0x110d0, 0x110e8,
	0x11103, 0x11126,
	0x11150, 0x11172,
	0x11176, 0x11176,
	0x11183, 0x111b2,
	0x111c1, 0x111c4,
	0x111da, 0x111da,
	0x11200, 0x11211,
	0x11213, 0x1122b,
	0x112b0, 0x112de,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133d, 0x1133d,
	0x1135d, 0x11361,
	0x11480, 0x114af,
	0x114c4, 0x114c5,
	0x114c7, 0x114c7,
	0x11580, 0x115ae,
	0x11600, 0x1162f,
	0x11644, 0x11644,
	0x11680, 0x116aa,
	0x118a0, 0x118df,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16ad0, 0x16aed,
	0x16b00, 0x16b2f,
	0x16b40, 0x16b43,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f50,
	0x16f93, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1e800, 0x1e8c4,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_L */

/* 'LC': General Category */
static const OnigCodePoint CR_LC[] = {
	117,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00b5, 0x00b5,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x01ba,
	0x01bc, 0x01bf,
	0x01c4, 0x0293,
	0x0295, 0x02af,
	0x0370, 0x0373,
	0x0376, 0x0377,
	0x037b, 0x037d,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x052f,
	0x0531, 0x0556,
	0x0561, 0x0587,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x1d00, 0x1d2b,
	0x1d6b, 0x1d77,
	0x1d79, 0x1d9a,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2134,
	0x2139, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2183, 0x2184,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2c7b,
	0x2c7e, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2cf2, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0xa640, 0xa66d,
	0xa680, 0xa69b,
	0xa722, 0xa76f,
	0xa771, 0xa787,
	0xa78b, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7fa, 0xa7fa,
	0xab30, 0xab5a,
	0xab64, 0xab65,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0x10400, 0x1044f,
	0x118a0, 0x118df,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
}; /* CR_LC */

/* 'Ll': General Category */
static const OnigCodePoint CR_Ll[] = {
	625,
	0x0061, 0x007a,
	0x00b5, 0x00b5,
	0x00df, 0x00f6,
	0x00f8, 0x00ff,
	0x0101, 0x0101,
	0x0103, 0x0103,
	0x0105, 0x0105,
	0x0107, 0x0107,
	0x0109, 0x0109,
	0x010b, 0x010b,
	0x010d, 0x010d,
	0x010f, 0x010f,
	0x0111, 0x0111,
	0x0113, 0x0113,
	0x0115, 0x0115,
	0x0117, 0x0117,
	0x0119, 0x0119,
	0x011b, 0x011b,
	0x011d, 0x011d,
	0x011f, 0x011f,
	0x0121, 0x0121,
	0x0123, 0x0123,
	0x0125, 0x0125,
	0x0127, 0x0127,
	0x0129, 0x0129,
	0x012b, 0x012b,
	0x012d, 0x012d,
	0x012f, 0x012f,
	0x0131, 0x0131,
	0x0133, 0x0133,
	0x0135, 0x0135,
	0x0137, 0x0138,
	0x013a, 0x013a,
	0x013c, 0x013c,
	0x013e, 0x013e,
	0x0140, 0x0140,
	0x0142, 0x0142,
	0x0144, 0x0144,
	0x0146, 0x0146,
	0x0148, 0x0149,
	0x014b, 0x014b,
	0x014d, 0x014d,
	0x014f, 0x014f,
	0x0151, 0x0151,
	0x0153, 0x0153,
	0x0155, 0x0155,
	0x0157, 0x0157,
	0x0159, 0x0159,
	0x015b, 0x015b,
	0x015d, 0x015d,
	0x015f, 0x015f,
	0x0161, 0x0161,
	0x0163, 0x0163,
	0x0165, 0x0165,
	0x0167, 0x0167,
	0x0169, 0x0169,
	0x016b, 0x016b,
	0x016d, 0x016d,
	0x016f, 0x016f,
	0x0171, 0x0171,
	0x0173, 0x0173,
	0x0175, 0x0175,
	0x0177, 0x0177,
	0x017a, 0x017a,
	0x017c, 0x017c,
	0x017e, 0x0180,
	0x0183, 0x0183,
	0x0185, 0x0185,
	0x0188, 0x0188,
	0x018c, 0x018d,
	0x0192, 0x0192,
	0x0195, 0x0195,
	0x0199, 0x019b,
	0x019e, 0x019e,
	0x01a1, 0x01a1,
	0x01a3, 0x01a3,
	0x01a5, 0x01a5,
	0x01a8, 0x01a8,
	0x01aa, 0x01ab,
	0x01ad, 0x01ad,
	0x01b0, 0x01b0,
	0x01b4, 0x01b4,
	0x01b6, 0x01b6,
	0x01b9, 0x01ba,
	0x01bd, 0x01bf,
	0x01c6, 0x01c6,
	0x01c9, 0x01c9,
	0x01cc, 0x01cc,
	0x01ce, 0x01ce,
	0x01d0, 0x01d0,
	0x01d2, 0x01d2,
	0x01d4, 0x01d4,
	0x01d6, 0x01d6,
	0x01d8, 0x01d8,
	0x01da, 0x01da,
	0x01dc, 0x01dd,
	0x01df, 0x01df,
	0x01e1, 0x01e1,
	0x01e3, 0x01e3,
	0x01e5, 0x01e5,
	0x01e7, 0x01e7,
	0x01e9, 0x01e9,
	0x01eb, 0x01eb,
	0x01ed, 0x01ed,
	0x01ef, 0x01f0,
	0x01f3, 0x01f3,
	0x01f5, 0x01f5,
	0x01f9, 0x01f9,
	0x01fb, 0x01fb,
	0x01fd, 0x01fd,
	0x01ff, 0x01ff,
	0x0201, 0x0201,
	0x0203, 0x0203,
	0x0205, 0x0205,
	0x0207, 0x0207,
	0x0209, 0x0209,
	0x020b, 0x020b,
	0x020d, 0x020d,
	0x020f, 0x020f,
	0x0211, 0x0211,
	0x0213, 0x0213,
	0x0215, 0x0215,
	0x0217, 0x0217,
	0x0219, 0x0219,
	0x021b, 0x021b,
	0x021d, 0x021d,
	0x021f, 0x021f,
	0x0221, 0x0221,
	0x0223, 0x0223,
	0x0225, 0x0225,
	0x0227, 0x0227,
	0x0229, 0x0229,
	0x022b, 0x022b,
	0x022d, 0x022d,
	0x022f, 0x022f,
	0x0231, 0x0231,
	0x0233, 0x0239,
	0x023c, 0x023c,
	0x023f, 0x0240,
	0x0242, 0x0242,
	0x0247, 0x0247,
	0x0249, 0x0249,
	0x024b, 0x024b,
	0x024d, 0x024d,
	0x024f, 0x0293,
	0x0295, 0x02af,
	0x0371, 0x0371,
	0x0373, 0x0373,
	0x0377, 0x0377,
	0x037b, 0x037d,
	0x0390, 0x0390,
	0x03ac, 0x03ce,
	0x03d0, 0x03d1,
	0x03d5, 0x03d7,
	0x03d9, 0x03d9,
	0x03db, 0x03db,
	0x03dd, 0x03dd,
	0x03df, 0x03df,
	0x03e1, 0x03e1,
	0x03e3, 0x03e3,
	0x03e5, 0x03e5,
	0x03e7, 0x03e7,
	0x03e9, 0x03e9,
	0x03eb, 0x03eb,
	0x03ed, 0x03ed,
	0x03ef, 0x03f3,
	0x03f5, 0x03f5,
	0x03f8, 0x03f8,
	0x03fb, 0x03fc,
	0x0430, 0x045f,
	0x0461, 0x0461,
	0x0463, 0x0463,
	0x0465, 0x0465,
	0x0467, 0x0467,
	0x0469, 0x0469,
	0x046b, 0x046b,
	0x046d, 0x046d,
	0x046f, 0x046f,
	0x0471, 0x0471,
	0x0473, 0x0473,
	0x0475, 0x0475,
	0x0477, 0x0477,
	0x0479, 0x0479,
	0x047b, 0x047b,
	0x047d, 0x047d,
	0x047f, 0x047f,
	0x0481, 0x0481,
	0x048b, 0x048b,
	0x048d, 0x048d,
	0x048f, 0x048f,
	0x0491, 0x0491,
	0x0493, 0x0493,
	0x0495, 0x0495,
	0x0497, 0x0497,
	0x0499, 0x0499,
	0x049b, 0x049b,
	0x049d, 0x049d,
	0x049f, 0x049f,
	0x04a1, 0x04a1,
	0x04a3, 0x04a3,
	0x04a5, 0x04a5,
	0x04a7, 0x04a7,
	0x04a9, 0x04a9,
	0x04ab, 0x04ab,
	0x04ad, 0x04ad,
	0x04af, 0x04af,
	0x04b1, 0x04b1,
	0x04b3, 0x04b3,
	0x04b5, 0x04b5,
	0x04b7, 0x04b7,
	0x04b9, 0x04b9,
	0x04bb, 0x04bb,
	0x04bd, 0x04bd,
	0x04bf, 0x04bf,
	0x04c2, 0x04c2,
	0x04c4, 0x04c4,
	0x04c6, 0x04c6,
	0x04c8, 0x04c8,
	0x04ca, 0x04ca,
	0x04cc, 0x04cc,
	0x04ce, 0x04cf,
	0x04d1, 0x04d1,
	0x04d3, 0x04d3,
	0x04d5, 0x04d5,
	0x04d7, 0x04d7,
	0x04d9, 0x04d9,
	0x04db, 0x04db,
	0x04dd, 0x04dd,
	0x04df, 0x04df,
	0x04e1, 0x04e1,
	0x04e3, 0x04e3,
	0x04e5, 0x04e5,
	0x04e7, 0x04e7,
	0x04e9, 0x04e9,
	0x04eb, 0x04eb,
	0x04ed, 0x04ed,
	0x04ef, 0x04ef,
	0x04f1, 0x04f1,
	0x04f3, 0x04f3,
	0x04f5, 0x04f5,
	0x04f7, 0x04f7,
	0x04f9, 0x04f9,
	0x04fb, 0x04fb,
	0x04fd, 0x04fd,
	0x04ff, 0x04ff,
	0x0501, 0x0501,
	0x0503, 0x0503,
	0x0505, 0x0505,
	0x0507, 0x0507,
	0x0509, 0x0509,
	0x050b, 0x050b,
	0x050d, 0x050d,
	0x050f, 0x050f,
	0x0511, 0x0511,
	0x0513, 0x0513,
	0x0515, 0x0515,
	0x0517, 0x0517,
	0x0519, 0x0519,
	0x051b, 0x051b,
	0x051d, 0x051d,
	0x051f, 0x051f,
	0x0521, 0x0521,
	0x0523, 0x0523,
	0x0525, 0x0525,
	0x0527, 0x0527,
	0x0529, 0x0529,
	0x052b, 0x052b,
	0x052d, 0x052d,
	0x052f, 0x052f,
	0x0561, 0x0587,
	0x1d00, 0x1d2b,
	0x1d6b, 0x1d77,
	0x1d79, 0x1d9a,
	0x1e01, 0x1e01,
	0x1e03, 0x1e03,
	0x1e05, 0x1e05,
	0x1e07, 0x1e07,
	0x1e09, 0x1e09,
	0x1e0b, 0x1e0b,
	0x1e0d, 0x1e0d,
	0x1e0f, 0x1e0f,
	0x1e11, 0x1e11,
	0x1e13, 0x1e13,
	0x1e15, 0x1e15,
	0x1e17, 0x1e17,
	0x1e19, 0x1e19,
	0x1e1b, 0x1e1b,
	0x1e1d, 0x1e1d,
	0x1e1f, 0x1e1f,
	0x1e21, 0x1e21,
	0x1e23, 0x1e23,
	0x1e25, 0x1e25,
	0x1e27, 0x1e27,
	0x1e29, 0x1e29,
	0x1e2b, 0x1e2b,
	0x1e2d, 0x1e2d,
	0x1e2f, 0x1e2f,
	0x1e31, 0x1e31,
	0x1e33, 0x1e33,
	0x1e35, 0x1e35,
	0x1e37, 0x1e37,
	0x1e39, 0x1e39,
	0x1e3b, 0x1e3b,
	0x1e3d, 0x1e3d,
	0x1e3f, 0x1e3f,
	0x1e41, 0x1e41,
	0x1e43, 0x1e43,
	0x1e45, 0x1e45,
	0x1e47, 0x1e47,
	0x1e49, 0x1e49,
	0x1e4b, 0x1e4b,
	0x1e4d, 0x1e4d,
	0x1e4f, 0x1e4f,
	0x1e51, 0x1e51,
	0x1e53, 0x1e53,
	0x1e55, 0x1e55,
	0x1e57, 0x1e57,
	0x1e59, 0x1e59,
	0x1e5b, 0x1e5b,
	0x1e5d, 0x1e5d,
	0x1e5f, 0x1e5f,
	0x1e61, 0x1e61,
	0x1e63, 0x1e63,
	0x1e65, 0x1e65,
	0x1e67, 0x1e67,
	0x1e69, 0x1e69,
	0x1e6b, 0x1e6b,
	0x1e6d, 0x1e6d,
	0x1e6f, 0x1e6f,
	0x1e71, 0x1e71,
	0x1e73, 0x1e73,
	0x1e75, 0x1e75,
	0x1e77, 0x1e77,
	0x1e79, 0x1e79,
	0x1e7b, 0x1e7b,
	0x1e7d, 0x1e7d,
	0x1e7f, 0x1e7f,
	0x1e81, 0x1e81,
	0x1e83, 0x1e83,
	0x1e85, 0x1e85,
	0x1e87, 0x1e87,
	0x1e89, 0x1e89,
	0x1e8b, 0x1e8b,
	0x1e8d, 0x1e8d,
	0x1e8f, 0x1e8f,
	0x1e91, 0x1e91,
	0x1e93, 0x1e93,
	0x1e95, 0x1e9d,
	0x1e9f, 0x1e9f,
	0x1ea1, 0x1ea1,
	0x1ea3, 0x1ea3,
	0x1ea5, 0x1ea5,
	0x1ea7, 0x1ea7,
	0x1ea9, 0x1ea9,
	0x1eab, 0x1eab,
	0x1ead, 0x1ead,
	0x1eaf, 0x1eaf,
	0x1eb1, 0x1eb1,
	0x1eb3, 0x1eb3,
	0x1eb5, 0x1eb5,
	0x1eb7, 0x1eb7,
	0x1eb9, 0x1eb9,
	0x1ebb, 0x1ebb,
	0x1ebd, 0x1ebd,
	0x1ebf, 0x1ebf,
	0x1ec1, 0x1ec1,
	0x1ec3, 0x1ec3,
	0x1ec5, 0x1ec5,
	0x1ec7, 0x1ec7,
	0x1ec9, 0x1ec9,
	0x1ecb, 0x1ecb,
	0x1ecd, 0x1ecd,
	0x1ecf, 0x1ecf,
	0x1ed1, 0x1ed1,
	0x1ed3, 0x1ed3,
	0x1ed5, 0x1ed5,
	0x1ed7, 0x1ed7,
	0x1ed9, 0x1ed9,
	0x1edb, 0x1edb,
	0x1edd, 0x1edd,
	0x1edf, 0x1edf,
	0x1ee1, 0x1ee1,
	0x1ee3, 0x1ee3,
	0x1ee5, 0x1ee5,
	0x1ee7, 0x1ee7,
	0x1ee9, 0x1ee9,
	0x1eeb, 0x1eeb,
	0x1eed, 0x1eed,
	0x1eef, 0x1eef,
	0x1ef1, 0x1ef1,
	0x1ef3, 0x1ef3,
	0x1ef5, 0x1ef5,
	0x1ef7, 0x1ef7,
	0x1ef9, 0x1ef9,
	0x1efb, 0x1efb,
	0x1efd, 0x1efd,
	0x1eff, 0x1f07,
	0x1f10, 0x1f15,
	0x1f20, 0x1f27,
	0x1f30, 0x1f37,
	0x1f40, 0x1f45,
	0x1f50, 0x1f57,
	0x1f60, 0x1f67,
	0x1f70, 0x1f7d,
	0x1f80, 0x1f87,
	0x1f90, 0x1f97,
	0x1fa0, 0x1fa7,
	0x1fb0, 0x1fb4,
	0x1fb6, 0x1fb7,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fc7,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fd7,
	0x1fe0, 0x1fe7,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ff7,
	0x210a, 0x210a,
	0x210e, 0x210f,
	0x2113, 0x2113,
	0x212f, 0x212f,
	0x2134, 0x2134,
	0x2139, 0x2139,
	0x213c, 0x213d,
	0x2146, 0x2149,
	0x214e, 0x214e,
	0x2184, 0x2184,
	0x2c30, 0x2c5e,
	0x2c61, 0x2c61,
	0x2c65, 0x2c66,
	0x2c68, 0x2c68,
	0x2c6a, 0x2c6a,
	0x2c6c, 0x2c6c,
	0x2c71, 0x2c71,
	0x2c73, 0x2c74,
	0x2c76, 0x2c7b,
	0x2c81, 0x2c81,
	0x2c83, 0x2c83,
	0x2c85, 0x2c85,
	0x2c87, 0x2c87,
	0x2c89, 0x2c89,
	0x2c8b, 0x2c8b,
	0x2c8d, 0x2c8d,
	0x2c8f, 0x2c8f,
	0x2c91, 0x2c91,
	0x2c93, 0x2c93,
	0x2c95, 0x2c95,
	0x2c97, 0x2c97,
	0x2c99, 0x2c99,
	0x2c9b, 0x2c9b,
	0x2c9d, 0x2c9d,
	0x2c9f, 0x2c9f,
	0x2ca1, 0x2ca1,
	0x2ca3, 0x2ca3,
	0x2ca5, 0x2ca5,
	0x2ca7, 0x2ca7,
	0x2ca9, 0x2ca9,
	0x2cab, 0x2cab,
	0x2cad, 0x2cad,
	0x2caf, 0x2caf,
	0x2cb1, 0x2cb1,
	0x2cb3, 0x2cb3,
	0x2cb5, 0x2cb5,
	0x2cb7, 0x2cb7,
	0x2cb9, 0x2cb9,
	0x2cbb, 0x2cbb,
	0x2cbd, 0x2cbd,
	0x2cbf, 0x2cbf,
	0x2cc1, 0x2cc1,
	0x2cc3, 0x2cc3,
	0x2cc5, 0x2cc5,
	0x2cc7, 0x2cc7,
	0x2cc9, 0x2cc9,
	0x2ccb, 0x2ccb,
	0x2ccd, 0x2ccd,
	0x2ccf, 0x2ccf,
	0x2cd1, 0x2cd1,
	0x2cd3, 0x2cd3,
	0x2cd5, 0x2cd5,
	0x2cd7, 0x2cd7,
	0x2cd9, 0x2cd9,
	0x2cdb, 0x2cdb,
	0x2cdd, 0x2cdd,
	0x2cdf, 0x2cdf,
	0x2ce1, 0x2ce1,
	0x2ce3, 0x2ce4,
	0x2cec, 0x2cec,
	0x2cee, 0x2cee,
	0x2cf3, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0xa641, 0xa641,
	0xa643, 0xa643,
	0xa645, 0xa645,
	0xa647, 0xa647,
	0xa649, 0xa649,
	0xa64b, 0xa64b,
	0xa64d, 0xa64d,
	0xa64f, 0xa64f,
	0xa651, 0xa651,
	0xa653, 0xa653,
	0xa655, 0xa655,
	0xa657, 0xa657,
	0xa659, 0xa659,
	0xa65b, 0xa65b,
	0xa65d, 0xa65d,
	0xa65f, 0xa65f,
	0xa661, 0xa661,
	0xa663, 0xa663,
	0xa665, 0xa665,
	0xa667, 0xa667,
	0xa669, 0xa669,
	0xa66b, 0xa66b,
	0xa66d, 0xa66d,
	0xa681, 0xa681,
	0xa683, 0xa683,
	0xa685, 0xa685,
	0xa687, 0xa687,
	0xa689, 0xa689,
	0xa68b, 0xa68b,
	0xa68d, 0xa68d,
	0xa68f, 0xa68f,
	0xa691, 0xa691,
	0xa693, 0xa693,
	0xa695, 0xa695,
	0xa697, 0xa697,
	0xa699, 0xa699,
	0xa69b, 0xa69b,
	0xa723, 0xa723,
	0xa725, 0xa725,
	0xa727, 0xa727,
	0xa729, 0xa729,
	0xa72b, 0xa72b,
	0xa72d, 0xa72d,
	0xa72f, 0xa731,
	0xa733, 0xa733,
	0xa735, 0xa735,
	0xa737, 0xa737,
	0xa739, 0xa739,
	0xa73b, 0xa73b,
	0xa73d, 0xa73d,
	0xa73f, 0xa73f,
	0xa741, 0xa741,
	0xa743, 0xa743,
	0xa745, 0xa745,
	0xa747, 0xa747,
	0xa749, 0xa749,
	0xa74b, 0xa74b,
	0xa74d, 0xa74d,
	0xa74f, 0xa74f,
	0xa751, 0xa751,
	0xa753, 0xa753,
	0xa755, 0xa755,
	0xa757, 0xa757,
	0xa759, 0xa759,
	0xa75b, 0xa75b,
	0xa75d, 0xa75d,
	0xa75f, 0xa75f,
	0xa761, 0xa761,
	0xa763, 0xa763,
	0xa765, 0xa765,
	0xa767, 0xa767,
	0xa769, 0xa769,
	0xa76b, 0xa76b,
	0xa76d, 0xa76d,
	0xa76f, 0xa76f,
	0xa771, 0xa778,
	0xa77a, 0xa77a,
	0xa77c, 0xa77c,
	0xa77f, 0xa77f,
	0xa781, 0xa781,
	0xa783, 0xa783,
	0xa785, 0xa785,
	0xa787, 0xa787,
	0xa78c, 0xa78c,
	0xa78e, 0xa78e,
	0xa791, 0xa791,
	0xa793, 0xa795,
	0xa797, 0xa797,
	0xa799, 0xa799,
	0xa79b, 0xa79b,
	0xa79d, 0xa79d,
	0xa79f, 0xa79f,
	0xa7a1, 0xa7a1,
	0xa7a3, 0xa7a3,
	0xa7a5, 0xa7a5,
	0xa7a7, 0xa7a7,
	0xa7a9, 0xa7a9,
	0xa7fa, 0xa7fa,
	0xab30, 0xab5a,
	0xab64, 0xab65,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff41, 0xff5a,
	0x10428, 0x1044f,
	0x118c0, 0x118df,
	0x1d41a, 0x1d433,
	0x1d44e, 0x1d454,
	0x1d456, 0x1d467,
	0x1d482, 0x1d49b,
	0x1d4b6, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d4cf,
	0x1d4ea, 0x1d503,
	0x1d51e, 0x1d537,
	0x1d552, 0x1d56b,
	0x1d586, 0x1d59f,
	0x1d5ba, 0x1d5d3,
	0x1d5ee, 0x1d607,
	0x1d622, 0x1d63b,
	0x1d656, 0x1d66f,
	0x1d68a, 0x1d6a5,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6e1,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d71b,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d755,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d78f,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7c9,
	0x1d7cb, 0x1d7cb,
}; /* CR_Ll */

/* 'Lm': General Category */
static const OnigCodePoint CR_Lm[] = {
	56,
	0x02b0, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0374, 0x0374,
	0x037a, 0x037a,
	0x0559, 0x0559,
	0x0640, 0x0640,
	0x06e5, 0x06e6,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x081a, 0x081a,
	0x0824, 0x0824,
	0x0828, 0x0828,
	0x0971, 0x0971,
	0x0e46, 0x0e46,
	0x0ec6, 0x0ec6,
	0x10fc, 0x10fc,
	0x17d7, 0x17d7,
	0x1843, 0x1843,
	0x1aa7, 0x1aa7,
	0x1c78, 0x1c7d,
	0x1d2c, 0x1d6a,
	0x1d78, 0x1d78,
	0x1d9b, 0x1dbf,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2c7c, 0x2c7d,
	0x2d6f, 0x2d6f,
	0x2e2f, 0x2e2f,
	0x3005, 0x3005,
	0x3031, 0x3035,
	0x303b, 0x303b,
	0x309d, 0x309e,
	0x30fc, 0x30fe,
	0xa015, 0xa015,
	0xa4f8, 0xa4fd,
	0xa60c, 0xa60c,
	0xa67f, 0xa67f,
	0xa69c, 0xa69d,
	0xa717, 0xa71f,
	0xa770, 0xa770,
	0xa788, 0xa788,
	0xa7f8, 0xa7f9,
	0xa9cf, 0xa9cf,
	0xa9e6, 0xa9e6,
	0xaa70, 0xaa70,
	0xaadd, 0xaadd,
	0xaaf3, 0xaaf4,
	0xab5c, 0xab5f,
	0xff70, 0xff70,
	0xff9e, 0xff9f,
	0x16b40, 0x16b43,
	0x16f93, 0x16f9f,
}; /* CR_Lm */

/* 'Lo': General Category */
static const OnigCodePoint CR_Lo[] = {
	417,
	0x00aa, 0x00aa,
	0x00ba, 0x00ba,
	0x01bb, 0x01bb,
	0x01c0, 0x01c3,
	0x0294, 0x0294,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0620, 0x063f,
	0x0641, 0x064a,
	0x066e, 0x066f,
	0x0671, 0x06d3,
	0x06d5, 0x06d5,
	0x06ee, 0x06ef,
	0x06fa, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x0710,
	0x0712, 0x072f,
	0x074d, 0x07a5,
	0x07b1, 0x07b1,
	0x07ca, 0x07ea,
	0x0800, 0x0815,
	0x0840, 0x0858,
	0x08a0, 0x08b2,
	0x0904, 0x0939,
	0x093d, 0x093d,
	0x0950, 0x0950,
	0x0958, 0x0961,
	0x0972, 0x0980,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09bd,
	0x09ce, 0x09ce,
	0x09dc, 0x09dd,
	0x09df, 0x09e1,
	0x09f0, 0x09f1,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a72, 0x0a74,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0abd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae1,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b3d,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b71, 0x0b71,
	0x0b83, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bd0, 0x0bd0,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c3d,
	0x0c58, 0x0c59,
	0x0c60, 0x0c61,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cbd,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0cf1, 0x0cf2,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d3d,
	0x0d4e, 0x0d4e,
	0x0d60, 0x0d61,
	0x0d7a, 0x0d7f,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0e01, 0x0e30,
	0x0e32, 0x0e33,
	0x0e40, 0x0e45,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb0,
	0x0eb2, 0x0eb3,
	0x0ebd, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0edc, 0x0edf,
	0x0f00, 0x0f00,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f88, 0x0f8c,
	0x1000, 0x102a,
	0x103f, 0x103f,
	0x1050, 0x1055,
	0x105a, 0x105d,
	0x1061, 0x1061,
	0x1065, 0x1066,
	0x106e, 0x1070,
	0x1075, 0x1081,
	0x108e, 0x108e,
	0x10d0, 0x10fa,
	0x10fd, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16f1, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1711,
	0x1720, 0x1731,
	0x1740, 0x1751,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1780, 0x17b3,
	0x17dc, 0x17dc,
	0x1820, 0x1842,
	0x1844, 0x1877,
	0x1880, 0x18a8,
	0x18aa, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1950, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19c1, 0x19c7,
	0x1a00, 0x1a16,
	0x1a20, 0x1a54,
	0x1b05, 0x1b33,
	0x1b45, 0x1b4b,
	0x1b83, 0x1ba0,
	0x1bae, 0x1baf,
	0x1bba, 0x1be5,
	0x1c00, 0x1c23,
	0x1c4d, 0x1c4f,
	0x1c5a, 0x1c77,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf1,
	0x1cf5, 0x1cf6,
	0x2135, 0x2138,
	0x2d30, 0x2d67,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x3006, 0x3006,
	0x303c, 0x303c,
	0x3041, 0x3096,
	0x309f, 0x309f,
	0x30a1, 0x30fa,
	0x30ff, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xa000, 0xa014,
	0xa016, 0xa48c,
	0xa4d0, 0xa4f7,
	0xa500, 0xa60b,
	0xa610, 0xa61f,
	0xa62a, 0xa62b,
	0xa66e, 0xa66e,
	0xa6a0, 0xa6e5,
	0xa7f7, 0xa7f7,
	0xa7fb, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa822,
	0xa840, 0xa873,
	0xa882, 0xa8b3,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa90a, 0xa925,
	0xa930, 0xa946,
	0xa960, 0xa97c,
	0xa984, 0xa9b2,
	0xa9e0, 0xa9e4,
	0xa9e7, 0xa9ef,
	0xa9fa, 0xa9fe,
	0xaa00, 0xaa28,
	0xaa40, 0xaa42,
	0xaa44, 0xaa4b,
	0xaa60, 0xaa6f,
	0xaa71, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa7e, 0xaaaf,
	0xaab1, 0xaab1,
	0xaab5, 0xaab6,
	0xaab9, 0xaabd,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadc,
	0xaae0, 0xaaea,
	0xaaf2, 0xaaf2,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabe2,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb1d, 0xfb1d,
	0xfb1f, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff66, 0xff6f,
	0xff71, 0xff9d,
	0xffa0, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031f,
	0x10330, 0x10340,
	0x10342, 0x10349,
	0x10350, 0x10375,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x10450, 0x1049d,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10860, 0x10876,
	0x10880, 0x1089e,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a00,
	0x10a10, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10a80, 0x10a9c,
	0x10ac0, 0x10ac7,
	0x10ac9, 0x10ae4,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10b80, 0x10b91,
	0x10c00, 0x10c48,
	0x11003, 0x11037,
	0x11083, 0x110af,
	0x110d0, 0x110e8,
	0x11103, 0x11126,
	0x11150, 0x11172,
	0x11176, 0x11176,
	0x11183, 0x111b2,
	0x111c1, 0x111c4,
	0x111da, 0x111da,
	0x11200, 0x11211,
	0x11213, 0x1122b,
	0x112b0, 0x112de,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133d, 0x1133d,
	0x1135d, 0x11361,
	0x11480, 0x114af,
	0x114c4, 0x114c5,
	0x114c7, 0x114c7,
	0x11580, 0x115ae,
	0x11600, 0x1162f,
	0x11644, 0x11644,
	0x11680, 0x116aa,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16ad0, 0x16aed,
	0x16b00, 0x16b2f,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f50,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1e800, 0x1e8c4,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Lo */

/* 'Lt': General Category */
static const OnigCodePoint CR_Lt[] = {
	10,
	0x01c5, 0x01c5,
	0x01c8, 0x01c8,
	0x01cb, 0x01cb,
	0x01f2, 0x01f2,
	0x1f88, 0x1f8f,
	0x1f98, 0x1f9f,
	0x1fa8, 0x1faf,
	0x1fbc, 0x1fbc,
	0x1fcc, 0x1fcc,
	0x1ffc, 0x1ffc,
}; /* CR_Lt */

/* 'Lu': General Category */
static const OnigCodePoint CR_Lu[] = {
	622,
	0x0041, 0x005a,
	0x00c0, 0x00d6,
	0x00d8, 0x00de,
	0x0100, 0x0100,
	0x0102, 0x0102,
	0x0104, 0x0104,
	0x0106, 0x0106,
	0x0108, 0x0108,
	0x010a, 0x010a,
	0x010c, 0x010c,
	0x010e, 0x010e,
	0x0110, 0x0110,
	0x0112, 0x0112,
	0x0114, 0x0114,
	0x0116, 0x0116,
	0x0118, 0x0118,
	0x011a, 0x011a,
	0x011c, 0x011c,
	0x011e, 0x011e,
	0x0120, 0x0120,
	0x0122, 0x0122,
	0x0124, 0x0124,
	0x0126, 0x0126,
	0x0128, 0x0128,
	0x012a, 0x012a,
	0x012c, 0x012c,
	0x012e, 0x012e,
	0x0130, 0x0130,
	0x0132, 0x0132,
	0x0134, 0x0134,
	0x0136, 0x0136,
	0x0139, 0x0139,
	0x013b, 0x013b,
	0x013d, 0x013d,
	0x013f, 0x013f,
	0x0141, 0x0141,
	0x0143, 0x0143,
	0x0145, 0x0145,
	0x0147, 0x0147,
	0x014a, 0x014a,
	0x014c, 0x014c,
	0x014e, 0x014e,
	0x0150, 0x0150,
	0x0152, 0x0152,
	0x0154, 0x0154,
	0x0156, 0x0156,
	0x0158, 0x0158,
	0x015a, 0x015a,
	0x015c, 0x015c,
	0x015e, 0x015e,
	0x0160, 0x0160,
	0x0162, 0x0162,
	0x0164, 0x0164,
	0x0166, 0x0166,
	0x0168, 0x0168,
	0x016a, 0x016a,
	0x016c, 0x016c,
	0x016e, 0x016e,
	0x0170, 0x0170,
	0x0172, 0x0172,
	0x0174, 0x0174,
	0x0176, 0x0176,
	0x0178, 0x0179,
	0x017b, 0x017b,
	0x017d, 0x017d,
	0x0181, 0x0182,
	0x0184, 0x0184,
	0x0186, 0x0187,
	0x0189, 0x018b,
	0x018e, 0x0191,
	0x0193, 0x0194,
	0x0196, 0x0198,
	0x019c, 0x019d,
	0x019f, 0x01a0,
	0x01a2, 0x01a2,
	0x01a4, 0x01a4,
	0x01a6, 0x01a7,
	0x01a9, 0x01a9,
	0x01ac, 0x01ac,
	0x01ae, 0x01af,
	0x01b1, 0x01b3,
	0x01b5, 0x01b5,
	0x01b7, 0x01b8,
	0x01bc, 0x01bc,
	0x01c4, 0x01c4,
	0x01c7, 0x01c7,
	0x01ca, 0x01ca,
	0x01cd, 0x01cd,
	0x01cf, 0x01cf,
	0x01d1, 0x01d1,
	0x01d3, 0x01d3,
	0x01d5, 0x01d5,
	0x01d7, 0x01d7,
	0x01d9, 0x01d9,
	0x01db, 0x01db,
	0x01de, 0x01de,
	0x01e0, 0x01e0,
	0x01e2, 0x01e2,
	0x01e4, 0x01e4,
	0x01e6, 0x01e6,
	0x01e8, 0x01e8,
	0x01ea, 0x01ea,
	0x01ec, 0x01ec,
	0x01ee, 0x01ee,
	0x01f1, 0x01f1,
	0x01f4, 0x01f4,
	0x01f6, 0x01f8,
	0x01fa, 0x01fa,
	0x01fc, 0x01fc,
	0x01fe, 0x01fe,
	0x0200, 0x0200,
	0x0202, 0x0202,
	0x0204, 0x0204,
	0x0206, 0x0206,
	0x0208, 0x0208,
	0x020a, 0x020a,
	0x020c, 0x020c,
	0x020e, 0x020e,
	0x0210, 0x0210,
	0x0212, 0x0212,
	0x0214, 0x0214,
	0x0216, 0x0216,
	0x0218, 0x0218,
	0x021a, 0x021a,
	0x021c, 0x021c,
	0x021e, 0x021e,
	0x0220, 0x0220,
	0x0222, 0x0222,
	0x0224, 0x0224,
	0x0226, 0x0226,
	0x0228, 0x0228,
	0x022a, 0x022a,
	0x022c, 0x022c,
	0x022e, 0x022e,
	0x0230, 0x0230,
	0x0232, 0x0232,
	0x023a, 0x023b,
	0x023d, 0x023e,
	0x0241, 0x0241,
	0x0243, 0x0246,
	0x0248, 0x0248,
	0x024a, 0x024a,
	0x024c, 0x024c,
	0x024e, 0x024e,
	0x0370, 0x0370,
	0x0372, 0x0372,
	0x0376, 0x0376,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x038f,
	0x0391, 0x03a1,
	0x03a3, 0x03ab,
	0x03cf, 0x03cf,
	0x03d2, 0x03d4,
	0x03d8, 0x03d8,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03e2,
	0x03e4, 0x03e4,
	0x03e6, 0x03e6,
	0x03e8, 0x03e8,
	0x03ea, 0x03ea,
	0x03ec, 0x03ec,
	0x03ee, 0x03ee,
	0x03f4, 0x03f4,
	0x03f7, 0x03f7,
	0x03f9, 0x03fa,
	0x03fd, 0x042f,
	0x0460, 0x0460,
	0x0462, 0x0462,
	0x0464, 0x0464,
	0x0466, 0x0466,
	0x0468, 0x0468,
	0x046a, 0x046a,
	0x046c, 0x046c,
	0x046e, 0x046e,
	0x0470, 0x0470,
	0x0472, 0x0472,
	0x0474, 0x0474,
	0x0476, 0x0476,
	0x0478, 0x0478,
	0x047a, 0x047a,
	0x047c, 0x047c,
	0x047e, 0x047e,
	0x0480, 0x0480,
	0x048a, 0x048a,
	0x048c, 0x048c,
	0x048e, 0x048e,
	0x0490, 0x0490,
	0x0492, 0x0492,
	0x0494, 0x0494,
	0x0496, 0x0496,
	0x0498, 0x0498,
	0x049a, 0x049a,
	0x049c, 0x049c,
	0x049e, 0x049e,
	0x04a0, 0x04a0,
	0x04a2, 0x04a2,
	0x04a4, 0x04a4,
	0x04a6, 0x04a6,
	0x04a8, 0x04a8,
	0x04aa, 0x04aa,
	0x04ac, 0x04ac,
	0x04ae, 0x04ae,
	0x04b0, 0x04b0,
	0x04b2, 0x04b2,
	0x04b4, 0x04b4,
	0x04b6, 0x04b6,
	0x04b8, 0x04b8,
	0x04ba, 0x04ba,
	0x04bc, 0x04bc,
	0x04be, 0x04be,
	0x04c0, 0x04c1,
	0x04c3, 0x04c3,
	0x04c5, 0x04c5,
	0x04c7, 0x04c7,
	0x04c9, 0x04c9,
	0x04cb, 0x04cb,
	0x04cd, 0x04cd,
	0x04d0, 0x04d0,
	0x04d2, 0x04d2,
	0x04d4, 0x04d4,
	0x04d6, 0x04d6,
	0x04d8, 0x04d8,
	0x04da, 0x04da,
	0x04dc, 0x04dc,
	0x04de, 0x04de,
	0x04e0, 0x04e0,
	0x04e2, 0x04e2,
	0x04e4, 0x04e4,
	0x04e6, 0x04e6,
	0x04e8, 0x04e8,
	0x04ea, 0x04ea,
	0x04ec, 0x04ec,
	0x04ee, 0x04ee,
	0x04f0, 0x04f0,
	0x04f2, 0x04f2,
	0x04f4, 0x04f4,
	0x04f6, 0x04f6,
	0x04f8, 0x04f8,
	0x04fa, 0x04fa,
	0x04fc, 0x04fc,
	0x04fe, 0x04fe,
	0x0500, 0x0500,
	0x0502, 0x0502,
	0x0504, 0x0504,
	0x0506, 0x0506,
	0x0508, 0x0508,
	0x050a, 0x050a,
	0x050c, 0x050c,
	0x050e, 0x050e,
	0x0510, 0x0510,
	0x0512, 0x0512,
	0x0514, 0x0514,
	0x0516, 0x0516,
	0x0518, 0x0518,
	0x051a, 0x051a,
	0x051c, 0x051c,
	0x051e, 0x051e,
	0x0520, 0x0520,
	0x0522, 0x0522,
	0x0524, 0x0524,
	0x0526, 0x0526,
	0x0528, 0x0528,
	0x052a, 0x052a,
	0x052c, 0x052c,
	0x052e, 0x052e,
	0x0531, 0x0556,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x1e00, 0x1e00,
	0x1e02, 0x1e02,
	0x1e04, 0x1e04,
	0x1e06, 0x1e06,
	0x1e08, 0x1e08,
	0x1e0a, 0x1e0a,
	0x1e0c, 0x1e0c,
	0x1e0e, 0x1e0e,
	0x1e10, 0x1e10,
	0x1e12, 0x1e12,
	0x1e14, 0x1e14,
	0x1e16, 0x1e16,
	0x1e18, 0x1e18,
	0x1e1a, 0x1e1a,
	0x1e1c, 0x1e1c,
	0x1e1e, 0x1e1e,
	0x1e20, 0x1e20,
	0x1e22, 0x1e22,
	0x1e24, 0x1e24,
	0x1e26, 0x1e26,
	0x1e28, 0x1e28,
	0x1e2a, 0x1e2a,
	0x1e2c, 0x1e2c,
	0x1e2e, 0x1e2e,
	0x1e30, 0x1e30,
	0x1e32, 0x1e32,
	0x1e34, 0x1e34,
	0x1e36, 0x1e36,
	0x1e38, 0x1e38,
	0x1e3a, 0x1e3a,
	0x1e3c, 0x1e3c,
	0x1e3e, 0x1e3e,
	0x1e40, 0x1e40,
	0x1e42, 0x1e42,
	0x1e44, 0x1e44,
	0x1e46, 0x1e46,
	0x1e48, 0x1e48,
	0x1e4a, 0x1e4a,
	0x1e4c, 0x1e4c,
	0x1e4e, 0x1e4e,
	0x1e50, 0x1e50,
	0x1e52, 0x1e52,
	0x1e54, 0x1e54,
	0x1e56, 0x1e56,
	0x1e58, 0x1e58,
	0x1e5a, 0x1e5a,
	0x1e5c, 0x1e5c,
	0x1e5e, 0x1e5e,
	0x1e60, 0x1e60,
	0x1e62, 0x1e62,
	0x1e64, 0x1e64,
	0x1e66, 0x1e66,
	0x1e68, 0x1e68,
	0x1e6a, 0x1e6a,
	0x1e6c, 0x1e6c,
	0x1e6e, 0x1e6e,
	0x1e70, 0x1e70,
	0x1e72, 0x1e72,
	0x1e74, 0x1e74,
	0x1e76, 0x1e76,
	0x1e78, 0x1e78,
	0x1e7a, 0x1e7a,
	0x1e7c, 0x1e7c,
	0x1e7e, 0x1e7e,
	0x1e80, 0x1e80,
	0x1e82, 0x1e82,
	0x1e84, 0x1e84,
	0x1e86, 0x1e86,
	0x1e88, 0x1e88,
	0x1e8a, 0x1e8a,
	0x1e8c, 0x1e8c,
	0x1e8e, 0x1e8e,
	0x1e90, 0x1e90,
	0x1e92, 0x1e92,
	0x1e94, 0x1e94,
	0x1e9e, 0x1e9e,
	0x1ea0, 0x1ea0,
	0x1ea2, 0x1ea2,
	0x1ea4, 0x1ea4,
	0x1ea6, 0x1ea6,
	0x1ea8, 0x1ea8,
	0x1eaa, 0x1eaa,
	0x1eac, 0x1eac,
	0x1eae, 0x1eae,
	0x1eb0, 0x1eb0,
	0x1eb2, 0x1eb2,
	0x1eb4, 0x1eb4,
	0x1eb6, 0x1eb6,
	0x1eb8, 0x1eb8,
	0x1eba, 0x1eba,
	0x1ebc, 0x1ebc,
	0x1ebe, 0x1ebe,
	0x1ec0, 0x1ec0,
	0x1ec2, 0x1ec2,
	0x1ec4, 0x1ec4,
	0x1ec6, 0x1ec6,
	0x1ec8, 0x1ec8,
	0x1eca, 0x1eca,
	0x1ecc, 0x1ecc,
	0x1ece, 0x1ece,
	0x1ed0, 0x1ed0,
	0x1ed2, 0x1ed2,
	0x1ed4, 0x1ed4,
	0x1ed6, 0x1ed6,
	0x1ed8, 0x1ed8,
	0x1eda, 0x1eda,
	0x1edc, 0x1edc,
	0x1ede, 0x1ede,
	0x1ee0, 0x1ee0,
	0x1ee2, 0x1ee2,
	0x1ee4, 0x1ee4,
	0x1ee6, 0x1ee6,
	0x1ee8, 0x1ee8,
	0x1eea, 0x1eea,
	0x1eec, 0x1eec,
	0x1eee, 0x1eee,
	0x1ef0, 0x1ef0,
	0x1ef2, 0x1ef2,
	0x1ef4, 0x1ef4,
	0x1ef6, 0x1ef6,
	0x1ef8, 0x1ef8,
	0x1efa, 0x1efa,
	0x1efc, 0x1efc,
	0x1efe, 0x1efe,
	0x1f08, 0x1f0f,
	0x1f18, 0x1f1d,
	0x1f28, 0x1f2f,
	0x1f38, 0x1f3f,
	0x1f48, 0x1f4d,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f5f,
	0x1f68, 0x1f6f,
	0x1fb8, 0x1fbb,
	0x1fc8, 0x1fcb,
	0x1fd8, 0x1fdb,
	0x1fe8, 0x1fec,
	0x1ff8, 0x1ffb,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210b, 0x210d,
	0x2110, 0x2112,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x2130, 0x2133,
	0x213e, 0x213f,
	0x2145, 0x2145,
	0x2183, 0x2183,
	0x2c00, 0x2c2e,
	0x2c60, 0x2c60,
	0x2c62, 0x2c64,
	0x2c67, 0x2c67,
	0x2c69, 0x2c69,
	0x2c6b, 0x2c6b,
	0x2c6d, 0x2c70,
	0x2c72, 0x2c72,
	0x2c75, 0x2c75,
	0x2c7e, 0x2c80,
	0x2c82, 0x2c82,
	0x2c84, 0x2c84,
	0x2c86, 0x2c86,
	0x2c88, 0x2c88,
	0x2c8a, 0x2c8a,
	0x2c8c, 0x2c8c,
	0x2c8e, 0x2c8e,
	0x2c90, 0x2c90,
	0x2c92, 0x2c92,
	0x2c94, 0x2c94,
	0x2c96, 0x2c96,
	0x2c98, 0x2c98,
	0x2c9a, 0x2c9a,
	0x2c9c, 0x2c9c,
	0x2c9e, 0x2c9e,
	0x2ca0, 0x2ca0,
	0x2ca2, 0x2ca2,
	0x2ca4, 0x2ca4,
	0x2ca6, 0x2ca6,
	0x2ca8, 0x2ca8,
	0x2caa, 0x2caa,
	0x2cac, 0x2cac,
	0x2cae, 0x2cae,
	0x2cb0, 0x2cb0,
	0x2cb2, 0x2cb2,
	0x2cb4, 0x2cb4,
	0x2cb6, 0x2cb6,
	0x2cb8, 0x2cb8,
	0x2cba, 0x2cba,
	0x2cbc, 0x2cbc,
	0x2cbe, 0x2cbe,
	0x2cc0, 0x2cc0,
	0x2cc2, 0x2cc2,
	0x2cc4, 0x2cc4,
	0x2cc6, 0x2cc6,
	0x2cc8, 0x2cc8,
	0x2cca, 0x2cca,
	0x2ccc, 0x2ccc,
	0x2cce, 0x2cce,
	0x2cd0, 0x2cd0,
	0x2cd2, 0x2cd2,
	0x2cd4, 0x2cd4,
	0x2cd6, 0x2cd6,
	0x2cd8, 0x2cd8,
	0x2cda, 0x2cda,
	0x2cdc, 0x2cdc,
	0x2cde, 0x2cde,
	0x2ce0, 0x2ce0,
	0x2ce2, 0x2ce2,
	0x2ceb, 0x2ceb,
	0x2ced, 0x2ced,
	0x2cf2, 0x2cf2,
	0xa640, 0xa640,
	0xa642, 0xa642,
	0xa644, 0xa644,
	0xa646, 0xa646,
	0xa648, 0xa648,
	0xa64a, 0xa64a,
	0xa64c, 0xa64c,
	0xa64e, 0xa64e,
	0xa650, 0xa650,
	0xa652, 0xa652,
	0xa654, 0xa654,
	0xa656, 0xa656,
	0xa658, 0xa658,
	0xa65a, 0xa65a,
	0xa65c, 0xa65c,
	0xa65e, 0xa65e,
	0xa660, 0xa660,
	0xa662, 0xa662,
	0xa664, 0xa664,
	0xa666, 0xa666,
	0xa668, 0xa668,
	0xa66a, 0xa66a,
	0xa66c, 0xa66c,
	0xa680, 0xa680,
	0xa682, 0xa682,
	0xa684, 0xa684,
	0xa686, 0xa686,
	0xa688, 0xa688,
	0xa68a, 0xa68a,
	0xa68c, 0xa68c,
	0xa68e, 0xa68e,
	0xa690, 0xa690,
	0xa692, 0xa692,
	0xa694, 0xa694,
	0xa696, 0xa696,
	0xa698, 0xa698,
	0xa69a, 0xa69a,
	0xa722, 0xa722,
	0xa724, 0xa724,
	0xa726, 0xa726,
	0xa728, 0xa728,
	0xa72a, 0xa72a,
	0xa72c, 0xa72c,
	0xa72e, 0xa72e,
	0xa732, 0xa732,
	0xa734, 0xa734,
	0xa736, 0xa736,
	0xa738, 0xa738,
	0xa73a, 0xa73a,
	0xa73c, 0xa73c,
	0xa73e, 0xa73e,
	0xa740, 0xa740,
	0xa742, 0xa742,
	0xa744, 0xa744,
	0xa746, 0xa746,
	0xa748, 0xa748,
	0xa74a, 0xa74a,
	0xa74c, 0xa74c,
	0xa74e, 0xa74e,
	0xa750, 0xa750,
	0xa752, 0xa752,
	0xa754, 0xa754,
	0xa756, 0xa756,
	0xa758, 0xa758,
	0xa75a, 0xa75a,
	0xa75c, 0xa75c,
	0xa75e, 0xa75e,
	0xa760, 0xa760,
	0xa762, 0xa762,
	0xa764, 0xa764,
	0xa766, 0xa766,
	0xa768, 0xa768,
	0xa76a, 0xa76a,
	0xa76c, 0xa76c,
	0xa76e, 0xa76e,
	0xa779, 0xa779,
	0xa77b, 0xa77b,
	0xa77d, 0xa77e,
	0xa780, 0xa780,
	0xa782, 0xa782,
	0xa784, 0xa784,
	0xa786, 0xa786,
	0xa78b, 0xa78b,
	0xa78d, 0xa78d,
	0xa790, 0xa790,
	0xa792, 0xa792,
	0xa796, 0xa796,
	0xa798, 0xa798,
	0xa79a, 0xa79a,
	0xa79c, 0xa79c,
	0xa79e, 0xa79e,
	0xa7a0, 0xa7a0,
	0xa7a2, 0xa7a2,
	0xa7a4, 0xa7a4,
	0xa7a6, 0xa7a6,
	0xa7a8, 0xa7a8,
	0xa7aa, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xff21, 0xff3a,
	0x10400, 0x10427,
	0x118a0, 0x118bf,
	0x1d400, 0x1d419,
	0x1d434, 0x1d44d,
	0x1d468, 0x1d481,
	0x1d49c, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b5,
	0x1d4d0, 0x1d4e9,
	0x1d504, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d538, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d56c, 0x1d585,
	0x1d5a0, 0x1d5b9,
	0x1d5d4, 0x1d5ed,
	0x1d608, 0x1d621,
	0x1d63c, 0x1d655,
	0x1d670, 0x1d689,
	0x1d6a8, 0x1d6c0,
	0x1d6e2, 0x1d6fa,
	0x1d71c, 0x1d734,
	0x1d756, 0x1d76e,
	0x1d790, 0x1d7a8,
	0x1d7ca, 0x1d7ca,
}; /* CR_Lu */

/* 'M': Major Category */
static const OnigCodePoint CR_M[] = {
	229,
	0x0300, 0x036f,
	0x0483, 0x0489,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x0610, 0x061a,
	0x064b, 0x065f,
	0x0670, 0x0670,
	0x06d6, 0x06dc,
	0x06df, 0x06e4,
	0x06e7, 0x06e8,
	0x06ea, 0x06ed,
	0x0711, 0x0711,
	0x0730, 0x074a,
	0x07a6, 0x07b0,
	0x07eb, 0x07f3,
	0x0816, 0x0819,
	0x081b, 0x0823,
	0x0825, 0x0827,
	0x0829, 0x082d,
	0x0859, 0x085b,
	0x08e4, 0x0903,
	0x093a, 0x093c,
	0x093e, 0x094f,
	0x0951, 0x0957,
	0x0962, 0x0963,
	0x0981, 0x0983,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09e2, 0x09e3,
	0x0a01, 0x0a03,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a70, 0x0a71,
	0x0a75, 0x0a75,
	0x0a81, 0x0a83,
	0x0abc, 0x0abc,
	0x0abe, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ae2, 0x0ae3,
	0x0b01, 0x0b03,
	0x0b3c, 0x0b3c,
	0x0b3e, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b62, 0x0b63,
	0x0b82, 0x0b82,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0c00, 0x0c03,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c62, 0x0c63,
	0x0c81, 0x0c83,
	0x0cbc, 0x0cbc,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0ce2, 0x0ce3,
	0x0d01, 0x0d03,
	0x0d3e, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d62, 0x0d63,
	0x0d82, 0x0d83,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0e31, 0x0e31,
	0x0e34, 0x0e3a,
	0x0e47, 0x0e4e,
	0x0eb1, 0x0eb1,
	0x0eb4, 0x0eb9,
	0x0ebb, 0x0ebc,
	0x0ec8, 0x0ecd,
	0x0f18, 0x0f19,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f3e, 0x0f3f,
	0x0f71, 0x0f84,
	0x0f86, 0x0f87,
	0x0f8d, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x102b, 0x103e,
	0x1056, 0x1059,
	0x105e, 0x1060,
	0x1062, 0x1064,
	0x1067, 0x106d,
	0x1071, 0x1074,
	0x1082, 0x108d,
	0x108f, 0x108f,
	0x109a, 0x109d,
	0x135d, 0x135f,
	0x1712, 0x1714,
	0x1732, 0x1734,
	0x1752, 0x1753,
	0x1772, 0x1773,
	0x17b4, 0x17d3,
	0x17dd, 0x17dd,
	0x180b, 0x180d,
	0x18a9, 0x18a9,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x19b0, 0x19c0,
	0x19c8, 0x19c9,
	0x1a17, 0x1a1b,
	0x1a55, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a7f,
	0x1ab0, 0x1abe,
	0x1b00, 0x1b04,
	0x1b34, 0x1b44,
	0x1b6b, 0x1b73,
	0x1b80, 0x1b82,
	0x1ba1, 0x1bad,
	0x1be6, 0x1bf3,
	0x1c24, 0x1c37,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1ce8,
	0x1ced, 0x1ced,
	0x1cf2, 0x1cf4,
	0x1cf8, 0x1cf9,
	0x1dc0, 0x1df5,
	0x1dfc, 0x1dff,
	0x20d0, 0x20f0,
	0x2cef, 0x2cf1,
	0x2d7f, 0x2d7f,
	0x2de0, 0x2dff,
	0x302a, 0x302f,
	0x3099, 0x309a,
	0xa66f, 0xa672,
	0xa674, 0xa67d,
	0xa69f, 0xa69f,
	0xa6f0, 0xa6f1,
	0xa802, 0xa802,
	0xa806, 0xa806,
	0xa80b, 0xa80b,
	0xa823, 0xa827,
	0xa880, 0xa881,
	0xa8b4, 0xa8c4,
	0xa8e0, 0xa8f1,
	0xa926, 0xa92d,
	0xa947, 0xa953,
	0xa980, 0xa983,
	0xa9b3, 0xa9c0,
	0xa9e5, 0xa9e5,
	0xaa29, 0xaa36,
	0xaa43, 0xaa43,
	0xaa4c, 0xaa4d,
	0xaa7b, 0xaa7d,
	0xaab0, 0xaab0,
	0xaab2, 0xaab4,
	0xaab7, 0xaab8,
	0xaabe, 0xaabf,
	0xaac1, 0xaac1,
	0xaaeb, 0xaaef,
	0xaaf5, 0xaaf6,
	0xabe3, 0xabea,
	0xabec, 0xabed,
	0xfb1e, 0xfb1e,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe2d,
	0x101fd, 0x101fd,
	0x102e0, 0x102e0,
	0x10376, 0x1037a,
	0x10a01, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a0f,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x10ae5, 0x10ae6,
	0x11000, 0x11002,
	0x11038, 0x11046,
	0x1107f, 0x11082,
	0x110b0, 0x110ba,
	0x11100, 0x11102,
	0x11127, 0x11134,
	0x11173, 0x11173,
	0x11180, 0x11182,
	0x111b3, 0x111c0,
	0x1122c, 0x11237,
	0x112df, 0x112ea,
	0x11301, 0x11303,
	0x1133c, 0x1133c,
	0x1133e, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134d,
	0x11357, 0x11357,
	0x11362, 0x11363,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x114b0, 0x114c3,
	0x115af, 0x115b5,
	0x115b8, 0x115c0,
	0x11630, 0x11640,
	0x116ab, 0x116b7,
	0x16af0, 0x16af4,
	0x16b30, 0x16b36,
	0x16f51, 0x16f7e,
	0x16f8f, 0x16f92,
	0x1bc9d, 0x1bc9e,
	0x1d165, 0x1d169,
	0x1d16d, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0x1e8d0, 0x1e8d6,
	0xe0100, 0xe01ef,
}; /* CR_M */

/* 'Mc': General Category */
static const OnigCodePoint CR_Mc[] = {
	147,
	0x0903, 0x0903,
	0x093b, 0x093b,
	0x093e, 0x0940,
	0x0949, 0x094c,
	0x094e, 0x094f,
	0x0982, 0x0983,
	0x09be, 0x09c0,
	0x09c7, 0x09c8,
	0x09cb, 0x09cc,
	0x09d7, 0x09d7,
	0x0a03, 0x0a03,
	0x0a3e, 0x0a40,
	0x0a83, 0x0a83,
	0x0abe, 0x0ac0,
	0x0ac9, 0x0ac9,
	0x0acb, 0x0acc,
	0x0b02, 0x0b03,
	0x0b3e, 0x0b3e,
	0x0b40, 0x0b40,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4c,
	0x0b57, 0x0b57,
	0x0bbe, 0x0bbf,
	0x0bc1, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcc,
	0x0bd7, 0x0bd7,
	0x0c01, 0x0c03,
	0x0c41, 0x0c44,
	0x0c82, 0x0c83,
	0x0cbe, 0x0cbe,
	0x0cc0, 0x0cc4,
	0x0cc7, 0x0cc8,
	0x0cca, 0x0ccb,
	0x0cd5, 0x0cd6,
	0x0d02, 0x0d03,
	0x0d3e, 0x0d40,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4c,
	0x0d57, 0x0d57,
	0x0d82, 0x0d83,
	0x0dcf, 0x0dd1,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0f3e, 0x0f3f,
	0x0f7f, 0x0f7f,
	0x102b, 0x102c,
	0x1031, 0x1031,
	0x1038, 0x1038,
	0x103b, 0x103c,
	0x1056, 0x1057,
	0x1062, 0x1064,
	0x1067, 0x106d,
	0x1083, 0x1084,
	0x1087, 0x108c,
	0x108f, 0x108f,
	0x109a, 0x109c,
	0x17b6, 0x17b6,
	0x17be, 0x17c5,
	0x17c7, 0x17c8,
	0x1923, 0x1926,
	0x1929, 0x192b,
	0x1930, 0x1931,
	0x1933, 0x1938,
	0x19b0, 0x19c0,
	0x19c8, 0x19c9,
	0x1a19, 0x1a1a,
	0x1a55, 0x1a55,
	0x1a57, 0x1a57,
	0x1a61, 0x1a61,
	0x1a63, 0x1a64,
	0x1a6d, 0x1a72,
	0x1b04, 0x1b04,
	0x1b35, 0x1b35,
	0x1b3b, 0x1b3b,
	0x1b3d, 0x1b41,
	0x1b43, 0x1b44,
	0x1b82, 0x1b82,
	0x1ba1, 0x1ba1,
	0x1ba6, 0x1ba7,
	0x1baa, 0x1baa,
	0x1be7, 0x1be7,
	0x1bea, 0x1bec,
	0x1bee, 0x1bee,
	0x1bf2, 0x1bf3,
	0x1c24, 0x1c2b,
	0x1c34, 0x1c35,
	0x1ce1, 0x1ce1,
	0x1cf2, 0x1cf3,
	0x302e, 0x302f,
	0xa823, 0xa824,
	0xa827, 0xa827,
	0xa880, 0xa881,
	0xa8b4, 0xa8c3,
	0xa952, 0xa953,
	0xa983, 0xa983,
	0xa9b4, 0xa9b5,
	0xa9ba, 0xa9bb,
	0xa9bd, 0xa9c0,
	0xaa2f, 0xaa30,
	0xaa33, 0xaa34,
	0xaa4d, 0xaa4d,
	0xaa7b, 0xaa7b,
	0xaa7d, 0xaa7d,
	0xaaeb, 0xaaeb,
	0xaaee, 0xaaef,
	0xaaf5, 0xaaf5,
	0xabe3, 0xabe4,
	0xabe6, 0xabe7,
	0xabe9, 0xabea,
	0xabec, 0xabec,
	0x11000, 0x11000,
	0x11002, 0x11002,
	0x11082, 0x11082,
	0x110b0, 0x110b2,
	0x110b7, 0x110b8,
	0x1112c, 0x1112c,
	0x11182, 0x11182,
	0x111b3, 0x111b5,
	0x111bf, 0x111c0,
	0x1122c, 0x1122e,
	0x11232, 0x11233,
	0x11235, 0x11235,
	0x112e0, 0x112e2,
	0x11302, 0x11303,
	0x1133e, 0x1133f,
	0x11341, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134d,
	0x11357, 0x11357,
	0x11362, 0x11363,
	0x114b0, 0x114b2,
	0x114b9, 0x114b9,
	0x114bb, 0x114be,
	0x114c1, 0x114c1,
	0x115af, 0x115b1,
	0x115b8, 0x115bb,
	0x115be, 0x115be,
	0x11630, 0x11632,
	0x1163b, 0x1163c,
	0x1163e, 0x1163e,
	0x116ac, 0x116ac,
	0x116ae, 0x116af,
	0x116b6, 0x116b6,
	0x16f51, 0x16f7e,
	0x1d165, 0x1d166,
	0x1d16d, 0x1d172,
}; /* CR_Mc */

/* 'Me': General Category */
static const OnigCodePoint CR_Me[] = {
	5,
	0x0488, 0x0489,
	0x1abe, 0x1abe,
	0x20dd, 0x20e0,
	0x20e2, 0x20e4,
	0xa670, 0xa672,
}; /* CR_Me */

/* 'Mn': General Category */
static const OnigCodePoint CR_Mn[] = {
	255,
	0x0300, 0x036f,
	0x0483, 0x0487,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x0610, 0x061a,
	0x064b, 0x065f,
	0x0670, 0x0670,
	0x06d6, 0x06dc,
	0x06df, 0x06e4,
	0x06e7, 0x06e8,
	0x06ea, 0x06ed,
	0x0711, 0x0711,
	0x0730, 0x074a,
	0x07a6, 0x07b0,
	0x07eb, 0x07f3,
	0x0816, 0x0819,
	0x081b, 0x0823,
	0x0825, 0x0827,
	0x0829, 0x082d,
	0x0859, 0x085b,
	0x08e4, 0x0902,
	0x093a, 0x093a,
	0x093c, 0x093c,
	0x0941, 0x0948,
	0x094d, 0x094d,
	0x0951, 0x0957,
	0x0962, 0x0963,
	0x0981, 0x0981,
	0x09bc, 0x09bc,
	0x09c1, 0x09c4,
	0x09cd, 0x09cd,
	0x09e2, 0x09e3,
	0x0a01, 0x0a02,
	0x0a3c, 0x0a3c,
	0x0a41, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a70, 0x0a71,
	0x0a75, 0x0a75,
	0x0a81, 0x0a82,
	0x0abc, 0x0abc,
	0x0ac1, 0x0ac5,
	0x0ac7, 0x0ac8,
	0x0acd, 0x0acd,
	0x0ae2, 0x0ae3,
	0x0b01, 0x0b01,
	0x0b3c, 0x0b3c,
	0x0b3f, 0x0b3f,
	0x0b41, 0x0b44,
	0x0b4d, 0x0b4d,
	0x0b56, 0x0b56,
	0x0b62, 0x0b63,
	0x0b82, 0x0b82,
	0x0bc0, 0x0bc0,
	0x0bcd, 0x0bcd,
	0x0c00, 0x0c00,
	0x0c3e, 0x0c40,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c62, 0x0c63,
	0x0c81, 0x0c81,
	0x0cbc, 0x0cbc,
	0x0cbf, 0x0cbf,
	0x0cc6, 0x0cc6,
	0x0ccc, 0x0ccd,
	0x0ce2, 0x0ce3,
	0x0d01, 0x0d01,
	0x0d41, 0x0d44,
	0x0d4d, 0x0d4d,
	0x0d62, 0x0d63,
	0x0dca, 0x0dca,
	0x0dd2, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0e31, 0x0e31,
	0x0e34, 0x0e3a,
	0x0e47, 0x0e4e,
	0x0eb1, 0x0eb1,
	0x0eb4, 0x0eb9,
	0x0ebb, 0x0ebc,
	0x0ec8, 0x0ecd,
	0x0f18, 0x0f19,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f71, 0x0f7e,
	0x0f80, 0x0f84,
	0x0f86, 0x0f87,
	0x0f8d, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x102d, 0x1030,
	0x1032, 0x1037,
	0x1039, 0x103a,
	0x103d, 0x103e,
	0x1058, 0x1059,
	0x105e, 0x1060,
	0x1071, 0x1074,
	0x1082, 0x1082,
	0x1085, 0x1086,
	0x108d, 0x108d,
	0x109d, 0x109d,
	0x135d, 0x135f,
	0x1712, 0x1714,
	0x1732, 0x1734,
	0x1752, 0x1753,
	0x1772, 0x1773,
	0x17b4, 0x17b5,
	0x17b7, 0x17bd,
	0x17c6, 0x17c6,
	0x17c9, 0x17d3,
	0x17dd, 0x17dd,
	0x180b, 0x180d,
	0x18a9, 0x18a9,
	0x1920, 0x1922,
	0x1927, 0x1928,
	0x1932, 0x1932,
	0x1939, 0x193b,
	0x1a17, 0x1a18,
	0x1a1b, 0x1a1b,
	0x1a56, 0x1a56,
	0x1a58, 0x1a5e,
	0x1a60, 0x1a60,
	0x1a62, 0x1a62,
	0x1a65, 0x1a6c,
	0x1a73, 0x1a7c,
	0x1a7f, 0x1a7f,
	0x1ab0, 0x1abd,
	0x1b00, 0x1b03,
	0x1b34, 0x1b34,
	0x1b36, 0x1b3a,
	0x1b3c, 0x1b3c,
	0x1b42, 0x1b42,
	0x1b6b, 0x1b73,
	0x1b80, 0x1b81,
	0x1ba2, 0x1ba5,
	0x1ba8, 0x1ba9,
	0x1bab, 0x1bad,
	0x1be6, 0x1be6,
	0x1be8, 0x1be9,
	0x1bed, 0x1bed,
	0x1bef, 0x1bf1,
	0x1c2c, 0x1c33,
	0x1c36, 0x1c37,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1ce0,
	0x1ce2, 0x1ce8,
	0x1ced, 0x1ced,
	0x1cf4, 0x1cf4,
	0x1cf8, 0x1cf9,
	0x1dc0, 0x1df5,
	0x1dfc, 0x1dff,
	0x20d0, 0x20dc,
	0x20e1, 0x20e1,
	0x20e5, 0x20f0,
	0x2cef, 0x2cf1,
	0x2d7f, 0x2d7f,
	0x2de0, 0x2dff,
	0x302a, 0x302d,
	0x3099, 0x309a,
	0xa66f, 0xa66f,
	0xa674, 0xa67d,
	0xa69f, 0xa69f,
	0xa6f0, 0xa6f1,
	0xa802, 0xa802,
	0xa806, 0xa806,
	0xa80b, 0xa80b,
	0xa825, 0xa826,
	0xa8c4, 0xa8c4,
	0xa8e0, 0xa8f1,
	0xa926, 0xa92d,
	0xa947, 0xa951,
	0xa980, 0xa982,
	0xa9b3, 0xa9b3,
	0xa9b6, 0xa9b9,
	0xa9bc, 0xa9bc,
	0xa9e5, 0xa9e5,
	0xaa29, 0xaa2e,
	0xaa31, 0xaa32,
	0xaa35, 0xaa36,
	0xaa43, 0xaa43,
	0xaa4c, 0xaa4c,
	0xaa7c, 0xaa7c,
	0xaab0, 0xaab0,
	0xaab2, 0xaab4,
	0xaab7, 0xaab8,
	0xaabe, 0xaabf,
	0xaac1, 0xaac1,
	0xaaec, 0xaaed,
	0xaaf6, 0xaaf6,
	0xabe5, 0xabe5,
	0xabe8, 0xabe8,
	0xabed, 0xabed,
	0xfb1e, 0xfb1e,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe2d,
	0x101fd, 0x101fd,
	0x102e0, 0x102e0,
	0x10376, 0x1037a,
	0x10a01, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a0f,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x10ae5, 0x10ae6,
	0x11001, 0x11001,
	0x11038, 0x11046,
	0x1107f, 0x11081,
	0x110b3, 0x110b6,
	0x110b9, 0x110ba,
	0x11100, 0x11102,
	0x11127, 0x1112b,
	0x1112d, 0x11134,
	0x11173, 0x11173,
	0x11180, 0x11181,
	0x111b6, 0x111be,
	0x1122f, 0x11231,
	0x11234, 0x11234,
	0x11236, 0x11237,
	0x112df, 0x112df,
	0x112e3, 0x112ea,
	0x11301, 0x11301,
	0x1133c, 0x1133c,
	0x11340, 0x11340,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x114b3, 0x114b8,
	0x114ba, 0x114ba,
	0x114bf, 0x114c0,
	0x114c2, 0x114c3,
	0x115b2, 0x115b5,
	0x115bc, 0x115bd,
	0x115bf, 0x115c0,
	0x11633, 0x1163a,
	0x1163d, 0x1163d,
	0x1163f, 0x11640,
	0x116ab, 0x116ab,
	0x116ad, 0x116ad,
	0x116b0, 0x116b5,
	0x116b7, 0x116b7,
	0x16af0, 0x16af4,
	0x16b30, 0x16b36,
	0x16f8f, 0x16f92,
	0x1bc9d, 0x1bc9e,
	0x1d167, 0x1d169,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0x1e8d0, 0x1e8d6,
	0xe0100, 0xe01ef,
}; /* CR_Mn */

/* 'N': Major Category */
static const OnigCodePoint CR_N[] = {
	105,
	0x0030, 0x0039,
	0x00b2, 0x00b3,
	0x00b9, 0x00b9,
	0x00bc, 0x00be,
	0x0660, 0x0669,
	0x06f0, 0x06f9,
	0x07c0, 0x07c9,
	0x0966, 0x096f,
	0x09e6, 0x09ef,
	0x09f4, 0x09f9,
	0x0a66, 0x0a6f,
	0x0ae6, 0x0aef,
	0x0b66, 0x0b6f,
	0x0b72, 0x0b77,
	0x0be6, 0x0bf2,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7e,
	0x0ce6, 0x0cef,
	0x0d66, 0x0d75,
	0x0de6, 0x0def,
	0x0e50, 0x0e59,
	0x0ed0, 0x0ed9,
	0x0f20, 0x0f33,
	0x1040, 0x1049,
	0x1090, 0x1099,
	0x1369, 0x137c,
	0x16ee, 0x16f0,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1810, 0x1819,
	0x1946, 0x194f,
	0x19d0, 0x19da,
	0x1a80, 0x1a89,
	0x1a90, 0x1a99,
	0x1b50, 0x1b59,
	0x1bb0, 0x1bb9,
	0x1c40, 0x1c49,
	0x1c50, 0x1c59,
	0x2070, 0x2070,
	0x2074, 0x2079,
	0x2080, 0x2089,
	0x2150, 0x2182,
	0x2185, 0x2189,
	0x2460, 0x249b,
	0x24ea, 0x24ff,
	0x2776, 0x2793,
	0x2cfd, 0x2cfd,
	0x3007, 0x3007,
	0x3021, 0x3029,
	0x3038, 0x303a,
	0x3192, 0x3195,
	0x3220, 0x3229,
	0x3248, 0x324f,
	0x3251, 0x325f,
	0x3280, 0x3289,
	0x32b1, 0x32bf,
	0xa620, 0xa629,
	0xa6e6, 0xa6ef,
	0xa830, 0xa835,
	0xa8d0, 0xa8d9,
	0xa900, 0xa909,
	0xa9d0, 0xa9d9,
	0xa9f0, 0xa9f9,
	0xaa50, 0xaa59,
	0xabf0, 0xabf9,
	0xff10, 0xff19,
	0x10107, 0x10133,
	0x10140, 0x10178,
	0x1018a, 0x1018b,
	0x102e1, 0x102fb,
	0x10320, 0x10323,
	0x10341, 0x10341,
	0x1034a, 0x1034a,
	0x103d1, 0x103d5,
	0x104a0, 0x104a9,
	0x10858, 0x1085f,
	0x10879, 0x1087f,
	0x108a7, 0x108af,
	0x10916, 0x1091b,
	0x10a40, 0x10a47,
	0x10a7d, 0x10a7e,
	0x10a9d, 0x10a9f,
	0x10aeb, 0x10aef,
	0x10b58, 0x10b5f,
	0x10b78, 0x10b7f,
	0x10ba9, 0x10baf,
	0x10e60, 0x10e7e,
	0x11052, 0x1106f,
	0x110f0, 0x110f9,
	0x11136, 0x1113f,
	0x111d0, 0x111d9,
	0x111e1, 0x111f4,
	0x112f0, 0x112f9,
	0x114d0, 0x114d9,
	0x11650, 0x11659,
	0x116c0, 0x116c9,
	0x118e0, 0x118f2,
	0x12400, 0x1246e,
	0x16a60, 0x16a69,
	0x16b50, 0x16b59,
	0x16b5b, 0x16b61,
	0x1d360, 0x1d371,
	0x1d7ce, 0x1d7ff,
	0x1e8c7, 0x1e8cf,
	0x1f100, 0x1f10c,
}; /* CR_N */

/* 'Nd': General Category */
#define CR_Nd CR_Digit

/* 'Nl': General Category */
static const OnigCodePoint CR_Nl[] = {
	12,
	0x16ee, 0x16f0,
	0x2160, 0x2182,
	0x2185, 0x2188,
	0x3007, 0x3007,
	0x3021, 0x3029,
	0x3038, 0x303a,
	0xa6e6, 0xa6ef,
	0x10140, 0x10174,
	0x10341, 0x10341,
	0x1034a, 0x1034a,
	0x103d1, 0x103d5,
	0x12400, 0x1246e,
}; /* CR_Nl */

/* 'No': General Category */
static const OnigCodePoint CR_No[] = {
	52,
	0x00b2, 0x00b3,
	0x00b9, 0x00b9,
	0x00bc, 0x00be,
	0x09f4, 0x09f9,
	0x0b72, 0x0b77,
	0x0bf0, 0x0bf2,
	0x0c78, 0x0c7e,
	0x0d70, 0x0d75,
	0x0f2a, 0x0f33,
	0x1369, 0x137c,
	0x17f0, 0x17f9,
	0x19da, 0x19da,
	0x2070, 0x2070,
	0x2074, 0x2079,
	0x2080, 0x2089,
	0x2150, 0x215f,
	0x2189, 0x2189,
	0x2460, 0x249b,
	0x24ea, 0x24ff,
	0x2776, 0x2793,
	0x2cfd, 0x2cfd,
	0x3192, 0x3195,
	0x3220, 0x3229,
	0x3248, 0x324f,
	0x3251, 0x325f,
	0x3280, 0x3289,
	0x32b1, 0x32bf,
	0xa830, 0xa835,
	0x10107, 0x10133,
	0x10175, 0x10178,
	0x1018a, 0x1018b,
	0x102e1, 0x102fb,
	0x10320, 0x10323,
	0x10858, 0x1085f,
	0x10879, 0x1087f,
	0x108a7, 0x108af,
	0x10916, 0x1091b,
	0x10a40, 0x10a47,
	0x10a7d, 0x10a7e,
	0x10a9d, 0x10a9f,
	0x10aeb, 0x10aef,
	0x10b58, 0x10b5f,
	0x10b78, 0x10b7f,
	0x10ba9, 0x10baf,
	0x10e60, 0x10e7e,
	0x11052, 0x11065,
	0x111e1, 0x111f4,
	0x118ea, 0x118f2,
	0x16b5b, 0x16b61,
	0x1d360, 0x1d371,
	0x1e8c7, 0x1e8cf,
	0x1f100, 0x1f10c,
}; /* CR_No */

/* 'P': Major Category */
#define CR_P CR_Punct

/* 'Pc': General Category */
static const OnigCodePoint CR_Pc[] = {
	6,
	0x005f, 0x005f,
	0x203f, 0x2040,
	0x2054, 0x2054,
	0xfe33, 0xfe34,
	0xfe4d, 0xfe4f,
	0xff3f, 0xff3f,
}; /* CR_Pc */

/* 'Pd': General Category */
static const OnigCodePoint CR_Pd[] = {
	17,
	0x002d, 0x002d,
	0x058a, 0x058a,
	0x05be, 0x05be,
	0x1400, 0x1400,
	0x1806, 0x1806,
	0x2010, 0x2015,
	0x2e17, 0x2e17,
	0x2e1a, 0x2e1a,
	0x2e3a, 0x2e3b,
	0x2e40, 0x2e40,
	0x301c, 0x301c,
	0x3030, 0x3030,
	0x30a0, 0x30a0,
	0xfe31, 0xfe32,
	0xfe58, 0xfe58,
	0xfe63, 0xfe63,
	0xff0d, 0xff0d,
}; /* CR_Pd */

/* 'Pe': General Category */
static const OnigCodePoint CR_Pe[] = {
	72,
	0x0029, 0x0029,
	0x005d, 0x005d,
	0x007d, 0x007d,
	0x0f3b, 0x0f3b,
	0x0f3d, 0x0f3d,
	0x169c, 0x169c,
	0x2046, 0x2046,
	0x207e, 0x207e,
	0x208e, 0x208e,
	0x2309, 0x2309,
	0x230b, 0x230b,
	0x232a, 0x232a,
	0x2769, 0x2769,
	0x276b, 0x276b,
	0x276d, 0x276d,
	0x276f, 0x276f,
	0x2771, 0x2771,
	0x2773, 0x2773,
	0x2775, 0x2775,
	0x27c6, 0x27c6,
	0x27e7, 0x27e7,
	0x27e9, 0x27e9,
	0x27eb, 0x27eb,
	0x27ed, 0x27ed,
	0x27ef, 0x27ef,
	0x2984, 0x2984,
	0x2986, 0x2986,
	0x2988, 0x2988,
	0x298a, 0x298a,
	0x298c, 0x298c,
	0x298e, 0x298e,
	0x2990, 0x2990,
	0x2992, 0x2992,
	0x2994, 0x2994,
	0x2996, 0x2996,
	0x2998, 0x2998,
	0x29d9, 0x29d9,
	0x29db, 0x29db,
	0x29fd, 0x29fd,
	0x2e23, 0x2e23,
	0x2e25, 0x2e25,
	0x2e27, 0x2e27,
	0x2e29, 0x2e29,
	0x3009, 0x3009,
	0x300b, 0x300b,
	0x300d, 0x300d,
	0x300f, 0x300f,
	0x3011, 0x3011,
	0x3015, 0x3015,
	0x3017, 0x3017,
	0x3019, 0x3019,
	0x301b, 0x301b,
	0x301e, 0x301f,
	0xfd3e, 0xfd3e,
	0xfe18, 0xfe18,
	0xfe36, 0xfe36,
	0xfe38, 0xfe38,
	0xfe3a, 0xfe3a,
	0xfe3c, 0xfe3c,
	0xfe3e, 0xfe3e,
	0xfe40, 0xfe40,
	0xfe42, 0xfe42,
	0xfe44, 0xfe44,
	0xfe48, 0xfe48,
	0xfe5a, 0xfe5a,
	0xfe5c, 0xfe5c,
	0xfe5e, 0xfe5e,
	0xff09, 0xff09,
	0xff3d, 0xff3d,
	0xff5d, 0xff5d,
	0xff60, 0xff60,
	0xff63, 0xff63,
}; /* CR_Pe */

/* 'Pf': General Category */
static const OnigCodePoint CR_Pf[] = {
	10,
	0x00bb, 0x00bb,
	0x2019, 0x2019,
	0x201d, 0x201d,
	0x203a, 0x203a,
	0x2e03, 0x2e03,
	0x2e05, 0x2e05,
	0x2e0a, 0x2e0a,
	0x2e0d, 0x2e0d,
	0x2e1d, 0x2e1d,
	0x2e21, 0x2e21,
}; /* CR_Pf */

/* 'Pi': General Category */
static const OnigCodePoint CR_Pi[] = {
	11,
	0x00ab, 0x00ab,
	0x2018, 0x2018,
	0x201b, 0x201c,
	0x201f, 0x201f,
	0x2039, 0x2039,
	0x2e02, 0x2e02,
	0x2e04, 0x2e04,
	0x2e09, 0x2e09,
	0x2e0c, 0x2e0c,
	0x2e1c, 0x2e1c,
	0x2e20, 0x2e20,
}; /* CR_Pi */

/* 'Po': General Category */
static const OnigCodePoint CR_Po[] = {
	151,
	0x0021, 0x0023,
	0x0025, 0x0027,
	0x002a, 0x002a,
	0x002c, 0x002c,
	0x002e, 0x002f,
	0x003a, 0x003b,
	0x003f, 0x0040,
	0x005c, 0x005c,
	0x00a1, 0x00a1,
	0x00a7, 0x00a7,
	0x00b6, 0x00b7,
	0x00bf, 0x00bf,
	0x037e, 0x037e,
	0x0387, 0x0387,
	0x055a, 0x055f,
	0x0589, 0x0589,
	0x05c0, 0x05c0,
	0x05c3, 0x05c3,
	0x05c6, 0x05c6,
	0x05f3, 0x05f4,
	0x0609, 0x060a,
	0x060c, 0x060d,
	0x061b, 0x061b,
	0x061e, 0x061f,
	0x066a, 0x066d,
	0x06d4, 0x06d4,
	0x0700, 0x070d,
	0x07f7, 0x07f9,
	0x0830, 0x083e,
	0x085e, 0x085e,
	0x0964, 0x0965,
	0x0970, 0x0970,
	0x0af0, 0x0af0,
	0x0df4, 0x0df4,
	0x0e4f, 0x0e4f,
	0x0e5a, 0x0e5b,
	0x0f04, 0x0f12,
	0x0f14, 0x0f14,
	0x0f85, 0x0f85,
	0x0fd0, 0x0fd4,
	0x0fd9, 0x0fda,
	0x104a, 0x104f,
	0x10fb, 0x10fb,
	0x1360, 0x1368,
	0x166d, 0x166e,
	0x16eb, 0x16ed,
	0x1735, 0x1736,
	0x17d4, 0x17d6,
	0x17d8, 0x17da,
	0x1800, 0x1805,
	0x1807, 0x180a,
	0x1944, 0x1945,
	0x1a1e, 0x1a1f,
	0x1aa0, 0x1aa6,
	0x1aa8, 0x1aad,
	0x1b5a, 0x1b60,
	0x1bfc, 0x1bff,
	0x1c3b, 0x1c3f,
	0x1c7e, 0x1c7f,
	0x1cc0, 0x1cc7,
	0x1cd3, 0x1cd3,
	0x2016, 0x2017,
	0x2020, 0x2027,
	0x2030, 0x2038,
	0x203b, 0x203e,
	0x2041, 0x2043,
	0x2047, 0x2051,
	0x2053, 0x2053,
	0x2055, 0x205e,
	0x2cf9, 0x2cfc,
	0x2cfe, 0x2cff,
	0x2d70, 0x2d70,
	0x2e00, 0x2e01,
	0x2e06, 0x2e08,
	0x2e0b, 0x2e0b,
	0x2e0e, 0x2e16,
	0x2e18, 0x2e19,
	0x2e1b, 0x2e1b,
	0x2e1e, 0x2e1f,
	0x2e2a, 0x2e2e,
	0x2e30, 0x2e39,
	0x2e3c, 0x2e3f,
	0x2e41, 0x2e41,
	0x3001, 0x3003,
	0x303d, 0x303d,
	0x30fb, 0x30fb,
	0xa4fe, 0xa4ff,
	0xa60d, 0xa60f,
	0xa673, 0xa673,
	0xa67e, 0xa67e,
	0xa6f2, 0xa6f7,
	0xa874, 0xa877,
	0xa8ce, 0xa8cf,
	0xa8f8, 0xa8fa,
	0xa92e, 0xa92f,
	0xa95f, 0xa95f,
	0xa9c1, 0xa9cd,
	0xa9de, 0xa9df,
	0xaa5c, 0xaa5f,
	0xaade, 0xaadf,
	0xaaf0, 0xaaf1,
	0xabeb, 0xabeb,
	0xfe10, 0xfe16,
	0xfe19, 0xfe19,
	0xfe30, 0xfe30,
	0xfe45, 0xfe46,
	0xfe49, 0xfe4c,
	0xfe50, 0xfe52,
	0xfe54, 0xfe57,
	0xfe5f, 0xfe61,
	0xfe68, 0xfe68,
	0xfe6a, 0xfe6b,
	0xff01, 0xff03,
	0xff05, 0xff07,
	0xff0a, 0xff0a,
	0xff0c, 0xff0c,
	0xff0e, 0xff0f,
	0xff1a, 0xff1b,
	0xff1f, 0xff20,
	0xff3c, 0xff3c,
	0xff61, 0xff61,
	0xff64, 0xff65,
	0x10100, 0x10102,
	0x1039f, 0x1039f,
	0x103d0, 0x103d0,
	0x1056f, 0x1056f,
	0x10857, 0x10857,
	0x1091f, 0x1091f,
	0x1093f, 0x1093f,
	0x10a50, 0x10a58,
	0x10a7f, 0x10a7f,
	0x10af0, 0x10af6,
	0x10b39, 0x10b3f,
	0x10b99, 0x10b9c,
	0x11047, 0x1104d,
	0x110bb, 0x110bc,
	0x110be, 0x110c1,
	0x11140, 0x11143,
	0x11174, 0x11175,
	0x111c5, 0x111c8,
	0x111cd, 0x111cd,
	0x11238, 0x1123d,
	0x114c6, 0x114c6,
	0x115c1, 0x115c9,
	0x11641, 0x11643,
	0x12470, 0x12474,
	0x16a6e, 0x16a6f,
	0x16af5, 0x16af5,
	0x16b37, 0x16b3b,
	0x16b44, 0x16b44,
	0x1bc9f, 0x1bc9f,
}; /* CR_Po */

/* 'Ps': General Category */
static const OnigCodePoint CR_Ps[] = {
	75,
	0x0028, 0x0028,
	0x005b, 0x005b,
	0x007b, 0x007b,
	0x0f3a, 0x0f3a,
	0x0f3c, 0x0f3c,
	0x169b, 0x169b,
	0x201a, 0x201a,
	0x201e, 0x201e,
	0x2045, 0x2045,
	0x207d, 0x207d,
	0x208d, 0x208d,
	0x2308, 0x2308,
	0x230a, 0x230a,
	0x2329, 0x2329,
	0x2768, 0x2768,
	0x276a, 0x276a,
	0x276c, 0x276c,
	0x276e, 0x276e,
	0x2770, 0x2770,
	0x2772, 0x2772,
	0x2774, 0x2774,
	0x27c5, 0x27c5,
	0x27e6, 0x27e6,
	0x27e8, 0x27e8,
	0x27ea, 0x27ea,
	0x27ec, 0x27ec,
	0x27ee, 0x27ee,
	0x2983, 0x2983,
	0x2985, 0x2985,
	0x2987, 0x2987,
	0x2989, 0x2989,
	0x298b, 0x298b,
	0x298d, 0x298d,
	0x298f, 0x298f,
	0x2991, 0x2991,
	0x2993, 0x2993,
	0x2995, 0x2995,
	0x2997, 0x2997,
	0x29d8, 0x29d8,
	0x29da, 0x29da,
	0x29fc, 0x29fc,
	0x2e22, 0x2e22,
	0x2e24, 0x2e24,
	0x2e26, 0x2e26,
	0x2e28, 0x2e28,
	0x2e42, 0x2e42,
	0x3008, 0x3008,
	0x300a, 0x300a,
	0x300c, 0x300c,
	0x300e, 0x300e,
	0x3010, 0x3010,
	0x3014, 0x3014,
	0x3016, 0x3016,
	0x3018, 0x3018,
	0x301a, 0x301a,
	0x301d, 0x301d,
	0xfd3f, 0xfd3f,
	0xfe17, 0xfe17,
	0xfe35, 0xfe35,
	0xfe37, 0xfe37,
	0xfe39, 0xfe39,
	0xfe3b, 0xfe3b,
	0xfe3d, 0xfe3d,
	0xfe3f, 0xfe3f,
	0xfe41, 0xfe41,
	0xfe43, 0xfe43,
	0xfe47, 0xfe47,
	0xfe59, 0xfe59,
	0xfe5b, 0xfe5b,
	0xfe5d, 0xfe5d,
	0xff08, 0xff08,
	0xff3b, 0xff3b,
	0xff5b, 0xff5b,
	0xff5f, 0xff5f,
	0xff62, 0xff62,
}; /* CR_Ps */

/* 'S': Major Category */
static const OnigCodePoint CR_S[] = {
	210,
	0x0024, 0x0024,
	0x002b, 0x002b,
	0x003c, 0x003e,
	0x005e, 0x005e,
	0x0060, 0x0060,
	0x007c, 0x007c,
	0x007e, 0x007e,
	0x00a2, 0x00a6,
	0x00a8, 0x00a9,
	0x00ac, 0x00ac,
	0x00ae, 0x00b1,
	0x00b4, 0x00b4,
	0x00b8, 0x00b8,
	0x00d7, 0x00d7,
	0x00f7, 0x00f7,
	0x02c2, 0x02c5,
	0x02d2, 0x02df,
	0x02e5, 0x02eb,
	0x02ed, 0x02ed,
	0x02ef, 0x02ff,
	0x0375, 0x0375,
	0x0384, 0x0385,
	0x03f6, 0x03f6,
	0x0482, 0x0482,
	0x058d, 0x058f,
	0x0606, 0x0608,
	0x060b, 0x060b,
	0x060e, 0x060f,
	0x06de, 0x06de,
	0x06e9, 0x06e9,
	0x06fd, 0x06fe,
	0x07f6, 0x07f6,
	0x09f2, 0x09f3,
	0x09fa, 0x09fb,
	0x0af1, 0x0af1,
	0x0b70, 0x0b70,
	0x0bf3, 0x0bfa,
	0x0c7f, 0x0c7f,
	0x0d79, 0x0d79,
	0x0e3f, 0x0e3f,
	0x0f01, 0x0f03,
	0x0f13, 0x0f13,
	0x0f15, 0x0f17,
	0x0f1a, 0x0f1f,
	0x0f34, 0x0f34,
	0x0f36, 0x0f36,
	0x0f38, 0x0f38,
	0x0fbe, 0x0fc5,
	0x0fc7, 0x0fcc,
	0x0fce, 0x0fcf,
	0x0fd5, 0x0fd8,
	0x109e, 0x109f,
	0x1390, 0x1399,
	0x17db, 0x17db,
	0x1940, 0x1940,
	0x19de, 0x19ff,
	0x1b61, 0x1b6a,
	0x1b74, 0x1b7c,
	0x1fbd, 0x1fbd,
	0x1fbf, 0x1fc1,
	0x1fcd, 0x1fcf,
	0x1fdd, 0x1fdf,
	0x1fed, 0x1fef,
	0x1ffd, 0x1ffe,
	0x2044, 0x2044,
	0x2052, 0x2052,
	0x207a, 0x207c,
	0x208a, 0x208c,
	0x20a0, 0x20bd,
	0x2100, 0x2101,
	0x2103, 0x2106,
	0x2108, 0x2109,
	0x2114, 0x2114,
	0x2116, 0x2118,
	0x211e, 0x2123,
	0x2125, 0x2125,
	0x2127, 0x2127,
	0x2129, 0x2129,
	0x212e, 0x212e,
	0x213a, 0x213b,
	0x2140, 0x2144,
	0x214a, 0x214d,
	0x214f, 0x214f,
	0x2190, 0x2307,
	0x230c, 0x2328,
	0x232b, 0x23fa,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x249c, 0x24e9,
	0x2500, 0x2767,
	0x2794, 0x27c4,
	0x27c7, 0x27e5,
	0x27f0, 0x2982,
	0x2999, 0x29d7,
	0x29dc, 0x29fb,
	0x29fe, 0x2b73,
	0x2b76, 0x2b95,
	0x2b98, 0x2bb9,
	0x2bbd, 0x2bc8,
	0x2bca, 0x2bd1,
	0x2ce5, 0x2cea,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3004, 0x3004,
	0x3012, 0x3013,
	0x3020, 0x3020,
	0x3036, 0x3037,
	0x303e, 0x303f,
	0x309b, 0x309c,
	0x3190, 0x3191,
	0x3196, 0x319f,
	0x31c0, 0x31e3,
	0x3200, 0x321e,
	0x322a, 0x3247,
	0x3250, 0x3250,
	0x3260, 0x327f,
	0x328a, 0x32b0,
	0x32c0, 0x32fe,
	0x3300, 0x33ff,
	0x4dc0, 0x4dff,
	0xa490, 0xa4c6,
	0xa700, 0xa716,
	0xa720, 0xa721,
	0xa789, 0xa78a,
	0xa828, 0xa82b,
	0xa836, 0xa839,
	0xaa77, 0xaa79,
	0xab5b, 0xab5b,
	0xfb29, 0xfb29,
	0xfbb2, 0xfbc1,
	0xfdfc, 0xfdfd,
	0xfe62, 0xfe62,
	0xfe64, 0xfe66,
	0xfe69, 0xfe69,
	0xff04, 0xff04,
	0xff0b, 0xff0b,
	0xff1c, 0xff1e,
	0xff3e, 0xff3e,
	0xff40, 0xff40,
	0xff5c, 0xff5c,
	0xff5e, 0xff5e,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfffc, 0xfffd,
	0x10137, 0x1013f,
	0x10179, 0x10189,
	0x1018c, 0x1018c,
	0x10190, 0x1019b,
	0x101a0, 0x101a0,
	0x101d0, 0x101fc,
	0x10877, 0x10878,
	0x10ac8, 0x10ac8,
	0x16b3c, 0x16b3f,
	0x16b45, 0x16b45,
	0x1bc9c, 0x1bc9c,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d164,
	0x1d16a, 0x1d16c,
	0x1d183, 0x1d184,
	0x1d18c, 0x1d1a9,
	0x1d1ae, 0x1d1dd,
	0x1d200, 0x1d241,
	0x1d245, 0x1d245,
	0x1d300, 0x1d356,
	0x1d6c1, 0x1d6c1,
	0x1d6db, 0x1d6db,
	0x1d6fb, 0x1d6fb,
	0x1d715, 0x1d715,
	0x1d735, 0x1d735,
	0x1d74f, 0x1d74f,
	0x1d76f, 0x1d76f,
	0x1d789, 0x1d789,
	0x1d7a9, 0x1d7a9,
	0x1d7c3, 0x1d7c3,
	0x1eef0, 0x1eef1,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0bf,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0f5,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f16b,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f32c,
	0x1f330, 0x1f37d,
	0x1f380, 0x1f3ce,
	0x1f3d4, 0x1f3f7,
	0x1f400, 0x1f4fe,
	0x1f500, 0x1f54a,
	0x1f550, 0x1f579,
	0x1f57b, 0x1f5a3,
	0x1f5a5, 0x1f642,
	0x1f645, 0x1f6cf,
	0x1f6e0, 0x1f6ec,
	0x1f6f0, 0x1f6f3,
	0x1f700, 0x1f773,
	0x1f780, 0x1f7d4,
	0x1f800, 0x1f80b,
	0x1f810, 0x1f847,
	0x1f850, 0x1f859,
	0x1f860, 0x1f887,
	0x1f890, 0x1f8ad,
}; /* CR_S */

/* 'Sc': General Category */
static const OnigCodePoint CR_Sc[] = {
	17,
	0x0024, 0x0024,
	0x00a2, 0x00a5,
	0x058f, 0x058f,
	0x060b, 0x060b,
	0x09f2, 0x09f3,
	0x09fb, 0x09fb,
	0x0af1, 0x0af1,
	0x0bf9, 0x0bf9,
	0x0e3f, 0x0e3f,
	0x17db, 0x17db,
	0x20a0, 0x20bd,
	0xa838, 0xa838,
	0xfdfc, 0xfdfc,
	0xfe69, 0xfe69,
	0xff04, 0xff04,
	0xffe0, 0xffe1,
	0xffe5, 0xffe6,
}; /* CR_Sc */

/* 'Sk': General Category */
static const OnigCodePoint CR_Sk[] = {
	28,
	0x005e, 0x005e,
	0x0060, 0x0060,
	0x00a8, 0x00a8,
	0x00af, 0x00af,
	0x00b4, 0x00b4,
	0x00b8, 0x00b8,
	0x02c2, 0x02c5,
	0x02d2, 0x02df,
	0x02e5, 0x02eb,
	0x02ed, 0x02ed,
	0x02ef, 0x02ff,
	0x0375, 0x0375,
	0x0384, 0x0385,
	0x1fbd, 0x1fbd,
	0x1fbf, 0x1fc1,
	0x1fcd, 0x1fcf,
	0x1fdd, 0x1fdf,
	0x1fed, 0x1fef,
	0x1ffd, 0x1ffe,
	0x309b, 0x309c,
	0xa700, 0xa716,
	0xa720, 0xa721,
	0xa789, 0xa78a,
	0xab5b, 0xab5b,
	0xfbb2, 0xfbc1,
	0xff3e, 0xff3e,
	0xff40, 0xff40,
	0xffe3, 0xffe3,
}; /* CR_Sk */

/* 'Sm': General Category */
static const OnigCodePoint CR_Sm[] = {
	64,
	0x002b, 0x002b,
	0x003c, 0x003e,
	0x007c, 0x007c,
	0x007e, 0x007e,
	0x00ac, 0x00ac,
	0x00b1, 0x00b1,
	0x00d7, 0x00d7,
	0x00f7, 0x00f7,
	0x03f6, 0x03f6,
	0x0606, 0x0608,
	0x2044, 0x2044,
	0x2052, 0x2052,
	0x207a, 0x207c,
	0x208a, 0x208c,
	0x2118, 0x2118,
	0x2140, 0x2144,
	0x214b, 0x214b,
	0x2190, 0x2194,
	0x219a, 0x219b,
	0x21a0, 0x21a0,
	0x21a3, 0x21a3,
	0x21a6, 0x21a6,
	0x21ae, 0x21ae,
	0x21ce, 0x21cf,
	0x21d2, 0x21d2,
	0x21d4, 0x21d4,
	0x21f4, 0x22ff,
	0x2320, 0x2321,
	0x237c, 0x237c,
	0x239b, 0x23b3,
	0x23dc, 0x23e1,
	0x25b7, 0x25b7,
	0x25c1, 0x25c1,
	0x25f8, 0x25ff,
	0x266f, 0x266f,
	0x27c0, 0x27c4,
	0x27c7, 0x27e5,
	0x27f0, 0x27ff,
	0x2900, 0x2982,
	0x2999, 0x29d7,
	0x29dc, 0x29fb,
	0x29fe, 0x2aff,
	0x2b30, 0x2b44,
	0x2b47, 0x2b4c,
	0xfb29, 0xfb29,
	0xfe62, 0xfe62,
	0xfe64, 0xfe66,
	0xff0b, 0xff0b,
	0xff1c, 0xff1e,
	0xff5c, 0xff5c,
	0xff5e, 0xff5e,
	0xffe2, 0xffe2,
	0xffe9, 0xffec,
	0x1d6c1, 0x1d6c1,
	0x1d6db, 0x1d6db,
	0x1d6fb, 0x1d6fb,
	0x1d715, 0x1d715,
	0x1d735, 0x1d735,
	0x1d74f, 0x1d74f,
	0x1d76f, 0x1d76f,
	0x1d789, 0x1d789,
	0x1d7a9, 0x1d7a9,
	0x1d7c3, 0x1d7c3,
	0x1eef0, 0x1eef1,
}; /* CR_Sm */

/* 'So': General Category */
static const OnigCodePoint CR_So[] = {
	165,
	0x00a6, 0x00a6,
	0x00a9, 0x00a9,
	0x00ae, 0x00ae,
	0x00b0, 0x00b0,
	0x0482, 0x0482,
	0x058d, 0x058e,
	0x060e, 0x060f,
	0x06de, 0x06de,
	0x06e9, 0x06e9,
	0x06fd, 0x06fe,
	0x07f6, 0x07f6,
	0x09fa, 0x09fa,
	0x0b70, 0x0b70,
	0x0bf3, 0x0bf8,
	0x0bfa, 0x0bfa,
	0x0c7f, 0x0c7f,
	0x0d79, 0x0d79,
	0x0f01, 0x0f03,
	0x0f13, 0x0f13,
	0x0f15, 0x0f17,
	0x0f1a, 0x0f1f,
	0x0f34, 0x0f34,
	0x0f36, 0x0f36,
	0x0f38, 0x0f38,
	0x0fbe, 0x0fc5,
	0x0fc7, 0x0fcc,
	0x0fce, 0x0fcf,
	0x0fd5, 0x0fd8,
	0x109e, 0x109f,
	0x1390, 0x1399,
	0x1940, 0x1940,
	0x19de, 0x19ff,
	0x1b61, 0x1b6a,
	0x1b74, 0x1b7c,
	0x2100, 0x2101,
	0x2103, 0x2106,
	0x2108, 0x2109,
	0x2114, 0x2114,
	0x2116, 0x2117,
	0x211e, 0x2123,
	0x2125, 0x2125,
	0x2127, 0x2127,
	0x2129, 0x2129,
	0x212e, 0x212e,
	0x213a, 0x213b,
	0x214a, 0x214a,
	0x214c, 0x214d,
	0x214f, 0x214f,
	0x2195, 0x2199,
	0x219c, 0x219f,
	0x21a1, 0x21a2,
	0x21a4, 0x21a5,
	0x21a7, 0x21ad,
	0x21af, 0x21cd,
	0x21d0, 0x21d1,
	0x21d3, 0x21d3,
	0x21d5, 0x21f3,
	0x2300, 0x2307,
	0x230c, 0x231f,
	0x2322, 0x2328,
	0x232b, 0x237b,
	0x237d, 0x239a,
	0x23b4, 0x23db,
	0x23e2, 0x23fa,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x249c, 0x24e9,
	0x2500, 0x25b6,
	0x25b8, 0x25c0,
	0x25c2, 0x25f7,
	0x2600, 0x266e,
	0x2670, 0x2767,
	0x2794, 0x27bf,
	0x2800, 0x28ff,
	0x2b00, 0x2b2f,
	0x2b45, 0x2b46,
	0x2b4d, 0x2b73,
	0x2b76, 0x2b95,
	0x2b98, 0x2bb9,
	0x2bbd, 0x2bc8,
	0x2bca, 0x2bd1,
	0x2ce5, 0x2cea,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3004, 0x3004,
	0x3012, 0x3013,
	0x3020, 0x3020,
	0x3036, 0x3037,
	0x303e, 0x303f,
	0x3190, 0x3191,
	0x3196, 0x319f,
	0x31c0, 0x31e3,
	0x3200, 0x321e,
	0x322a, 0x3247,
	0x3250, 0x3250,
	0x3260, 0x327f,
	0x328a, 0x32b0,
	0x32c0, 0x32fe,
	0x3300, 0x33ff,
	0x4dc0, 0x4dff,
	0xa490, 0xa4c6,
	0xa828, 0xa82b,
	0xa836, 0xa837,
	0xa839, 0xa839,
	0xaa77, 0xaa79,
	0xfdfd, 0xfdfd,
	0xffe4, 0xffe4,
	0xffe8, 0xffe8,
	0xffed, 0xffee,
	0xfffc, 0xfffd,
	0x10137, 0x1013f,
	0x10179, 0x10189,
	0x1018c, 0x1018c,
	0x10190, 0x1019b,
	0x101a0, 0x101a0,
	0x101d0, 0x101fc,
	0x10877, 0x10878,
	0x10ac8, 0x10ac8,
	0x16b3c, 0x16b3f,
	0x16b45, 0x16b45,
	0x1bc9c, 0x1bc9c,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d164,
	0x1d16a, 0x1d16c,
	0x1d183, 0x1d184,
	0x1d18c, 0x1d1a9,
	0x1d1ae, 0x1d1dd,
	0x1d200, 0x1d241,
	0x1d245, 0x1d245,
	0x1d300, 0x1d356,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0bf,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0f5,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f16b,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f32c,
	0x1f330, 0x1f37d,
	0x1f380, 0x1f3ce,
	0x1f3d4, 0x1f3f7,
	0x1f400, 0x1f4fe,
	0x1f500, 0x1f54a,
	0x1f550, 0x1f579,
	0x1f57b, 0x1f5a3,
	0x1f5a5, 0x1f642,
	0x1f645, 0x1f6cf,
	0x1f6e0, 0x1f6ec,
	0x1f6f0, 0x1f6f3,
	0x1f700, 0x1f773,
	0x1f780, 0x1f7d4,
	0x1f800, 0x1f80b,
	0x1f810, 0x1f847,
	0x1f850, 0x1f859,
	0x1f860, 0x1f887,
	0x1f890, 0x1f8ad,
}; /* CR_So */

/* 'Z': Major Category */
static const OnigCodePoint CR_Z[] = {
	8,
	0x0020, 0x0020,
	0x00a0, 0x00a0,
	0x1680, 0x1680,
	0x2000, 0x200a,
	0x2028, 0x2029,
	0x202f, 0x202f,
	0x205f, 0x205f,
	0x3000, 0x3000,
}; /* CR_Z */

/* 'Zl': General Category */
static const OnigCodePoint CR_Zl[] = {
	1,
	0x2028, 0x2028,
}; /* CR_Zl */

/* 'Zp': General Category */
static const OnigCodePoint CR_Zp[] = {
	1,
	0x2029, 0x2029,
}; /* CR_Zp */

/* 'Zs': General Category */
static const OnigCodePoint CR_Zs[] = {
	7,
	0x0020, 0x0020,
	0x00a0, 0x00a0,
	0x1680, 0x1680,
	0x2000, 0x200a,
	0x202f, 0x202f,
	0x205f, 0x205f,
	0x3000, 0x3000,
}; /* CR_Zs */

/* 'Math': Derived Property */
static const OnigCodePoint CR_Math[] = {
	138,
	0x002b, 0x002b,
	0x003c, 0x003e,
	0x005e, 0x005e,
	0x007c, 0x007c,
	0x007e, 0x007e,
	0x00ac, 0x00ac,
	0x00b1, 0x00b1,
	0x00d7, 0x00d7,
	0x00f7, 0x00f7,
	0x03d0, 0x03d2,
	0x03d5, 0x03d5,
	0x03f0, 0x03f1,
	0x03f4, 0x03f6,
	0x0606, 0x0608,
	0x2016, 0x2016,
	0x2032, 0x2034,
	0x2040, 0x2040,
	0x2044, 0x2044,
	0x2052, 0x2052,
	0x2061, 0x2064,
	0x207a, 0x207e,
	0x208a, 0x208e,
	0x20d0, 0x20dc,
	0x20e1, 0x20e1,
	0x20e5, 0x20e6,
	0x20eb, 0x20ef,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2118, 0x211d,
	0x2124, 0x2124,
	0x2128, 0x2129,
	0x212c, 0x212d,
	0x212f, 0x2131,
	0x2133, 0x2138,
	0x213c, 0x2149,
	0x214b, 0x214b,
	0x2190, 0x21a7,
	0x21a9, 0x21ae,
	0x21b0, 0x21b1,
	0x21b6, 0x21b7,
	0x21bc, 0x21db,
	0x21dd, 0x21dd,
	0x21e4, 0x21e5,
	0x21f4, 0x22ff,
	0x2308, 0x230b,
	0x2320, 0x2321,
	0x237c, 0x237c,
	0x239b, 0x23b5,
	0x23b7, 0x23b7,
	0x23d0, 0x23d0,
	0x23dc, 0x23e2,
	0x25a0, 0x25a1,
	0x25ae, 0x25b7,
	0x25bc, 0x25c1,
	0x25c6, 0x25c7,
	0x25ca, 0x25cb,
	0x25cf, 0x25d3,
	0x25e2, 0x25e2,
	0x25e4, 0x25e4,
	0x25e7, 0x25ec,
	0x25f8, 0x25ff,
	0x2605, 0x2606,
	0x2640, 0x2640,
	0x2642, 0x2642,
	0x2660, 0x2663,
	0x266d, 0x266f,
	0x27c0, 0x27ff,
	0x2900, 0x2aff,
	0x2b30, 0x2b44,
	0x2b47, 0x2b4c,
	0xfb29, 0xfb29,
	0xfe61, 0xfe66,
	0xfe68, 0xfe68,
	0xff0b, 0xff0b,
	0xff1c, 0xff1e,
	0xff3c, 0xff3c,
	0xff3e, 0xff3e,
	0xff5c, 0xff5c,
	0xff5e, 0xff5e,
	0xffe2, 0xffe2,
	0xffe9, 0xffec,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1eef0, 0x1eef1,
}; /* CR_Math */

/* 'Alphabetic': Derived Property */
#define CR_Alphabetic CR_Alpha

/* 'Lowercase': Derived Property */
#define CR_Lowercase CR_Lower

/* 'Uppercase': Derived Property */
#define CR_Uppercase CR_Upper

/* 'Cased': Derived Property */
static const OnigCodePoint CR_Cased[] = {
	127,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x01ba,
	0x01bc, 0x01bf,
	0x01c4, 0x0293,
	0x0295, 0x02b8,
	0x02c0, 0x02c1,
	0x02e0, 0x02e4,
	0x0345, 0x0345,
	0x0370, 0x0373,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x052f,
	0x0531, 0x0556,
	0x0561, 0x0587,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2134,
	0x2139, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x217f,
	0x2183, 0x2184,
	0x24b6, 0x24e9,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2cf2, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0xa640, 0xa66d,
	0xa680, 0xa69d,
	0xa722, 0xa787,
	0xa78b, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f8, 0xa7fa,
	0xab30, 0xab5a,
	0xab5c, 0xab5f,
	0xab64, 0xab65,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0x10400, 0x1044f,
	0x118a0, 0x118df,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1f130, 0x1f149,
	0x1f150, 0x1f169,
	0x1f170, 0x1f189,
}; /* CR_Cased */

/* 'Case_Ignorable': Derived Property */
static const OnigCodePoint CR_Case_Ignorable[] = {
	335,
	0x0027, 0x0027,
	0x002e, 0x002e,
	0x003a, 0x003a,
	0x005e, 0x005e,
	0x0060, 0x0060,
	0x00a8, 0x00a8,
	0x00ad, 0x00ad,
	0x00af, 0x00af,
	0x00b4, 0x00b4,
	0x00b7, 0x00b8,
	0x02b0, 0x036f,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x0384, 0x0385,
	0x0387, 0x0387,
	0x0483, 0x0489,
	0x0559, 0x0559,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05f4, 0x05f4,
	0x0600, 0x0605,
	0x0610, 0x061a,
	0x061c, 0x061c,
	0x0640, 0x0640,
	0x064b, 0x065f,
	0x0670, 0x0670,
	0x06d6, 0x06dd,
	0x06df, 0x06e8,
	0x06ea, 0x06ed,
	0x070f, 0x070f,
	0x0711, 0x0711,
	0x0730, 0x074a,
	0x07a6, 0x07b0,
	0x07eb, 0x07f5,
	0x07fa, 0x07fa,
	0x0816, 0x082d,
	0x0859, 0x085b,
	0x08e4, 0x0902,
	0x093a, 0x093a,
	0x093c, 0x093c,
	0x0941, 0x0948,
	0x094d, 0x094d,
	0x0951, 0x0957,
	0x0962, 0x0963,
	0x0971, 0x0971,
	0x0981, 0x0981,
	0x09bc, 0x09bc,
	0x09c1, 0x09c4,
	0x09cd, 0x09cd,
	0x09e2, 0x09e3,
	0x0a01, 0x0a02,
	0x0a3c, 0x0a3c,
	0x0a41, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a70, 0x0a71,
	0x0a75, 0x0a75,
	0x0a81, 0x0a82,
	0x0abc, 0x0abc,
	0x0ac1, 0x0ac5,
	0x0ac7, 0x0ac8,
	0x0acd, 0x0acd,
	0x0ae2, 0x0ae3,
	0x0b01, 0x0b01,
	0x0b3c, 0x0b3c,
	0x0b3f, 0x0b3f,
	0x0b41, 0x0b44,
	0x0b4d, 0x0b4d,
	0x0b56, 0x0b56,
	0x0b62, 0x0b63,
	0x0b82, 0x0b82,
	0x0bc0, 0x0bc0,
	0x0bcd, 0x0bcd,
	0x0c00, 0x0c00,
	0x0c3e, 0x0c40,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c62, 0x0c63,
	0x0c81, 0x0c81,
	0x0cbc, 0x0cbc,
	0x0cbf, 0x0cbf,
	0x0cc6, 0x0cc6,
	0x0ccc, 0x0ccd,
	0x0ce2, 0x0ce3,
	0x0d01, 0x0d01,
	0x0d41, 0x0d44,
	0x0d4d, 0x0d4d,
	0x0d62, 0x0d63,
	0x0dca, 0x0dca,
	0x0dd2, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0e31, 0x0e31,
	0x0e34, 0x0e3a,
	0x0e46, 0x0e4e,
	0x0eb1, 0x0eb1,
	0x0eb4, 0x0eb9,
	0x0ebb, 0x0ebc,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0f18, 0x0f19,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f71, 0x0f7e,
	0x0f80, 0x0f84,
	0x0f86, 0x0f87,
	0x0f8d, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x102d, 0x1030,
	0x1032, 0x1037,
	0x1039, 0x103a,
	0x103d, 0x103e,
	0x1058, 0x1059,
	0x105e, 0x1060,
	0x1071, 0x1074,
	0x1082, 0x1082,
	0x1085, 0x1086,
	0x108d, 0x108d,
	0x109d, 0x109d,
	0x10fc, 0x10fc,
	0x135d, 0x135f,
	0x1712, 0x1714,
	0x1732, 0x1734,
	0x1752, 0x1753,
	0x1772, 0x1773,
	0x17b4, 0x17b5,
	0x17b7, 0x17bd,
	0x17c6, 0x17c6,
	0x17c9, 0x17d3,
	0x17d7, 0x17d7,
	0x17dd, 0x17dd,
	0x180b, 0x180e,
	0x1843, 0x1843,
	0x18a9, 0x18a9,
	0x1920, 0x1922,
	0x1927, 0x1928,
	0x1932, 0x1932,
	0x1939, 0x193b,
	0x1a17, 0x1a18,
	0x1a1b, 0x1a1b,
	0x1a56, 0x1a56,
	0x1a58, 0x1a5e,
	0x1a60, 0x1a60,
	0x1a62, 0x1a62,
	0x1a65, 0x1a6c,
	0x1a73, 0x1a7c,
	0x1a7f, 0x1a7f,
	0x1aa7, 0x1aa7,
	0x1ab0, 0x1abe,
	0x1b00, 0x1b03,
	0x1b34, 0x1b34,
	0x1b36, 0x1b3a,
	0x1b3c, 0x1b3c,
	0x1b42, 0x1b42,
	0x1b6b, 0x1b73,
	0x1b80, 0x1b81,
	0x1ba2, 0x1ba5,
	0x1ba8, 0x1ba9,
	0x1bab, 0x1bad,
	0x1be6, 0x1be6,
	0x1be8, 0x1be9,
	0x1bed, 0x1bed,
	0x1bef, 0x1bf1,
	0x1c2c, 0x1c33,
	0x1c36, 0x1c37,
	0x1c78, 0x1c7d,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1ce0,
	0x1ce2, 0x1ce8,
	0x1ced, 0x1ced,
	0x1cf4, 0x1cf4,
	0x1cf8, 0x1cf9,
	0x1d2c, 0x1d6a,
	0x1d78, 0x1d78,
	0x1d9b, 0x1df5,
	0x1dfc, 0x1dff,
	0x1fbd, 0x1fbd,
	0x1fbf, 0x1fc1,
	0x1fcd, 0x1fcf,
	0x1fdd, 0x1fdf,
	0x1fed, 0x1fef,
	0x1ffd, 0x1ffe,
	0x200b, 0x200f,
	0x2018, 0x2019,
	0x2024, 0x2024,
	0x2027, 0x2027,
	0x202a, 0x202e,
	0x2060, 0x2064,
	0x2066, 0x206f,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x20d0, 0x20f0,
	0x2c7c, 0x2c7d,
	0x2cef, 0x2cf1,
	0x2d6f, 0x2d6f,
	0x2d7f, 0x2d7f,
	0x2de0, 0x2dff,
	0x2e2f, 0x2e2f,
	0x3005, 0x3005,
	0x302a, 0x302d,
	0x3031, 0x3035,
	0x303b, 0x303b,
	0x3099, 0x309e,
	0x30fc, 0x30fe,
	0xa015, 0xa015,
	0xa4f8, 0xa4fd,
	0xa60c, 0xa60c,
	0xa66f, 0xa672,
	0xa674, 0xa67d,
	0xa67f, 0xa67f,
	0xa69c, 0xa69d,
	0xa69f, 0xa69f,
	0xa6f0, 0xa6f1,
	0xa700, 0xa721,
	0xa770, 0xa770,
	0xa788, 0xa78a,
	0xa7f8, 0xa7f9,
	0xa802, 0xa802,
	0xa806, 0xa806,
	0xa80b, 0xa80b,
	0xa825, 0xa826,
	0xa8c4, 0xa8c4,
	0xa8e0, 0xa8f1,
	0xa926, 0xa92d,
	0xa947, 0xa951,
	0xa980, 0xa982,
	0xa9b3, 0xa9b3,
	0xa9b6, 0xa9b9,
	0xa9bc, 0xa9bc,
	0xa9cf, 0xa9cf,
	0xa9e5, 0xa9e6,
	0xaa29, 0xaa2e,
	0xaa31, 0xaa32,
	0xaa35, 0xaa36,
	0xaa43, 0xaa43,
	0xaa4c, 0xaa4c,
	0xaa70, 0xaa70,
	0xaa7c, 0xaa7c,
	0xaab0, 0xaab0,
	0xaab2, 0xaab4,
	0xaab7, 0xaab8,
	0xaabe, 0xaabf,
	0xaac1, 0xaac1,
	0xaadd, 0xaadd,
	0xaaec, 0xaaed,
	0xaaf3, 0xaaf4,
	0xaaf6, 0xaaf6,
	0xab5b, 0xab5f,
	0xabe5, 0xabe5,
	0xabe8, 0xabe8,
	0xabed, 0xabed,
	0xfb1e, 0xfb1e,
	0xfbb2, 0xfbc1,
	0xfe00, 0xfe0f,
	0xfe13, 0xfe13,
	0xfe20, 0xfe2d,
	0xfe52, 0xfe52,
	0xfe55, 0xfe55,
	0xfeff, 0xfeff,
	0xff07, 0xff07,
	0xff0e, 0xff0e,
	0xff1a, 0xff1a,
	0xff3e, 0xff3e,
	0xff40, 0xff40,
	0xff70, 0xff70,
	0xff9e, 0xff9f,
	0xffe3, 0xffe3,
	0xfff9, 0xfffb,
	0x101fd, 0x101fd,
	0x102e0, 0x102e0,
	0x10376, 0x1037a,
	0x10a01, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a0f,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x10ae5, 0x10ae6,
	0x11001, 0x11001,
	0x11038, 0x11046,
	0x1107f, 0x11081,
	0x110b3, 0x110b6,
	0x110b9, 0x110ba,
	0x110bd, 0x110bd,
	0x11100, 0x11102,
	0x11127, 0x1112b,
	0x1112d, 0x11134,
	0x11173, 0x11173,
	0x11180, 0x11181,
	0x111b6, 0x111be,
	0x1122f, 0x11231,
	0x11234, 0x11234,
	0x11236, 0x11237,
	0x112df, 0x112df,
	0x112e3, 0x112ea,
	0x11301, 0x11301,
	0x1133c, 0x1133c,
	0x11340, 0x11340,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x114b3, 0x114b8,
	0x114ba, 0x114ba,
	0x114bf, 0x114c0,
	0x114c2, 0x114c3,
	0x115b2, 0x115b5,
	0x115bc, 0x115bd,
	0x115bf, 0x115c0,
	0x11633, 0x1163a,
	0x1163d, 0x1163d,
	0x1163f, 0x11640,
	0x116ab, 0x116ab,
	0x116ad, 0x116ad,
	0x116b0, 0x116b5,
	0x116b7, 0x116b7,
	0x16af0, 0x16af4,
	0x16b30, 0x16b36,
	0x16b40, 0x16b43,
	0x16f8f, 0x16f9f,
	0x1bc9d, 0x1bc9e,
	0x1bca0, 0x1bca3,
	0x1d167, 0x1d169,
	0x1d173, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0x1e8d0, 0x1e8d6,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
}; /* CR_Case_Ignorable */

/* 'Changes_When_Lowercased': Derived Property */
static const OnigCodePoint CR_Changes_When_Lowercased[] = {
	585,
	0x0041, 0x005a,
	0x00c0, 0x00d6,
	0x00d8, 0x00de,
	0x0100, 0x0100,
	0x0102, 0x0102,
	0x0104, 0x0104,
	0x0106, 0x0106,
	0x0108, 0x0108,
	0x010a, 0x010a,
	0x010c, 0x010c,
	0x010e, 0x010e,
	0x0110, 0x0110,
	0x0112, 0x0112,
	0x0114, 0x0114,
	0x0116, 0x0116,
	0x0118, 0x0118,
	0x011a, 0x011a,
	0x011c, 0x011c,
	0x011e, 0x011e,
	0x0120, 0x0120,
	0x0122, 0x0122,
	0x0124, 0x0124,
	0x0126, 0x0126,
	0x0128, 0x0128,
	0x012a, 0x012a,
	0x012c, 0x012c,
	0x012e, 0x012e,
	0x0130, 0x0130,
	0x0132, 0x0132,
	0x0134, 0x0134,
	0x0136, 0x0136,
	0x0139, 0x0139,
	0x013b, 0x013b,
	0x013d, 0x013d,
	0x013f, 0x013f,
	0x0141, 0x0141,
	0x0143, 0x0143,
	0x0145, 0x0145,
	0x0147, 0x0147,
	0x014a, 0x014a,
	0x014c, 0x014c,
	0x014e, 0x014e,
	0x0150, 0x0150,
	0x0152, 0x0152,
	0x0154, 0x0154,
	0x0156, 0x0156,
	0x0158, 0x0158,
	0x015a, 0x015a,
	0x015c, 0x015c,
	0x015e, 0x015e,
	0x0160, 0x0160,
	0x0162, 0x0162,
	0x0164, 0x0164,
	0x0166, 0x0166,
	0x0168, 0x0168,
	0x016a, 0x016a,
	0x016c, 0x016c,
	0x016e, 0x016e,
	0x0170, 0x0170,
	0x0172, 0x0172,
	0x0174, 0x0174,
	0x0176, 0x0176,
	0x0178, 0x0179,
	0x017b, 0x017b,
	0x017d, 0x017d,
	0x0181, 0x0182,
	0x0184, 0x0184,
	0x0186, 0x0187,
	0x0189, 0x018b,
	0x018e, 0x0191,
	0x0193, 0x0194,
	0x0196, 0x0198,
	0x019c, 0x019d,
	0x019f, 0x01a0,
	0x01a2, 0x01a2,
	0x01a4, 0x01a4,
	0x01a6, 0x01a7,
	0x01a9, 0x01a9,
	0x01ac, 0x01ac,
	0x01ae, 0x01af,
	0x01b1, 0x01b3,
	0x01b5, 0x01b5,
	0x01b7, 0x01b8,
	0x01bc, 0x01bc,
	0x01c4, 0x01c5,
	0x01c7, 0x01c8,
	0x01ca, 0x01cb,
	0x01cd, 0x01cd,
	0x01cf, 0x01cf,
	0x01d1, 0x01d1,
	0x01d3, 0x01d3,
	0x01d5, 0x01d5,
	0x01d7, 0x01d7,
	0x01d9, 0x01d9,
	0x01db, 0x01db,
	0x01de, 0x01de,
	0x01e0, 0x01e0,
	0x01e2, 0x01e2,
	0x01e4, 0x01e4,
	0x01e6, 0x01e6,
	0x01e8, 0x01e8,
	0x01ea, 0x01ea,
	0x01ec, 0x01ec,
	0x01ee, 0x01ee,
	0x01f1, 0x01f2,
	0x01f4, 0x01f4,
	0x01f6, 0x01f8,
	0x01fa, 0x01fa,
	0x01fc, 0x01fc,
	0x01fe, 0x01fe,
	0x0200, 0x0200,
	0x0202, 0x0202,
	0x0204, 0x0204,
	0x0206, 0x0206,
	0x0208, 0x0208,
	0x020a, 0x020a,
	0x020c, 0x020c,
	0x020e, 0x020e,
	0x0210, 0x0210,
	0x0212, 0x0212,
	0x0214, 0x0214,
	0x0216, 0x0216,
	0x0218, 0x0218,
	0x021a, 0x021a,
	0x021c, 0x021c,
	0x021e, 0x021e,
	0x0220, 0x0220,
	0x0222, 0x0222,
	0x0224, 0x0224,
	0x0226, 0x0226,
	0x0228, 0x0228,
	0x022a, 0x022a,
	0x022c, 0x022c,
	0x022e, 0x022e,
	0x0230, 0x0230,
	0x0232, 0x0232,
	0x023a, 0x023b,
	0x023d, 0x023e,
	0x0241, 0x0241,
	0x0243, 0x0246,
	0x0248, 0x0248,
	0x024a, 0x024a,
	0x024c, 0x024c,
	0x024e, 0x024e,
	0x0370, 0x0370,
	0x0372, 0x0372,
	0x0376, 0x0376,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x038f,
	0x0391, 0x03a1,
	0x03a3, 0x03ab,
	0x03cf, 0x03cf,
	0x03d8, 0x03d8,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03e2,
	0x03e4, 0x03e4,
	0x03e6, 0x03e6,
	0x03e8, 0x03e8,
	0x03ea, 0x03ea,
	0x03ec, 0x03ec,
	0x03ee, 0x03ee,
	0x03f4, 0x03f4,
	0x03f7, 0x03f7,
	0x03f9, 0x03fa,
	0x03fd, 0x042f,
	0x0460, 0x0460,
	0x0462, 0x0462,
	0x0464, 0x0464,
	0x0466, 0x0466,
	0x0468, 0x0468,
	0x046a, 0x046a,
	0x046c, 0x046c,
	0x046e, 0x046e,
	0x0470, 0x0470,
	0x0472, 0x0472,
	0x0474, 0x0474,
	0x0476, 0x0476,
	0x0478, 0x0478,
	0x047a, 0x047a,
	0x047c, 0x047c,
	0x047e, 0x047e,
	0x0480, 0x0480,
	0x048a, 0x048a,
	0x048c, 0x048c,
	0x048e, 0x048e,
	0x0490, 0x0490,
	0x0492, 0x0492,
	0x0494, 0x0494,
	0x0496, 0x0496,
	0x0498, 0x0498,
	0x049a, 0x049a,
	0x049c, 0x049c,
	0x049e, 0x049e,
	0x04a0, 0x04a0,
	0x04a2, 0x04a2,
	0x04a4, 0x04a4,
	0x04a6, 0x04a6,
	0x04a8, 0x04a8,
	0x04aa, 0x04aa,
	0x04ac, 0x04ac,
	0x04ae, 0x04ae,
	0x04b0, 0x04b0,
	0x04b2, 0x04b2,
	0x04b4, 0x04b4,
	0x04b6, 0x04b6,
	0x04b8, 0x04b8,
	0x04ba, 0x04ba,
	0x04bc, 0x04bc,
	0x04be, 0x04be,
	0x04c0, 0x04c1,
	0x04c3, 0x04c3,
	0x04c5, 0x04c5,
	0x04c7, 0x04c7,
	0x04c9, 0x04c9,
	0x04cb, 0x04cb,
	0x04cd, 0x04cd,
	0x04d0, 0x04d0,
	0x04d2, 0x04d2,
	0x04d4, 0x04d4,
	0x04d6, 0x04d6,
	0x04d8, 0x04d8,
	0x04da, 0x04da,
	0x04dc, 0x04dc,
	0x04de, 0x04de,
	0x04e0, 0x04e0,
	0x04e2, 0x04e2,
	0x04e4, 0x04e4,
	0x04e6, 0x04e6,
	0x04e8, 0x04e8,
	0x04ea, 0x04ea,
	0x04ec, 0x04ec,
	0x04ee, 0x04ee,
	0x04f0, 0x04f0,
	0x04f2, 0x04f2,
	0x04f4, 0x04f4,
	0x04f6, 0x04f6,
	0x04f8, 0x04f8,
	0x04fa, 0x04fa,
	0x04fc, 0x04fc,
	0x04fe, 0x04fe,
	0x0500, 0x0500,
	0x0502, 0x0502,
	0x0504, 0x0504,
	0x0506, 0x0506,
	0x0508, 0x0508,
	0x050a, 0x050a,
	0x050c, 0x050c,
	0x050e, 0x050e,
	0x0510, 0x0510,
	0x0512, 0x0512,
	0x0514, 0x0514,
	0x0516, 0x0516,
	0x0518, 0x0518,
	0x051a, 0x051a,
	0x051c, 0x051c,
	0x051e, 0x051e,
	0x0520, 0x0520,
	0x0522, 0x0522,
	0x0524, 0x0524,
	0x0526, 0x0526,
	0x0528, 0x0528,
	0x052a, 0x052a,
	0x052c, 0x052c,
	0x052e, 0x052e,
	0x0531, 0x0556,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x1e00, 0x1e00,
	0x1e02, 0x1e02,
	0x1e04, 0x1e04,
	0x1e06, 0x1e06,
	0x1e08, 0x1e08,
	0x1e0a, 0x1e0a,
	0x1e0c, 0x1e0c,
	0x1e0e, 0x1e0e,
	0x1e10, 0x1e10,
	0x1e12, 0x1e12,
	0x1e14, 0x1e14,
	0x1e16, 0x1e16,
	0x1e18, 0x1e18,
	0x1e1a, 0x1e1a,
	0x1e1c, 0x1e1c,
	0x1e1e, 0x1e1e,
	0x1e20, 0x1e20,
	0x1e22, 0x1e22,
	0x1e24, 0x1e24,
	0x1e26, 0x1e26,
	0x1e28, 0x1e28,
	0x1e2a, 0x1e2a,
	0x1e2c, 0x1e2c,
	0x1e2e, 0x1e2e,
	0x1e30, 0x1e30,
	0x1e32, 0x1e32,
	0x1e34, 0x1e34,
	0x1e36, 0x1e36,
	0x1e38, 0x1e38,
	0x1e3a, 0x1e3a,
	0x1e3c, 0x1e3c,
	0x1e3e, 0x1e3e,
	0x1e40, 0x1e40,
	0x1e42, 0x1e42,
	0x1e44, 0x1e44,
	0x1e46, 0x1e46,
	0x1e48, 0x1e48,
	0x1e4a, 0x1e4a,
	0x1e4c, 0x1e4c,
	0x1e4e, 0x1e4e,
	0x1e50, 0x1e50,
	0x1e52, 0x1e52,
	0x1e54, 0x1e54,
	0x1e56, 0x1e56,
	0x1e58, 0x1e58,
	0x1e5a, 0x1e5a,
	0x1e5c, 0x1e5c,
	0x1e5e, 0x1e5e,
	0x1e60, 0x1e60,
	0x1e62, 0x1e62,
	0x1e64, 0x1e64,
	0x1e66, 0x1e66,
	0x1e68, 0x1e68,
	0x1e6a, 0x1e6a,
	0x1e6c, 0x1e6c,
	0x1e6e, 0x1e6e,
	0x1e70, 0x1e70,
	0x1e72, 0x1e72,
	0x1e74, 0x1e74,
	0x1e76, 0x1e76,
	0x1e78, 0x1e78,
	0x1e7a, 0x1e7a,
	0x1e7c, 0x1e7c,
	0x1e7e, 0x1e7e,
	0x1e80, 0x1e80,
	0x1e82, 0x1e82,
	0x1e84, 0x1e84,
	0x1e86, 0x1e86,
	0x1e88, 0x1e88,
	0x1e8a, 0x1e8a,
	0x1e8c, 0x1e8c,
	0x1e8e, 0x1e8e,
	0x1e90, 0x1e90,
	0x1e92, 0x1e92,
	0x1e94, 0x1e94,
	0x1e9e, 0x1e9e,
	0x1ea0, 0x1ea0,
	0x1ea2, 0x1ea2,
	0x1ea4, 0x1ea4,
	0x1ea6, 0x1ea6,
	0x1ea8, 0x1ea8,
	0x1eaa, 0x1eaa,
	0x1eac, 0x1eac,
	0x1eae, 0x1eae,
	0x1eb0, 0x1eb0,
	0x1eb2, 0x1eb2,
	0x1eb4, 0x1eb4,
	0x1eb6, 0x1eb6,
	0x1eb8, 0x1eb8,
	0x1eba, 0x1eba,
	0x1ebc, 0x1ebc,
	0x1ebe, 0x1ebe,
	0x1ec0, 0x1ec0,
	0x1ec2, 0x1ec2,
	0x1ec4, 0x1ec4,
	0x1ec6, 0x1ec6,
	0x1ec8, 0x1ec8,
	0x1eca, 0x1eca,
	0x1ecc, 0x1ecc,
	0x1ece, 0x1ece,
	0x1ed0, 0x1ed0,
	0x1ed2, 0x1ed2,
	0x1ed4, 0x1ed4,
	0x1ed6, 0x1ed6,
	0x1ed8, 0x1ed8,
	0x1eda, 0x1eda,
	0x1edc, 0x1edc,
	0x1ede, 0x1ede,
	0x1ee0, 0x1ee0,
	0x1ee2, 0x1ee2,
	0x1ee4, 0x1ee4,
	0x1ee6, 0x1ee6,
	0x1ee8, 0x1ee8,
	0x1eea, 0x1eea,
	0x1eec, 0x1eec,
	0x1eee, 0x1eee,
	0x1ef0, 0x1ef0,
	0x1ef2, 0x1ef2,
	0x1ef4, 0x1ef4,
	0x1ef6, 0x1ef6,
	0x1ef8, 0x1ef8,
	0x1efa, 0x1efa,
	0x1efc, 0x1efc,
	0x1efe, 0x1efe,
	0x1f08, 0x1f0f,
	0x1f18, 0x1f1d,
	0x1f28, 0x1f2f,
	0x1f38, 0x1f3f,
	0x1f48, 0x1f4d,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f5f,
	0x1f68, 0x1f6f,
	0x1f88, 0x1f8f,
	0x1f98, 0x1f9f,
	0x1fa8, 0x1faf,
	0x1fb8, 0x1fbc,
	0x1fc8, 0x1fcc,
	0x1fd8, 0x1fdb,
	0x1fe8, 0x1fec,
	0x1ff8, 0x1ffc,
	0x2126, 0x2126,
	0x212a, 0x212b,
	0x2132, 0x2132,
	0x2160, 0x216f,
	0x2183, 0x2183,
	0x24b6, 0x24cf,
	0x2c00, 0x2c2e,
	0x2c60, 0x2c60,
	0x2c62, 0x2c64,
	0x2c67, 0x2c67,
	0x2c69, 0x2c69,
	0x2c6b, 0x2c6b,
	0x2c6d, 0x2c70,
	0x2c72, 0x2c72,
	0x2c75, 0x2c75,
	0x2c7e, 0x2c80,
	0x2c82, 0x2c82,
	0x2c84, 0x2c84,
	0x2c86, 0x2c86,
	0x2c88, 0x2c88,
	0x2c8a, 0x2c8a,
	0x2c8c, 0x2c8c,
	0x2c8e, 0x2c8e,
	0x2c90, 0x2c90,
	0x2c92, 0x2c92,
	0x2c94, 0x2c94,
	0x2c96, 0x2c96,
	0x2c98, 0x2c98,
	0x2c9a, 0x2c9a,
	0x2c9c, 0x2c9c,
	0x2c9e, 0x2c9e,
	0x2ca0, 0x2ca0,
	0x2ca2, 0x2ca2,
	0x2ca4, 0x2ca4,
	0x2ca6, 0x2ca6,
	0x2ca8, 0x2ca8,
	0x2caa, 0x2caa,
	0x2cac, 0x2cac,
	0x2cae, 0x2cae,
	0x2cb0, 0x2cb0,
	0x2cb2, 0x2cb2,
	0x2cb4, 0x2cb4,
	0x2cb6, 0x2cb6,
	0x2cb8, 0x2cb8,
	0x2cba, 0x2cba,
	0x2cbc, 0x2cbc,
	0x2cbe, 0x2cbe,
	0x2cc0, 0x2cc0,
	0x2cc2, 0x2cc2,
	0x2cc4, 0x2cc4,
	0x2cc6, 0x2cc6,
	0x2cc8, 0x2cc8,
	0x2cca, 0x2cca,
	0x2ccc, 0x2ccc,
	0x2cce, 0x2cce,
	0x2cd0, 0x2cd0,
	0x2cd2, 0x2cd2,
	0x2cd4, 0x2cd4,
	0x2cd6, 0x2cd6,
	0x2cd8, 0x2cd8,
	0x2cda, 0x2cda,
	0x2cdc, 0x2cdc,
	0x2cde, 0x2cde,
	0x2ce0, 0x2ce0,
	0x2ce2, 0x2ce2,
	0x2ceb, 0x2ceb,
	0x2ced, 0x2ced,
	0x2cf2, 0x2cf2,
	0xa640, 0xa640,
	0xa642, 0xa642,
	0xa644, 0xa644,
	0xa646, 0xa646,
	0xa648, 0xa648,
	0xa64a, 0xa64a,
	0xa64c, 0xa64c,
	0xa64e, 0xa64e,
	0xa650, 0xa650,
	0xa652, 0xa652,
	0xa654, 0xa654,
	0xa656, 0xa656,
	0xa658, 0xa658,
	0xa65a, 0xa65a,
	0xa65c, 0xa65c,
	0xa65e, 0xa65e,
	0xa660, 0xa660,
	0xa662, 0xa662,
	0xa664, 0xa664,
	0xa666, 0xa666,
	0xa668, 0xa668,
	0xa66a, 0xa66a,
	0xa66c, 0xa66c,
	0xa680, 0xa680,
	0xa682, 0xa682,
	0xa684, 0xa684,
	0xa686, 0xa686,
	0xa688, 0xa688,
	0xa68a, 0xa68a,
	0xa68c, 0xa68c,
	0xa68e, 0xa68e,
	0xa690, 0xa690,
	0xa692, 0xa692,
	0xa694, 0xa694,
	0xa696, 0xa696,
	0xa698, 0xa698,
	0xa69a, 0xa69a,
	0xa722, 0xa722,
	0xa724, 0xa724,
	0xa726, 0xa726,
	0xa728, 0xa728,
	0xa72a, 0xa72a,
	0xa72c, 0xa72c,
	0xa72e, 0xa72e,
	0xa732, 0xa732,
	0xa734, 0xa734,
	0xa736, 0xa736,
	0xa738, 0xa738,
	0xa73a, 0xa73a,
	0xa73c, 0xa73c,
	0xa73e, 0xa73e,
	0xa740, 0xa740,
	0xa742, 0xa742,
	0xa744, 0xa744,
	0xa746, 0xa746,
	0xa748, 0xa748,
	0xa74a, 0xa74a,
	0xa74c, 0xa74c,
	0xa74e, 0xa74e,
	0xa750, 0xa750,
	0xa752, 0xa752,
	0xa754, 0xa754,
	0xa756, 0xa756,
	0xa758, 0xa758,
	0xa75a, 0xa75a,
	0xa75c, 0xa75c,
	0xa75e, 0xa75e,
	0xa760, 0xa760,
	0xa762, 0xa762,
	0xa764, 0xa764,
	0xa766, 0xa766,
	0xa768, 0xa768,
	0xa76a, 0xa76a,
	0xa76c, 0xa76c,
	0xa76e, 0xa76e,
	0xa779, 0xa779,
	0xa77b, 0xa77b,
	0xa77d, 0xa77e,
	0xa780, 0xa780,
	0xa782, 0xa782,
	0xa784, 0xa784,
	0xa786, 0xa786,
	0xa78b, 0xa78b,
	0xa78d, 0xa78d,
	0xa790, 0xa790,
	0xa792, 0xa792,
	0xa796, 0xa796,
	0xa798, 0xa798,
	0xa79a, 0xa79a,
	0xa79c, 0xa79c,
	0xa79e, 0xa79e,
	0xa7a0, 0xa7a0,
	0xa7a2, 0xa7a2,
	0xa7a4, 0xa7a4,
	0xa7a6, 0xa7a6,
	0xa7a8, 0xa7a8,
	0xa7aa, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xff21, 0xff3a,
	0x10400, 0x10427,
	0x118a0, 0x118bf,
}; /* CR_Changes_When_Lowercased */

/* 'Changes_When_Uppercased': Derived Property */
static const OnigCodePoint CR_Changes_When_Uppercased[] = {
	599,
	0x0061, 0x007a,
	0x00b5, 0x00b5,
	0x00df, 0x00f6,
	0x00f8, 0x00ff,
	0x0101, 0x0101,
	0x0103, 0x0103,
	0x0105, 0x0105,
	0x0107, 0x0107,
	0x0109, 0x0109,
	0x010b, 0x010b,
	0x010d, 0x010d,
	0x010f, 0x010f,
	0x0111, 0x0111,
	0x0113, 0x0113,
	0x0115, 0x0115,
	0x0117, 0x0117,
	0x0119, 0x0119,
	0x011b, 0x011b,
	0x011d, 0x011d,
	0x011f, 0x011f,
	0x0121, 0x0121,
	0x0123, 0x0123,
	0x0125, 0x0125,
	0x0127, 0x0127,
	0x0129, 0x0129,
	0x012b, 0x012b,
	0x012d, 0x012d,
	0x012f, 0x012f,
	0x0131, 0x0131,
	0x0133, 0x0133,
	0x0135, 0x0135,
	0x0137, 0x0137,
	0x013a, 0x013a,
	0x013c, 0x013c,
	0x013e, 0x013e,
	0x0140, 0x0140,
	0x0142, 0x0142,
	0x0144, 0x0144,
	0x0146, 0x0146,
	0x0148, 0x0149,
	0x014b, 0x014b,
	0x014d, 0x014d,
	0x014f, 0x014f,
	0x0151, 0x0151,
	0x0153, 0x0153,
	0x0155, 0x0155,
	0x0157, 0x0157,
	0x0159, 0x0159,
	0x015b, 0x015b,
	0x015d, 0x015d,
	0x015f, 0x015f,
	0x0161, 0x0161,
	0x0163, 0x0163,
	0x0165, 0x0165,
	0x0167, 0x0167,
	0x0169, 0x0169,
	0x016b, 0x016b,
	0x016d, 0x016d,
	0x016f, 0x016f,
	0x0171, 0x0171,
	0x0173, 0x0173,
	0x0175, 0x0175,
	0x0177, 0x0177,
	0x017a, 0x017a,
	0x017c, 0x017c,
	0x017e, 0x0180,
	0x0183, 0x0183,
	0x0185, 0x0185,
	0x0188, 0x0188,
	0x018c, 0x018c,
	0x0192, 0x0192,
	0x0195, 0x0195,
	0x0199, 0x019a,
	0x019e, 0x019e,
	0x01a1, 0x01a1,
	0x01a3, 0x01a3,
	0x01a5, 0x01a5,
	0x01a8, 0x01a8,
	0x01ad, 0x01ad,
	0x01b0, 0x01b0,
	0x01b4, 0x01b4,
	0x01b6, 0x01b6,
	0x01b9, 0x01b9,
	0x01bd, 0x01bd,
	0x01bf, 0x01bf,
	0x01c5, 0x01c6,
	0x01c8, 0x01c9,
	0x01cb, 0x01cc,
	0x01ce, 0x01ce,
	0x01d0, 0x01d0,
	0x01d2, 0x01d2,
	0x01d4, 0x01d4,
	0x01d6, 0x01d6,
	0x01d8, 0x01d8,
	0x01da, 0x01da,
	0x01dc, 0x01dd,
	0x01df, 0x01df,
	0x01e1, 0x01e1,
	0x01e3, 0x01e3,
	0x01e5, 0x01e5,
	0x01e7, 0x01e7,
	0x01e9, 0x01e9,
	0x01eb, 0x01eb,
	0x01ed, 0x01ed,
	0x01ef, 0x01f0,
	0x01f2, 0x01f3,
	0x01f5, 0x01f5,
	0x01f9, 0x01f9,
	0x01fb, 0x01fb,
	0x01fd, 0x01fd,
	0x01ff, 0x01ff,
	0x0201, 0x0201,
	0x0203, 0x0203,
	0x0205, 0x0205,
	0x0207, 0x0207,
	0x0209, 0x0209,
	0x020b, 0x020b,
	0x020d, 0x020d,
	0x020f, 0x020f,
	0x0211, 0x0211,
	0x0213, 0x0213,
	0x0215, 0x0215,
	0x0217, 0x0217,
	0x0219, 0x0219,
	0x021b, 0x021b,
	0x021d, 0x021d,
	0x021f, 0x021f,
	0x0223, 0x0223,
	0x0225, 0x0225,
	0x0227, 0x0227,
	0x0229, 0x0229,
	0x022b, 0x022b,
	0x022d, 0x022d,
	0x022f, 0x022f,
	0x0231, 0x0231,
	0x0233, 0x0233,
	0x023c, 0x023c,
	0x023f, 0x0240,
	0x0242, 0x0242,
	0x0247, 0x0247,
	0x0249, 0x0249,
	0x024b, 0x024b,
	0x024d, 0x024d,
	0x024f, 0x0254,
	0x0256, 0x0257,
	0x0259, 0x0259,
	0x025b, 0x025c,
	0x0260, 0x0261,
	0x0263, 0x0263,
	0x0265, 0x0266,
	0x0268, 0x0269,
	0x026b, 0x026c,
	0x026f, 0x026f,
	0x0271, 0x0272,
	0x0275, 0x0275,
	0x027d, 0x027d,
	0x0280, 0x0280,
	0x0283, 0x0283,
	0x0287, 0x028c,
	0x0292, 0x0292,
	0x029e, 0x029e,
	0x0345, 0x0345,
	0x0371, 0x0371,
	0x0373, 0x0373,
	0x0377, 0x0377,
	0x037b, 0x037d,
	0x0390, 0x0390,
	0x03ac, 0x03ce,
	0x03d0, 0x03d1,
	0x03d5, 0x03d7,
	0x03d9, 0x03d9,
	0x03db, 0x03db,
	0x03dd, 0x03dd,
	0x03df, 0x03df,
	0x03e1, 0x03e1,
	0x03e3, 0x03e3,
	0x03e5, 0x03e5,
	0x03e7, 0x03e7,
	0x03e9, 0x03e9,
	0x03eb, 0x03eb,
	0x03ed, 0x03ed,
	0x03ef, 0x03f3,
	0x03f5, 0x03f5,
	0x03f8, 0x03f8,
	0x03fb, 0x03fb,
	0x0430, 0x045f,
	0x0461, 0x0461,
	0x0463, 0x0463,
	0x0465, 0x0465,
	0x0467, 0x0467,
	0x0469, 0x0469,
	0x046b, 0x046b,
	0x046d, 0x046d,
	0x046f, 0x046f,
	0x0471, 0x0471,
	0x0473, 0x0473,
	0x0475, 0x0475,
	0x0477, 0x0477,
	0x0479, 0x0479,
	0x047b, 0x047b,
	0x047d, 0x047d,
	0x047f, 0x047f,
	0x0481, 0x0481,
	0x048b, 0x048b,
	0x048d, 0x048d,
	0x048f, 0x048f,
	0x0491, 0x0491,
	0x0493, 0x0493,
	0x0495, 0x0495,
	0x0497, 0x0497,
	0x0499, 0x0499,
	0x049b, 0x049b,
	0x049d, 0x049d,
	0x049f, 0x049f,
	0x04a1, 0x04a1,
	0x04a3, 0x04a3,
	0x04a5, 0x04a5,
	0x04a7, 0x04a7,
	0x04a9, 0x04a9,
	0x04ab, 0x04ab,
	0x04ad, 0x04ad,
	0x04af, 0x04af,
	0x04b1, 0x04b1,
	0x04b3, 0x04b3,
	0x04b5, 0x04b5,
	0x04b7, 0x04b7,
	0x04b9, 0x04b9,
	0x04bb, 0x04bb,
	0x04bd, 0x04bd,
	0x04bf, 0x04bf,
	0x04c2, 0x04c2,
	0x04c4, 0x04c4,
	0x04c6, 0x04c6,
	0x04c8, 0x04c8,
	0x04ca, 0x04ca,
	0x04cc, 0x04cc,
	0x04ce, 0x04cf,
	0x04d1, 0x04d1,
	0x04d3, 0x04d3,
	0x04d5, 0x04d5,
	0x04d7, 0x04d7,
	0x04d9, 0x04d9,
	0x04db, 0x04db,
	0x04dd, 0x04dd,
	0x04df, 0x04df,
	0x04e1, 0x04e1,
	0x04e3, 0x04e3,
	0x04e5, 0x04e5,
	0x04e7, 0x04e7,
	0x04e9, 0x04e9,
	0x04eb, 0x04eb,
	0x04ed, 0x04ed,
	0x04ef, 0x04ef,
	0x04f1, 0x04f1,
	0x04f3, 0x04f3,
	0x04f5, 0x04f5,
	0x04f7, 0x04f7,
	0x04f9, 0x04f9,
	0x04fb, 0x04fb,
	0x04fd, 0x04fd,
	0x04ff, 0x04ff,
	0x0501, 0x0501,
	0x0503, 0x0503,
	0x0505, 0x0505,
	0x0507, 0x0507,
	0x0509, 0x0509,
	0x050b, 0x050b,
	0x050d, 0x050d,
	0x050f, 0x050f,
	0x0511, 0x0511,
	0x0513, 0x0513,
	0x0515, 0x0515,
	0x0517, 0x0517,
	0x0519, 0x0519,
	0x051b, 0x051b,
	0x051d, 0x051d,
	0x051f, 0x051f,
	0x0521, 0x0521,
	0x0523, 0x0523,
	0x0525, 0x0525,
	0x0527, 0x0527,
	0x0529, 0x0529,
	0x052b, 0x052b,
	0x052d, 0x052d,
	0x052f, 0x052f,
	0x0561, 0x0587,
	0x1d79, 0x1d79,
	0x1d7d, 0x1d7d,
	0x1e01, 0x1e01,
	0x1e03, 0x1e03,
	0x1e05, 0x1e05,
	0x1e07, 0x1e07,
	0x1e09, 0x1e09,
	0x1e0b, 0x1e0b,
	0x1e0d, 0x1e0d,
	0x1e0f, 0x1e0f,
	0x1e11, 0x1e11,
	0x1e13, 0x1e13,
	0x1e15, 0x1e15,
	0x1e17, 0x1e17,
	0x1e19, 0x1e19,
	0x1e1b, 0x1e1b,
	0x1e1d, 0x1e1d,
	0x1e1f, 0x1e1f,
	0x1e21, 0x1e21,
	0x1e23, 0x1e23,
	0x1e25, 0x1e25,
	0x1e27, 0x1e27,
	0x1e29, 0x1e29,
	0x1e2b, 0x1e2b,
	0x1e2d, 0x1e2d,
	0x1e2f, 0x1e2f,
	0x1e31, 0x1e31,
	0x1e33, 0x1e33,
	0x1e35, 0x1e35,
	0x1e37, 0x1e37,
	0x1e39, 0x1e39,
	0x1e3b, 0x1e3b,
	0x1e3d, 0x1e3d,
	0x1e3f, 0x1e3f,
	0x1e41, 0x1e41,
	0x1e43, 0x1e43,
	0x1e45, 0x1e45,
	0x1e47, 0x1e47,
	0x1e49, 0x1e49,
	0x1e4b, 0x1e4b,
	0x1e4d, 0x1e4d,
	0x1e4f, 0x1e4f,
	0x1e51, 0x1e51,
	0x1e53, 0x1e53,
	0x1e55, 0x1e55,
	0x1e57, 0x1e57,
	0x1e59, 0x1e59,
	0x1e5b, 0x1e5b,
	0x1e5d, 0x1e5d,
	0x1e5f, 0x1e5f,
	0x1e61, 0x1e61,
	0x1e63, 0x1e63,
	0x1e65, 0x1e65,
	0x1e67, 0x1e67,
	0x1e69, 0x1e69,
	0x1e6b, 0x1e6b,
	0x1e6d, 0x1e6d,
	0x1e6f, 0x1e6f,
	0x1e71, 0x1e71,
	0x1e73, 0x1e73,
	0x1e75, 0x1e75,
	0x1e77, 0x1e77,
	0x1e79, 0x1e79,
	0x1e7b, 0x1e7b,
	0x1e7d, 0x1e7d,
	0x1e7f, 0x1e7f,
	0x1e81, 0x1e81,
	0x1e83, 0x1e83,
	0x1e85, 0x1e85,
	0x1e87, 0x1e87,
	0x1e89, 0x1e89,
	0x1e8b, 0x1e8b,
	0x1e8d, 0x1e8d,
	0x1e8f, 0x1e8f,
	0x1e91, 0x1e91,
	0x1e93, 0x1e93,
	0x1e95, 0x1e9b,
	0x1ea1, 0x1ea1,
	0x1ea3, 0x1ea3,
	0x1ea5, 0x1ea5,
	0x1ea7, 0x1ea7,
	0x1ea9, 0x1ea9,
	0x1eab, 0x1eab,
	0x1ead, 0x1ead,
	0x1eaf, 0x1eaf,
	0x1eb1, 0x1eb1,
	0x1eb3, 0x1eb3,
	0x1eb5, 0x1eb5,
	0x1eb7, 0x1eb7,
	0x1eb9, 0x1eb9,
	0x1ebb, 0x1ebb,
	0x1ebd, 0x1ebd,
	0x1ebf, 0x1ebf,
	0x1ec1, 0x1ec1,
	0x1ec3, 0x1ec3,
	0x1ec5, 0x1ec5,
	0x1ec7, 0x1ec7,
	0x1ec9, 0x1ec9,
	0x1ecb, 0x1ecb,
	0x1ecd, 0x1ecd,
	0x1ecf, 0x1ecf,
	0x1ed1, 0x1ed1,
	0x1ed3, 0x1ed3,
	0x1ed5, 0x1ed5,
	0x1ed7, 0x1ed7,
	0x1ed9, 0x1ed9,
	0x1edb, 0x1edb,
	0x1edd, 0x1edd,
	0x1edf, 0x1edf,
	0x1ee1, 0x1ee1,
	0x1ee3, 0x1ee3,
	0x1ee5, 0x1ee5,
	0x1ee7, 0x1ee7,
	0x1ee9, 0x1ee9,
	0x1eeb, 0x1eeb,
	0x1eed, 0x1eed,
	0x1eef, 0x1eef,
	0x1ef1, 0x1ef1,
	0x1ef3, 0x1ef3,
	0x1ef5, 0x1ef5,
	0x1ef7, 0x1ef7,
	0x1ef9, 0x1ef9,
	0x1efb, 0x1efb,
	0x1efd, 0x1efd,
	0x1eff, 0x1f07,
	0x1f10, 0x1f15,
	0x1f20, 0x1f27,
	0x1f30, 0x1f37,
	0x1f40, 0x1f45,
	0x1f50, 0x1f57,
	0x1f60, 0x1f67,
	0x1f70, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fb7,
	0x1fbc, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fc7,
	0x1fcc, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fd7,
	0x1fe0, 0x1fe7,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ff7,
	0x1ffc, 0x1ffc,
	0x214e, 0x214e,
	0x2170, 0x217f,
	0x2184, 0x2184,
	0x24d0, 0x24e9,
	0x2c30, 0x2c5e,
	0x2c61, 0x2c61,
	0x2c65, 0x2c66,
	0x2c68, 0x2c68,
	0x2c6a, 0x2c6a,
	0x2c6c, 0x2c6c,
	0x2c73, 0x2c73,
	0x2c76, 0x2c76,
	0x2c81, 0x2c81,
	0x2c83, 0x2c83,
	0x2c85, 0x2c85,
	0x2c87, 0x2c87,
	0x2c89, 0x2c89,
	0x2c8b, 0x2c8b,
	0x2c8d, 0x2c8d,
	0x2c8f, 0x2c8f,
	0x2c91, 0x2c91,
	0x2c93, 0x2c93,
	0x2c95, 0x2c95,
	0x2c97, 0x2c97,
	0x2c99, 0x2c99,
	0x2c9b, 0x2c9b,
	0x2c9d, 0x2c9d,
	0x2c9f, 0x2c9f,
	0x2ca1, 0x2ca1,
	0x2ca3, 0x2ca3,
	0x2ca5, 0x2ca5,
	0x2ca7, 0x2ca7,
	0x2ca9, 0x2ca9,
	0x2cab, 0x2cab,
	0x2cad, 0x2cad,
	0x2caf, 0x2caf,
	0x2cb1, 0x2cb1,
	0x2cb3, 0x2cb3,
	0x2cb5, 0x2cb5,
	0x2cb7, 0x2cb7,
	0x2cb9, 0x2cb9,
	0x2cbb, 0x2cbb,
	0x2cbd, 0x2cbd,
	0x2cbf, 0x2cbf,
	0x2cc1, 0x2cc1,
	0x2cc3, 0x2cc3,
	0x2cc5, 0x2cc5,
	0x2cc7, 0x2cc7,
	0x2cc9, 0x2cc9,
	0x2ccb, 0x2ccb,
	0x2ccd, 0x2ccd,
	0x2ccf, 0x2ccf,
	0x2cd1, 0x2cd1,
	0x2cd3, 0x2cd3,
	0x2cd5, 0x2cd5,
	0x2cd7, 0x2cd7,
	0x2cd9, 0x2cd9,
	0x2cdb, 0x2cdb,
	0x2cdd, 0x2cdd,
	0x2cdf, 0x2cdf,
	0x2ce1, 0x2ce1,
	0x2ce3, 0x2ce3,
	0x2cec, 0x2cec,
	0x2cee, 0x2cee,
	0x2cf3, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0xa641, 0xa641,
	0xa643, 0xa643,
	0xa645, 0xa645,
	0xa647, 0xa647,
	0xa649, 0xa649,
	0xa64b, 0xa64b,
	0xa64d, 0xa64d,
	0xa64f, 0xa64f,
	0xa651, 0xa651,
	0xa653, 0xa653,
	0xa655, 0xa655,
	0xa657, 0xa657,
	0xa659, 0xa659,
	0xa65b, 0xa65b,
	0xa65d, 0xa65d,
	0xa65f, 0xa65f,
	0xa661, 0xa661,
	0xa663, 0xa663,
	0xa665, 0xa665,
	0xa667, 0xa667,
	0xa669, 0xa669,
	0xa66b, 0xa66b,
	0xa66d, 0xa66d,
	0xa681, 0xa681,
	0xa683, 0xa683,
	0xa685, 0xa685,
	0xa687, 0xa687,
	0xa689, 0xa689,
	0xa68b, 0xa68b,
	0xa68d, 0xa68d,
	0xa68f, 0xa68f,
	0xa691, 0xa691,
	0xa693, 0xa693,
	0xa695, 0xa695,
	0xa697, 0xa697,
	0xa699, 0xa699,
	0xa69b, 0xa69b,
	0xa723, 0xa723,
	0xa725, 0xa725,
	0xa727, 0xa727,
	0xa729, 0xa729,
	0xa72b, 0xa72b,
	0xa72d, 0xa72d,
	0xa72f, 0xa72f,
	0xa733, 0xa733,
	0xa735, 0xa735,
	0xa737, 0xa737,
	0xa739, 0xa739,
	0xa73b, 0xa73b,
	0xa73d, 0xa73d,
	0xa73f, 0xa73f,
	0xa741, 0xa741,
	0xa743, 0xa743,
	0xa745, 0xa745,
	0xa747, 0xa747,
	0xa749, 0xa749,
	0xa74b, 0xa74b,
	0xa74d, 0xa74d,
	0xa74f, 0xa74f,
	0xa751, 0xa751,
	0xa753, 0xa753,
	0xa755, 0xa755,
	0xa757, 0xa757,
	0xa759, 0xa759,
	0xa75b, 0xa75b,
	0xa75d, 0xa75d,
	0xa75f, 0xa75f,
	0xa761, 0xa761,
	0xa763, 0xa763,
	0xa765, 0xa765,
	0xa767, 0xa767,
	0xa769, 0xa769,
	0xa76b, 0xa76b,
	0xa76d, 0xa76d,
	0xa76f, 0xa76f,
	0xa77a, 0xa77a,
	0xa77c, 0xa77c,
	0xa77f, 0xa77f,
	0xa781, 0xa781,
	0xa783, 0xa783,
	0xa785, 0xa785,
	0xa787, 0xa787,
	0xa78c, 0xa78c,
	0xa791, 0xa791,
	0xa793, 0xa793,
	0xa797, 0xa797,
	0xa799, 0xa799,
	0xa79b, 0xa79b,
	0xa79d, 0xa79d,
	0xa79f, 0xa79f,
	0xa7a1, 0xa7a1,
	0xa7a3, 0xa7a3,
	0xa7a5, 0xa7a5,
	0xa7a7, 0xa7a7,
	0xa7a9, 0xa7a9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff41, 0xff5a,
	0x10428, 0x1044f,
	0x118c0, 0x118df,
}; /* CR_Changes_When_Uppercased */

/* 'Changes_When_Titlecased': Derived Property */
static const OnigCodePoint CR_Changes_When_Titlecased[] = {
	600,
	0x0061, 0x007a,
	0x00b5, 0x00b5,
	0x00df, 0x00f6,
	0x00f8, 0x00ff,
	0x0101, 0x0101,
	0x0103, 0x0103,
	0x0105, 0x0105,
	0x0107, 0x0107,
	0x0109, 0x0109,
	0x010b, 0x010b,
	0x010d, 0x010d,
	0x010f, 0x010f,
	0x0111, 0x0111,
	0x0113, 0x0113,
	0x0115, 0x0115,
	0x0117, 0x0117,
	0x0119, 0x0119,
	0x011b, 0x011b,
	0x011d, 0x011d,
	0x011f, 0x011f,
	0x0121, 0x0121,
	0x0123, 0x0123,
	0x0125, 0x0125,
	0x0127, 0x0127,
	0x0129, 0x0129,
	0x012b, 0x012b,
	0x012d, 0x012d,
	0x012f, 0x012f,
	0x0131, 0x0131,
	0x0133, 0x0133,
	0x0135, 0x0135,
	0x0137, 0x0137,
	0x013a, 0x013a,
	0x013c, 0x013c,
	0x013e, 0x013e,
	0x0140, 0x0140,
	0x0142, 0x0142,
	0x0144, 0x0144,
	0x0146, 0x0146,
	0x0148, 0x0149,
	0x014b, 0x014b,
	0x014d, 0x014d,
	0x014f, 0x014f,
	0x0151, 0x0151,
	0x0153, 0x0153,
	0x0155, 0x0155,
	0x0157, 0x0157,
	0x0159, 0x0159,
	0x015b, 0x015b,
	0x015d, 0x015d,
	0x015f, 0x015f,
	0x0161, 0x0161,
	0x0163, 0x0163,
	0x0165, 0x0165,
	0x0167, 0x0167,
	0x0169, 0x0169,
	0x016b, 0x016b,
	0x016d, 0x016d,
	0x016f, 0x016f,
	0x0171, 0x0171,
	0x0173, 0x0173,
	0x0175, 0x0175,
	0x0177, 0x0177,
	0x017a, 0x017a,
	0x017c, 0x017c,
	0x017e, 0x0180,
	0x0183, 0x0183,
	0x0185, 0x0185,
	0x0188, 0x0188,
	0x018c, 0x018c,
	0x0192, 0x0192,
	0x0195, 0x0195,
	0x0199, 0x019a,
	0x019e, 0x019e,
	0x01a1, 0x01a1,
	0x01a3, 0x01a3,
	0x01a5, 0x01a5,
	0x01a8, 0x01a8,
	0x01ad, 0x01ad,
	0x01b0, 0x01b0,
	0x01b4, 0x01b4,
	0x01b6, 0x01b6,
	0x01b9, 0x01b9,
	0x01bd, 0x01bd,
	0x01bf, 0x01bf,
	0x01c4, 0x01c4,
	0x01c6, 0x01c7,
	0x01c9, 0x01ca,
	0x01cc, 0x01cc,
	0x01ce, 0x01ce,
	0x01d0, 0x01d0,
	0x01d2, 0x01d2,
	0x01d4, 0x01d4,
	0x01d6, 0x01d6,
	0x01d8, 0x01d8,
	0x01da, 0x01da,
	0x01dc, 0x01dd,
	0x01df, 0x01df,
	0x01e1, 0x01e1,
	0x01e3, 0x01e3,
	0x01e5, 0x01e5,
	0x01e7, 0x01e7,
	0x01e9, 0x01e9,
	0x01eb, 0x01eb,
	0x01ed, 0x01ed,
	0x01ef, 0x01f1,
	0x01f3, 0x01f3,
	0x01f5, 0x01f5,
	0x01f9, 0x01f9,
	0x01fb, 0x01fb,
	0x01fd, 0x01fd,
	0x01ff, 0x01ff,
	0x0201, 0x0201,
	0x0203, 0x0203,
	0x0205, 0x0205,
	0x0207, 0x0207,
	0x0209, 0x0209,
	0x020b, 0x020b,
	0x020d, 0x020d,
	0x020f, 0x020f,
	0x0211, 0x0211,
	0x0213, 0x0213,
	0x0215, 0x0215,
	0x0217, 0x0217,
	0x0219, 0x0219,
	0x021b, 0x021b,
	0x021d, 0x021d,
	0x021f, 0x021f,
	0x0223, 0x0223,
	0x0225, 0x0225,
	0x0227, 0x0227,
	0x0229, 0x0229,
	0x022b, 0x022b,
	0x022d, 0x022d,
	0x022f, 0x022f,
	0x0231, 0x0231,
	0x0233, 0x0233,
	0x023c, 0x023c,
	0x023f, 0x0240,
	0x0242, 0x0242,
	0x0247, 0x0247,
	0x0249, 0x0249,
	0x024b, 0x024b,
	0x024d, 0x024d,
	0x024f, 0x0254,
	0x0256, 0x0257,
	0x0259, 0x0259,
	0x025b, 0x025c,
	0x0260, 0x0261,
	0x0263, 0x0263,
	0x0265, 0x0266,
	0x0268, 0x0269,
	0x026b, 0x026c,
	0x026f, 0x026f,
	0x0271, 0x0272,
	0x0275, 0x0275,
	0x027d, 0x027d,
	0x0280, 0x0280,
	0x0283, 0x0283,
	0x0287, 0x028c,
	0x0292, 0x0292,
	0x029e, 0x029e,
	0x0345, 0x0345,
	0x0371, 0x0371,
	0x0373, 0x0373,
	0x0377, 0x0377,
	0x037b, 0x037d,
	0x0390, 0x0390,
	0x03ac, 0x03ce,
	0x03d0, 0x03d1,
	0x03d5, 0x03d7,
	0x03d9, 0x03d9,
	0x03db, 0x03db,
	0x03dd, 0x03dd,
	0x03df, 0x03df,
	0x03e1, 0x03e1,
	0x03e3, 0x03e3,
	0x03e5, 0x03e5,
	0x03e7, 0x03e7,
	0x03e9, 0x03e9,
	0x03eb, 0x03eb,
	0x03ed, 0x03ed,
	0x03ef, 0x03f3,
	0x03f5, 0x03f5,
	0x03f8, 0x03f8,
	0x03fb, 0x03fb,
	0x0430, 0x045f,
	0x0461, 0x0461,
	0x0463, 0x0463,
	0x0465, 0x0465,
	0x0467, 0x0467,
	0x0469, 0x0469,
	0x046b, 0x046b,
	0x046d, 0x046d,
	0x046f, 0x046f,
	0x0471, 0x0471,
	0x0473, 0x0473,
	0x0475, 0x0475,
	0x0477, 0x0477,
	0x0479, 0x0479,
	0x047b, 0x047b,
	0x047d, 0x047d,
	0x047f, 0x047f,
	0x0481, 0x0481,
	0x048b, 0x048b,
	0x048d, 0x048d,
	0x048f, 0x048f,
	0x0491, 0x0491,
	0x0493, 0x0493,
	0x0495, 0x0495,
	0x0497, 0x0497,
	0x0499, 0x0499,
	0x049b, 0x049b,
	0x049d, 0x049d,
	0x049f, 0x049f,
	0x04a1, 0x04a1,
	0x04a3, 0x04a3,
	0x04a5, 0x04a5,
	0x04a7, 0x04a7,
	0x04a9, 0x04a9,
	0x04ab, 0x04ab,
	0x04ad, 0x04ad,
	0x04af, 0x04af,
	0x04b1, 0x04b1,
	0x04b3, 0x04b3,
	0x04b5, 0x04b5,
	0x04b7, 0x04b7,
	0x04b9, 0x04b9,
	0x04bb, 0x04bb,
	0x04bd, 0x04bd,
	0x04bf, 0x04bf,
	0x04c2, 0x04c2,
	0x04c4, 0x04c4,
	0x04c6, 0x04c6,
	0x04c8, 0x04c8,
	0x04ca, 0x04ca,
	0x04cc, 0x04cc,
	0x04ce, 0x04cf,
	0x04d1, 0x04d1,
	0x04d3, 0x04d3,
	0x04d5, 0x04d5,
	0x04d7, 0x04d7,
	0x04d9, 0x04d9,
	0x04db, 0x04db,
	0x04dd, 0x04dd,
	0x04df, 0x04df,
	0x04e1, 0x04e1,
	0x04e3, 0x04e3,
	0x04e5, 0x04e5,
	0x04e7, 0x04e7,
	0x04e9, 0x04e9,
	0x04eb, 0x04eb,
	0x04ed, 0x04ed,
	0x04ef, 0x04ef,
	0x04f1, 0x04f1,
	0x04f3, 0x04f3,
	0x04f5, 0x04f5,
	0x04f7, 0x04f7,
	0x04f9, 0x04f9,
	0x04fb, 0x04fb,
	0x04fd, 0x04fd,
	0x04ff, 0x04ff,
	0x0501, 0x0501,
	0x0503, 0x0503,
	0x0505, 0x0505,
	0x0507, 0x0507,
	0x0509, 0x0509,
	0x050b, 0x050b,
	0x050d, 0x050d,
	0x050f, 0x050f,
	0x0511, 0x0511,
	0x0513, 0x0513,
	0x0515, 0x0515,
	0x0517, 0x0517,
	0x0519, 0x0519,
	0x051b, 0x051b,
	0x051d, 0x051d,
	0x051f, 0x051f,
	0x0521, 0x0521,
	0x0523, 0x0523,
	0x0525, 0x0525,
	0x0527, 0x0527,
	0x0529, 0x0529,
	0x052b, 0x052b,
	0x052d, 0x052d,
	0x052f, 0x052f,
	0x0561, 0x0587,
	0x1d79, 0x1d79,
	0x1d7d, 0x1d7d,
	0x1e01, 0x1e01,
	0x1e03, 0x1e03,
	0x1e05, 0x1e05,
	0x1e07, 0x1e07,
	0x1e09, 0x1e09,
	0x1e0b, 0x1e0b,
	0x1e0d, 0x1e0d,
	0x1e0f, 0x1e0f,
	0x1e11, 0x1e11,
	0x1e13, 0x1e13,
	0x1e15, 0x1e15,
	0x1e17, 0x1e17,
	0x1e19, 0x1e19,
	0x1e1b, 0x1e1b,
	0x1e1d, 0x1e1d,
	0x1e1f, 0x1e1f,
	0x1e21, 0x1e21,
	0x1e23, 0x1e23,
	0x1e25, 0x1e25,
	0x1e27, 0x1e27,
	0x1e29, 0x1e29,
	0x1e2b, 0x1e2b,
	0x1e2d, 0x1e2d,
	0x1e2f, 0x1e2f,
	0x1e31, 0x1e31,
	0x1e33, 0x1e33,
	0x1e35, 0x1e35,
	0x1e37, 0x1e37,
	0x1e39, 0x1e39,
	0x1e3b, 0x1e3b,
	0x1e3d, 0x1e3d,
	0x1e3f, 0x1e3f,
	0x1e41, 0x1e41,
	0x1e43, 0x1e43,
	0x1e45, 0x1e45,
	0x1e47, 0x1e47,
	0x1e49, 0x1e49,
	0x1e4b, 0x1e4b,
	0x1e4d, 0x1e4d,
	0x1e4f, 0x1e4f,
	0x1e51, 0x1e51,
	0x1e53, 0x1e53,
	0x1e55, 0x1e55,
	0x1e57, 0x1e57,
	0x1e59, 0x1e59,
	0x1e5b, 0x1e5b,
	0x1e5d, 0x1e5d,
	0x1e5f, 0x1e5f,
	0x1e61, 0x1e61,
	0x1e63, 0x1e63,
	0x1e65, 0x1e65,
	0x1e67, 0x1e67,
	0x1e69, 0x1e69,
	0x1e6b, 0x1e6b,
	0x1e6d, 0x1e6d,
	0x1e6f, 0x1e6f,
	0x1e71, 0x1e71,
	0x1e73, 0x1e73,
	0x1e75, 0x1e75,
	0x1e77, 0x1e77,
	0x1e79, 0x1e79,
	0x1e7b, 0x1e7b,
	0x1e7d, 0x1e7d,
	0x1e7f, 0x1e7f,
	0x1e81, 0x1e81,
	0x1e83, 0x1e83,
	0x1e85, 0x1e85,
	0x1e87, 0x1e87,
	0x1e89, 0x1e89,
	0x1e8b, 0x1e8b,
	0x1e8d, 0x1e8d,
	0x1e8f, 0x1e8f,
	0x1e91, 0x1e91,
	0x1e93, 0x1e93,
	0x1e95, 0x1e9b,
	0x1ea1, 0x1ea1,
	0x1ea3, 0x1ea3,
	0x1ea5, 0x1ea5,
	0x1ea7, 0x1ea7,
	0x1ea9, 0x1ea9,
	0x1eab, 0x1eab,
	0x1ead, 0x1ead,
	0x1eaf, 0x1eaf,
	0x1eb1, 0x1eb1,
	0x1eb3, 0x1eb3,
	0x1eb5, 0x1eb5,
	0x1eb7, 0x1eb7,
	0x1eb9, 0x1eb9,
	0x1ebb, 0x1ebb,
	0x1ebd, 0x1ebd,
	0x1ebf, 0x1ebf,
	0x1ec1, 0x1ec1,
	0x1ec3, 0x1ec3,
	0x1ec5, 0x1ec5,
	0x1ec7, 0x1ec7,
	0x1ec9, 0x1ec9,
	0x1ecb, 0x1ecb,
	0x1ecd, 0x1ecd,
	0x1ecf, 0x1ecf,
	0x1ed1, 0x1ed1,
	0x1ed3, 0x1ed3,
	0x1ed5, 0x1ed5,
	0x1ed7, 0x1ed7,
	0x1ed9, 0x1ed9,
	0x1edb, 0x1edb,
	0x1edd, 0x1edd,
	0x1edf, 0x1edf,
	0x1ee1, 0x1ee1,
	0x1ee3, 0x1ee3,
	0x1ee5, 0x1ee5,
	0x1ee7, 0x1ee7,
	0x1ee9, 0x1ee9,
	0x1eeb, 0x1eeb,
	0x1eed, 0x1eed,
	0x1eef, 0x1eef,
	0x1ef1, 0x1ef1,
	0x1ef3, 0x1ef3,
	0x1ef5, 0x1ef5,
	0x1ef7, 0x1ef7,
	0x1ef9, 0x1ef9,
	0x1efb, 0x1efb,
	0x1efd, 0x1efd,
	0x1eff, 0x1f07,
	0x1f10, 0x1f15,
	0x1f20, 0x1f27,
	0x1f30, 0x1f37,
	0x1f40, 0x1f45,
	0x1f50, 0x1f57,
	0x1f60, 0x1f67,
	0x1f70, 0x1f7d,
	0x1f80, 0x1f87,
	0x1f90, 0x1f97,
	0x1fa0, 0x1fa7,
	0x1fb0, 0x1fb4,
	0x1fb6, 0x1fb7,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fc7,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fd7,
	0x1fe0, 0x1fe7,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ff7,
	0x214e, 0x214e,
	0x2170, 0x217f,
	0x2184, 0x2184,
	0x24d0, 0x24e9,
	0x2c30, 0x2c5e,
	0x2c61, 0x2c61,
	0x2c65, 0x2c66,
	0x2c68, 0x2c68,
	0x2c6a, 0x2c6a,
	0x2c6c, 0x2c6c,
	0x2c73, 0x2c73,
	0x2c76, 0x2c76,
	0x2c81, 0x2c81,
	0x2c83, 0x2c83,
	0x2c85, 0x2c85,
	0x2c87, 0x2c87,
	0x2c89, 0x2c89,
	0x2c8b, 0x2c8b,
	0x2c8d, 0x2c8d,
	0x2c8f, 0x2c8f,
	0x2c91, 0x2c91,
	0x2c93, 0x2c93,
	0x2c95, 0x2c95,
	0x2c97, 0x2c97,
	0x2c99, 0x2c99,
	0x2c9b, 0x2c9b,
	0x2c9d, 0x2c9d,
	0x2c9f, 0x2c9f,
	0x2ca1, 0x2ca1,
	0x2ca3, 0x2ca3,
	0x2ca5, 0x2ca5,
	0x2ca7, 0x2ca7,
	0x2ca9, 0x2ca9,
	0x2cab, 0x2cab,
	0x2cad, 0x2cad,
	0x2caf, 0x2caf,
	0x2cb1, 0x2cb1,
	0x2cb3, 0x2cb3,
	0x2cb5, 0x2cb5,
	0x2cb7, 0x2cb7,
	0x2cb9, 0x2cb9,
	0x2cbb, 0x2cbb,
	0x2cbd, 0x2cbd,
	0x2cbf, 0x2cbf,
	0x2cc1, 0x2cc1,
	0x2cc3, 0x2cc3,
	0x2cc5, 0x2cc5,
	0x2cc7, 0x2cc7,
	0x2cc9, 0x2cc9,
	0x2ccb, 0x2ccb,
	0x2ccd, 0x2ccd,
	0x2ccf, 0x2ccf,
	0x2cd1, 0x2cd1,
	0x2cd3, 0x2cd3,
	0x2cd5, 0x2cd5,
	0x2cd7, 0x2cd7,
	0x2cd9, 0x2cd9,
	0x2cdb, 0x2cdb,
	0x2cdd, 0x2cdd,
	0x2cdf, 0x2cdf,
	0x2ce1, 0x2ce1,
	0x2ce3, 0x2ce3,
	0x2cec, 0x2cec,
	0x2cee, 0x2cee,
	0x2cf3, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0xa641, 0xa641,
	0xa643, 0xa643,
	0xa645, 0xa645,
	0xa647, 0xa647,
	0xa649, 0xa649,
	0xa64b, 0xa64b,
	0xa64d, 0xa64d,
	0xa64f, 0xa64f,
	0xa651, 0xa651,
	0xa653, 0xa653,
	0xa655, 0xa655,
	0xa657, 0xa657,
	0xa659, 0xa659,
	0xa65b, 0xa65b,
	0xa65d, 0xa65d,
	0xa65f, 0xa65f,
	0xa661, 0xa661,
	0xa663, 0xa663,
	0xa665, 0xa665,
	0xa667, 0xa667,
	0xa669, 0xa669,
	0xa66b, 0xa66b,
	0xa66d, 0xa66d,
	0xa681, 0xa681,
	0xa683, 0xa683,
	0xa685, 0xa685,
	0xa687, 0xa687,
	0xa689, 0xa689,
	0xa68b, 0xa68b,
	0xa68d, 0xa68d,
	0xa68f, 0xa68f,
	0xa691, 0xa691,
	0xa693, 0xa693,
	0xa695, 0xa695,
	0xa697, 0xa697,
	0xa699, 0xa699,
	0xa69b, 0xa69b,
	0xa723, 0xa723,
	0xa725, 0xa725,
	0xa727, 0xa727,
	0xa729, 0xa729,
	0xa72b, 0xa72b,
	0xa72d, 0xa72d,
	0xa72f, 0xa72f,
	0xa733, 0xa733,
	0xa735, 0xa735,
	0xa737, 0xa737,
	0xa739, 0xa739,
	0xa73b, 0xa73b,
	0xa73d, 0xa73d,
	0xa73f, 0xa73f,
	0xa741, 0xa741,
	0xa743, 0xa743,
	0xa745, 0xa745,
	0xa747, 0xa747,
	0xa749, 0xa749,
	0xa74b, 0xa74b,
	0xa74d, 0xa74d,
	0xa74f, 0xa74f,
	0xa751, 0xa751,
	0xa753, 0xa753,
	0xa755, 0xa755,
	0xa757, 0xa757,
	0xa759, 0xa759,
	0xa75b, 0xa75b,
	0xa75d, 0xa75d,
	0xa75f, 0xa75f,
	0xa761, 0xa761,
	0xa763, 0xa763,
	0xa765, 0xa765,
	0xa767, 0xa767,
	0xa769, 0xa769,
	0xa76b, 0xa76b,
	0xa76d, 0xa76d,
	0xa76f, 0xa76f,
	0xa77a, 0xa77a,
	0xa77c, 0xa77c,
	0xa77f, 0xa77f,
	0xa781, 0xa781,
	0xa783, 0xa783,
	0xa785, 0xa785,
	0xa787, 0xa787,
	0xa78c, 0xa78c,
	0xa791, 0xa791,
	0xa793, 0xa793,
	0xa797, 0xa797,
	0xa799, 0xa799,
	0xa79b, 0xa79b,
	0xa79d, 0xa79d,
	0xa79f, 0xa79f,
	0xa7a1, 0xa7a1,
	0xa7a3, 0xa7a3,
	0xa7a5, 0xa7a5,
	0xa7a7, 0xa7a7,
	0xa7a9, 0xa7a9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff41, 0xff5a,
	0x10428, 0x1044f,
	0x118c0, 0x118df,
}; /* CR_Changes_When_Titlecased */

/* 'Changes_When_Casefolded': Derived Property */
static const OnigCodePoint CR_Changes_When_Casefolded[] = {
	596,
	0x0041, 0x005a,
	0x00b5, 0x00b5,
	0x00c0, 0x00d6,
	0x00d8, 0x00df,
	0x0100, 0x0100,
	0x0102, 0x0102,
	0x0104, 0x0104,
	0x0106, 0x0106,
	0x0108, 0x0108,
	0x010a, 0x010a,
	0x010c, 0x010c,
	0x010e, 0x010e,
	0x0110, 0x0110,
	0x0112, 0x0112,
	0x0114, 0x0114,
	0x0116, 0x0116,
	0x0118, 0x0118,
	0x011a, 0x011a,
	0x011c, 0x011c,
	0x011e, 0x011e,
	0x0120, 0x0120,
	0x0122, 0x0122,
	0x0124, 0x0124,
	0x0126, 0x0126,
	0x0128, 0x0128,
	0x012a, 0x012a,
	0x012c, 0x012c,
	0x012e, 0x012e,
	0x0130, 0x0130,
	0x0132, 0x0132,
	0x0134, 0x0134,
	0x0136, 0x0136,
	0x0139, 0x0139,
	0x013b, 0x013b,
	0x013d, 0x013d,
	0x013f, 0x013f,
	0x0141, 0x0141,
	0x0143, 0x0143,
	0x0145, 0x0145,
	0x0147, 0x0147,
	0x0149, 0x014a,
	0x014c, 0x014c,
	0x014e, 0x014e,
	0x0150, 0x0150,
	0x0152, 0x0152,
	0x0154, 0x0154,
	0x0156, 0x0156,
	0x0158, 0x0158,
	0x015a, 0x015a,
	0x015c, 0x015c,
	0x015e, 0x015e,
	0x0160, 0x0160,
	0x0162, 0x0162,
	0x0164, 0x0164,
	0x0166, 0x0166,
	0x0168, 0x0168,
	0x016a, 0x016a,
	0x016c, 0x016c,
	0x016e, 0x016e,
	0x0170, 0x0170,
	0x0172, 0x0172,
	0x0174, 0x0174,
	0x0176, 0x0176,
	0x0178, 0x0179,
	0x017b, 0x017b,
	0x017d, 0x017d,
	0x017f, 0x017f,
	0x0181, 0x0182,
	0x0184, 0x0184,
	0x0186, 0x0187,
	0x0189, 0x018b,
	0x018e, 0x0191,
	0x0193, 0x0194,
	0x0196, 0x0198,
	0x019c, 0x019d,
	0x019f, 0x01a0,
	0x01a2, 0x01a2,
	0x01a4, 0x01a4,
	0x01a6, 0x01a7,
	0x01a9, 0x01a9,
	0x01ac, 0x01ac,
	0x01ae, 0x01af,
	0x01b1, 0x01b3,
	0x01b5, 0x01b5,
	0x01b7, 0x01b8,
	0x01bc, 0x01bc,
	0x01c4, 0x01c5,
	0x01c7, 0x01c8,
	0x01ca, 0x01cb,
	0x01cd, 0x01cd,
	0x01cf, 0x01cf,
	0x01d1, 0x01d1,
	0x01d3, 0x01d3,
	0x01d5, 0x01d5,
	0x01d7, 0x01d7,
	0x01d9, 0x01d9,
	0x01db, 0x01db,
	0x01de, 0x01de,
	0x01e0, 0x01e0,
	0x01e2, 0x01e2,
	0x01e4, 0x01e4,
	0x01e6, 0x01e6,
	0x01e8, 0x01e8,
	0x01ea, 0x01ea,
	0x01ec, 0x01ec,
	0x01ee, 0x01ee,
	0x01f1, 0x01f2,
	0x01f4, 0x01f4,
	0x01f6, 0x01f8,
	0x01fa, 0x01fa,
	0x01fc, 0x01fc,
	0x01fe, 0x01fe,
	0x0200, 0x0200,
	0x0202, 0x0202,
	0x0204, 0x0204,
	0x0206, 0x0206,
	0x0208, 0x0208,
	0x020a, 0x020a,
	0x020c, 0x020c,
	0x020e, 0x020e,
	0x0210, 0x0210,
	0x0212, 0x0212,
	0x0214, 0x0214,
	0x0216, 0x0216,
	0x0218, 0x0218,
	0x021a, 0x021a,
	0x021c, 0x021c,
	0x021e, 0x021e,
	0x0220, 0x0220,
	0x0222, 0x0222,
	0x0224, 0x0224,
	0x0226, 0x0226,
	0x0228, 0x0228,
	0x022a, 0x022a,
	0x022c, 0x022c,
	0x022e, 0x022e,
	0x0230, 0x0230,
	0x0232, 0x0232,
	0x023a, 0x023b,
	0x023d, 0x023e,
	0x0241, 0x0241,
	0x0243, 0x0246,
	0x0248, 0x0248,
	0x024a, 0x024a,
	0x024c, 0x024c,
	0x024e, 0x024e,
	0x0345, 0x0345,
	0x0370, 0x0370,
	0x0372, 0x0372,
	0x0376, 0x0376,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x038f,
	0x0391, 0x03a1,
	0x03a3, 0x03ab,
	0x03c2, 0x03c2,
	0x03cf, 0x03d1,
	0x03d5, 0x03d6,
	0x03d8, 0x03d8,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03e2,
	0x03e4, 0x03e4,
	0x03e6, 0x03e6,
	0x03e8, 0x03e8,
	0x03ea, 0x03ea,
	0x03ec, 0x03ec,
	0x03ee, 0x03ee,
	0x03f0, 0x03f1,
	0x03f4, 0x03f5,
	0x03f7, 0x03f7,
	0x03f9, 0x03fa,
	0x03fd, 0x042f,
	0x0460, 0x0460,
	0x0462, 0x0462,
	0x0464, 0x0464,
	0x0466, 0x0466,
	0x0468, 0x0468,
	0x046a, 0x046a,
	0x046c, 0x046c,
	0x046e, 0x046e,
	0x0470, 0x0470,
	0x0472, 0x0472,
	0x0474, 0x0474,
	0x0476, 0x0476,
	0x0478, 0x0478,
	0x047a, 0x047a,
	0x047c, 0x047c,
	0x047e, 0x047e,
	0x0480, 0x0480,
	0x048a, 0x048a,
	0x048c, 0x048c,
	0x048e, 0x048e,
	0x0490, 0x0490,
	0x0492, 0x0492,
	0x0494, 0x0494,
	0x0496, 0x0496,
	0x0498, 0x0498,
	0x049a, 0x049a,
	0x049c, 0x049c,
	0x049e, 0x049e,
	0x04a0, 0x04a0,
	0x04a2, 0x04a2,
	0x04a4, 0x04a4,
	0x04a6, 0x04a6,
	0x04a8, 0x04a8,
	0x04aa, 0x04aa,
	0x04ac, 0x04ac,
	0x04ae, 0x04ae,
	0x04b0, 0x04b0,
	0x04b2, 0x04b2,
	0x04b4, 0x04b4,
	0x04b6, 0x04b6,
	0x04b8, 0x04b8,
	0x04ba, 0x04ba,
	0x04bc, 0x04bc,
	0x04be, 0x04be,
	0x04c0, 0x04c1,
	0x04c3, 0x04c3,
	0x04c5, 0x04c5,
	0x04c7, 0x04c7,
	0x04c9, 0x04c9,
	0x04cb, 0x04cb,
	0x04cd, 0x04cd,
	0x04d0, 0x04d0,
	0x04d2, 0x04d2,
	0x04d4, 0x04d4,
	0x04d6, 0x04d6,
	0x04d8, 0x04d8,
	0x04da, 0x04da,
	0x04dc, 0x04dc,
	0x04de, 0x04de,
	0x04e0, 0x04e0,
	0x04e2, 0x04e2,
	0x04e4, 0x04e4,
	0x04e6, 0x04e6,
	0x04e8, 0x04e8,
	0x04ea, 0x04ea,
	0x04ec, 0x04ec,
	0x04ee, 0x04ee,
	0x04f0, 0x04f0,
	0x04f2, 0x04f2,
	0x04f4, 0x04f4,
	0x04f6, 0x04f6,
	0x04f8, 0x04f8,
	0x04fa, 0x04fa,
	0x04fc, 0x04fc,
	0x04fe, 0x04fe,
	0x0500, 0x0500,
	0x0502, 0x0502,
	0x0504, 0x0504,
	0x0506, 0x0506,
	0x0508, 0x0508,
	0x050a, 0x050a,
	0x050c, 0x050c,
	0x050e, 0x050e,
	0x0510, 0x0510,
	0x0512, 0x0512,
	0x0514, 0x0514,
	0x0516, 0x0516,
	0x0518, 0x0518,
	0x051a, 0x051a,
	0x051c, 0x051c,
	0x051e, 0x051e,
	0x0520, 0x0520,
	0x0522, 0x0522,
	0x0524, 0x0524,
	0x0526, 0x0526,
	0x0528, 0x0528,
	0x052a, 0x052a,
	0x052c, 0x052c,
	0x052e, 0x052e,
	0x0531, 0x0556,
	0x0587, 0x0587,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x1e00, 0x1e00,
	0x1e02, 0x1e02,
	0x1e04, 0x1e04,
	0x1e06, 0x1e06,
	0x1e08, 0x1e08,
	0x1e0a, 0x1e0a,
	0x1e0c, 0x1e0c,
	0x1e0e, 0x1e0e,
	0x1e10, 0x1e10,
	0x1e12, 0x1e12,
	0x1e14, 0x1e14,
	0x1e16, 0x1e16,
	0x1e18, 0x1e18,
	0x1e1a, 0x1e1a,
	0x1e1c, 0x1e1c,
	0x1e1e, 0x1e1e,
	0x1e20, 0x1e20,
	0x1e22, 0x1e22,
	0x1e24, 0x1e24,
	0x1e26, 0x1e26,
	0x1e28, 0x1e28,
	0x1e2a, 0x1e2a,
	0x1e2c, 0x1e2c,
	0x1e2e, 0x1e2e,
	0x1e30, 0x1e30,
	0x1e32, 0x1e32,
	0x1e34, 0x1e34,
	0x1e36, 0x1e36,
	0x1e38, 0x1e38,
	0x1e3a, 0x1e3a,
	0x1e3c, 0x1e3c,
	0x1e3e, 0x1e3e,
	0x1e40, 0x1e40,
	0x1e42, 0x1e42,
	0x1e44, 0x1e44,
	0x1e46, 0x1e46,
	0x1e48, 0x1e48,
	0x1e4a, 0x1e4a,
	0x1e4c, 0x1e4c,
	0x1e4e, 0x1e4e,
	0x1e50, 0x1e50,
	0x1e52, 0x1e52,
	0x1e54, 0x1e54,
	0x1e56, 0x1e56,
	0x1e58, 0x1e58,
	0x1e5a, 0x1e5a,
	0x1e5c, 0x1e5c,
	0x1e5e, 0x1e5e,
	0x1e60, 0x1e60,
	0x1e62, 0x1e62,
	0x1e64, 0x1e64,
	0x1e66, 0x1e66,
	0x1e68, 0x1e68,
	0x1e6a, 0x1e6a,
	0x1e6c, 0x1e6c,
	0x1e6e, 0x1e6e,
	0x1e70, 0x1e70,
	0x1e72, 0x1e72,
	0x1e74, 0x1e74,
	0x1e76, 0x1e76,
	0x1e78, 0x1e78,
	0x1e7a, 0x1e7a,
	0x1e7c, 0x1e7c,
	0x1e7e, 0x1e7e,
	0x1e80, 0x1e80,
	0x1e82, 0x1e82,
	0x1e84, 0x1e84,
	0x1e86, 0x1e86,
	0x1e88, 0x1e88,
	0x1e8a, 0x1e8a,
	0x1e8c, 0x1e8c,
	0x1e8e, 0x1e8e,
	0x1e90, 0x1e90,
	0x1e92, 0x1e92,
	0x1e94, 0x1e94,
	0x1e9a, 0x1e9b,
	0x1e9e, 0x1e9e,
	0x1ea0, 0x1ea0,
	0x1ea2, 0x1ea2,
	0x1ea4, 0x1ea4,
	0x1ea6, 0x1ea6,
	0x1ea8, 0x1ea8,
	0x1eaa, 0x1eaa,
	0x1eac, 0x1eac,
	0x1eae, 0x1eae,
	0x1eb0, 0x1eb0,
	0x1eb2, 0x1eb2,
	0x1eb4, 0x1eb4,
	0x1eb6, 0x1eb6,
	0x1eb8, 0x1eb8,
	0x1eba, 0x1eba,
	0x1ebc, 0x1ebc,
	0x1ebe, 0x1ebe,
	0x1ec0, 0x1ec0,
	0x1ec2, 0x1ec2,
	0x1ec4, 0x1ec4,
	0x1ec6, 0x1ec6,
	0x1ec8, 0x1ec8,
	0x1eca, 0x1eca,
	0x1ecc, 0x1ecc,
	0x1ece, 0x1ece,
	0x1ed0, 0x1ed0,
	0x1ed2, 0x1ed2,
	0x1ed4, 0x1ed4,
	0x1ed6, 0x1ed6,
	0x1ed8, 0x1ed8,
	0x1eda, 0x1eda,
	0x1edc, 0x1edc,
	0x1ede, 0x1ede,
	0x1ee0, 0x1ee0,
	0x1ee2, 0x1ee2,
	0x1ee4, 0x1ee4,
	0x1ee6, 0x1ee6,
	0x1ee8, 0x1ee8,
	0x1eea, 0x1eea,
	0x1eec, 0x1eec,
	0x1eee, 0x1eee,
	0x1ef0, 0x1ef0,
	0x1ef2, 0x1ef2,
	0x1ef4, 0x1ef4,
	0x1ef6, 0x1ef6,
	0x1ef8, 0x1ef8,
	0x1efa, 0x1efa,
	0x1efc, 0x1efc,
	0x1efe, 0x1efe,
	0x1f08, 0x1f0f,
	0x1f18, 0x1f1d,
	0x1f28, 0x1f2f,
	0x1f38, 0x1f3f,
	0x1f48, 0x1f4d,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f5f,
	0x1f68, 0x1f6f,
	0x1f80, 0x1faf,
	0x1fb2, 0x1fb4,
	0x1fb7, 0x1fbc,
	0x1fc2, 0x1fc4,
	0x1fc7, 0x1fcc,
	0x1fd8, 0x1fdb,
	0x1fe8, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff7, 0x1ffc,
	0x2126, 0x2126,
	0x212a, 0x212b,
	0x2132, 0x2132,
	0x2160, 0x216f,
	0x2183, 0x2183,
	0x24b6, 0x24cf,
	0x2c00, 0x2c2e,
	0x2c60, 0x2c60,
	0x2c62, 0x2c64,
	0x2c67, 0x2c67,
	0x2c69, 0x2c69,
	0x2c6b, 0x2c6b,
	0x2c6d, 0x2c70,
	0x2c72, 0x2c72,
	0x2c75, 0x2c75,
	0x2c7e, 0x2c80,
	0x2c82, 0x2c82,
	0x2c84, 0x2c84,
	0x2c86, 0x2c86,
	0x2c88, 0x2c88,
	0x2c8a, 0x2c8a,
	0x2c8c, 0x2c8c,
	0x2c8e, 0x2c8e,
	0x2c90, 0x2c90,
	0x2c92, 0x2c92,
	0x2c94, 0x2c94,
	0x2c96, 0x2c96,
	0x2c98, 0x2c98,
	0x2c9a, 0x2c9a,
	0x2c9c, 0x2c9c,
	0x2c9e, 0x2c9e,
	0x2ca0, 0x2ca0,
	0x2ca2, 0x2ca2,
	0x2ca4, 0x2ca4,
	0x2ca6, 0x2ca6,
	0x2ca8, 0x2ca8,
	0x2caa, 0x2caa,
	0x2cac, 0x2cac,
	0x2cae, 0x2cae,
	0x2cb0, 0x2cb0,
	0x2cb2, 0x2cb2,
	0x2cb4, 0x2cb4,
	0x2cb6, 0x2cb6,
	0x2cb8, 0x2cb8,
	0x2cba, 0x2cba,
	0x2cbc, 0x2cbc,
	0x2cbe, 0x2cbe,
	0x2cc0, 0x2cc0,
	0x2cc2, 0x2cc2,
	0x2cc4, 0x2cc4,
	0x2cc6, 0x2cc6,
	0x2cc8, 0x2cc8,
	0x2cca, 0x2cca,
	0x2ccc, 0x2ccc,
	0x2cce, 0x2cce,
	0x2cd0, 0x2cd0,
	0x2cd2, 0x2cd2,
	0x2cd4, 0x2cd4,
	0x2cd6, 0x2cd6,
	0x2cd8, 0x2cd8,
	0x2cda, 0x2cda,
	0x2cdc, 0x2cdc,
	0x2cde, 0x2cde,
	0x2ce0, 0x2ce0,
	0x2ce2, 0x2ce2,
	0x2ceb, 0x2ceb,
	0x2ced, 0x2ced,
	0x2cf2, 0x2cf2,
	0xa640, 0xa640,
	0xa642, 0xa642,
	0xa644, 0xa644,
	0xa646, 0xa646,
	0xa648, 0xa648,
	0xa64a, 0xa64a,
	0xa64c, 0xa64c,
	0xa64e, 0xa64e,
	0xa650, 0xa650,
	0xa652, 0xa652,
	0xa654, 0xa654,
	0xa656, 0xa656,
	0xa658, 0xa658,
	0xa65a, 0xa65a,
	0xa65c, 0xa65c,
	0xa65e, 0xa65e,
	0xa660, 0xa660,
	0xa662, 0xa662,
	0xa664, 0xa664,
	0xa666, 0xa666,
	0xa668, 0xa668,
	0xa66a, 0xa66a,
	0xa66c, 0xa66c,
	0xa680, 0xa680,
	0xa682, 0xa682,
	0xa684, 0xa684,
	0xa686, 0xa686,
	0xa688, 0xa688,
	0xa68a, 0xa68a,
	0xa68c, 0xa68c,
	0xa68e, 0xa68e,
	0xa690, 0xa690,
	0xa692, 0xa692,
	0xa694, 0xa694,
	0xa696, 0xa696,
	0xa698, 0xa698,
	0xa69a, 0xa69a,
	0xa722, 0xa722,
	0xa724, 0xa724,
	0xa726, 0xa726,
	0xa728, 0xa728,
	0xa72a, 0xa72a,
	0xa72c, 0xa72c,
	0xa72e, 0xa72e,
	0xa732, 0xa732,
	0xa734, 0xa734,
	0xa736, 0xa736,
	0xa738, 0xa738,
	0xa73a, 0xa73a,
	0xa73c, 0xa73c,
	0xa73e, 0xa73e,
	0xa740, 0xa740,
	0xa742, 0xa742,
	0xa744, 0xa744,
	0xa746, 0xa746,
	0xa748, 0xa748,
	0xa74a, 0xa74a,
	0xa74c, 0xa74c,
	0xa74e, 0xa74e,
	0xa750, 0xa750,
	0xa752, 0xa752,
	0xa754, 0xa754,
	0xa756, 0xa756,
	0xa758, 0xa758,
	0xa75a, 0xa75a,
	0xa75c, 0xa75c,
	0xa75e, 0xa75e,
	0xa760, 0xa760,
	0xa762, 0xa762,
	0xa764, 0xa764,
	0xa766, 0xa766,
	0xa768, 0xa768,
	0xa76a, 0xa76a,
	0xa76c, 0xa76c,
	0xa76e, 0xa76e,
	0xa779, 0xa779,
	0xa77b, 0xa77b,
	0xa77d, 0xa77e,
	0xa780, 0xa780,
	0xa782, 0xa782,
	0xa784, 0xa784,
	0xa786, 0xa786,
	0xa78b, 0xa78b,
	0xa78d, 0xa78d,
	0xa790, 0xa790,
	0xa792, 0xa792,
	0xa796, 0xa796,
	0xa798, 0xa798,
	0xa79a, 0xa79a,
	0xa79c, 0xa79c,
	0xa79e, 0xa79e,
	0xa7a0, 0xa7a0,
	0xa7a2, 0xa7a2,
	0xa7a4, 0xa7a4,
	0xa7a6, 0xa7a6,
	0xa7a8, 0xa7a8,
	0xa7aa, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff21, 0xff3a,
	0x10400, 0x10427,
	0x118a0, 0x118bf,
}; /* CR_Changes_When_Casefolded */

/* 'Changes_When_Casemapped': Derived Property */
static const OnigCodePoint CR_Changes_When_Casemapped[] = {
	107,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00b5, 0x00b5,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x0137,
	0x0139, 0x018c,
	0x018e, 0x019a,
	0x019c, 0x01a9,
	0x01ac, 0x01b9,
	0x01bc, 0x01bd,
	0x01bf, 0x01bf,
	0x01c4, 0x0220,
	0x0222, 0x0233,
	0x023a, 0x0254,
	0x0256, 0x0257,
	0x0259, 0x0259,
	0x025b, 0x025c,
	0x0260, 0x0261,
	0x0263, 0x0263,
	0x0265, 0x0266,
	0x0268, 0x0269,
	0x026b, 0x026c,
	0x026f, 0x026f,
	0x0271, 0x0272,
	0x0275, 0x0275,
	0x027d, 0x027d,
	0x0280, 0x0280,
	0x0283, 0x0283,
	0x0287, 0x028c,
	0x0292, 0x0292,
	0x029e, 0x029e,
	0x0345, 0x0345,
	0x0370, 0x0373,
	0x0376, 0x0377,
	0x037b, 0x037d,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03d1,
	0x03d5, 0x03f5,
	0x03f7, 0x03fb,
	0x03fd, 0x0481,
	0x048a, 0x052f,
	0x0531, 0x0556,
	0x0561, 0x0587,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x1d79, 0x1d79,
	0x1d7d, 0x1d7d,
	0x1e00, 0x1e9b,
	0x1e9e, 0x1e9e,
	0x1ea0, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2126, 0x2126,
	0x212a, 0x212b,
	0x2132, 0x2132,
	0x214e, 0x214e,
	0x2160, 0x217f,
	0x2183, 0x2184,
	0x24b6, 0x24e9,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2c70,
	0x2c72, 0x2c73,
	0x2c75, 0x2c76,
	0x2c7e, 0x2ce3,
	0x2ceb, 0x2cee,
	0x2cf2, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0xa640, 0xa66d,
	0xa680, 0xa69b,
	0xa722, 0xa72f,
	0xa732, 0xa76f,
	0xa779, 0xa787,
	0xa78b, 0xa78d,
	0xa790, 0xa793,
	0xa796, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0x10400, 0x1044f,
	0x118a0, 0x118df,
}; /* CR_Changes_When_Casemapped */

/* 'ID_Start': Derived Property */
static const OnigCodePoint CR_ID_Start[] = {
	538,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0370, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0620, 0x064a,
	0x066e, 0x066f,
	0x0671, 0x06d3,
	0x06d5, 0x06d5,
	0x06e5, 0x06e6,
	0x06ee, 0x06ef,
	0x06fa, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x0710,
	0x0712, 0x072f,
	0x074d, 0x07a5,
	0x07b1, 0x07b1,
	0x07ca, 0x07ea,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x0815,
	0x081a, 0x081a,
	0x0824, 0x0824,
	0x0828, 0x0828,
	0x0840, 0x0858,
	0x08a0, 0x08b2,
	0x0904, 0x0939,
	0x093d, 0x093d,
	0x0950, 0x0950,
	0x0958, 0x0961,
	0x0971, 0x0980,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09bd,
	0x09ce, 0x09ce,
	0x09dc, 0x09dd,
	0x09df, 0x09e1,
	0x09f0, 0x09f1,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a72, 0x0a74,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0abd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae1,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b3d,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b71, 0x0b71,
	0x0b83, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bd0, 0x0bd0,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c3d,
	0x0c58, 0x0c59,
	0x0c60, 0x0c61,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cbd,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0cf1, 0x0cf2,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d3d,
	0x0d4e, 0x0d4e,
	0x0d60, 0x0d61,
	0x0d7a, 0x0d7f,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0e01, 0x0e30,
	0x0e32, 0x0e33,
	0x0e40, 0x0e46,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb0,
	0x0eb2, 0x0eb3,
	0x0ebd, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0edc, 0x0edf,
	0x0f00, 0x0f00,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f88, 0x0f8c,
	0x1000, 0x102a,
	0x103f, 0x103f,
	0x1050, 0x1055,
	0x105a, 0x105d,
	0x1061, 0x1061,
	0x1065, 0x1066,
	0x106e, 0x1070,
	0x1075, 0x1081,
	0x108e, 0x108e,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x10fa,
	0x10fc, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1711,
	0x1720, 0x1731,
	0x1740, 0x1751,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1780, 0x17b3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dc,
	0x1820, 0x1877,
	0x1880, 0x18a8,
	0x18aa, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1950, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19c1, 0x19c7,
	0x1a00, 0x1a16,
	0x1a20, 0x1a54,
	0x1aa7, 0x1aa7,
	0x1b05, 0x1b33,
	0x1b45, 0x1b4b,
	0x1b83, 0x1ba0,
	0x1bae, 0x1baf,
	0x1bba, 0x1be5,
	0x1c00, 0x1c23,
	0x1c4d, 0x1c4f,
	0x1c5a, 0x1c7d,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf1,
	0x1cf5, 0x1cf6,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2118, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2cf2, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x3005, 0x3007,
	0x3021, 0x3029,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x309b, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa61f,
	0xa62a, 0xa62b,
	0xa640, 0xa66e,
	0xa67f, 0xa69d,
	0xa6a0, 0xa6ef,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa822,
	0xa840, 0xa873,
	0xa882, 0xa8b3,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa90a, 0xa925,
	0xa930, 0xa946,
	0xa960, 0xa97c,
	0xa984, 0xa9b2,
	0xa9cf, 0xa9cf,
	0xa9e0, 0xa9e4,
	0xa9e6, 0xa9ef,
	0xa9fa, 0xa9fe,
	0xaa00, 0xaa28,
	0xaa40, 0xaa42,
	0xaa44, 0xaa4b,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa7e, 0xaaaf,
	0xaab1, 0xaab1,
	0xaab5, 0xaab6,
	0xaab9, 0xaabd,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadd,
	0xaae0, 0xaaea,
	0xaaf2, 0xaaf4,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5a,
	0xab5c, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabe2,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb1d,
	0xfb1f, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031f,
	0x10330, 0x1034a,
	0x10350, 0x10375,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10860, 0x10876,
	0x10880, 0x1089e,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a00,
	0x10a10, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10a80, 0x10a9c,
	0x10ac0, 0x10ac7,
	0x10ac9, 0x10ae4,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10b80, 0x10b91,
	0x10c00, 0x10c48,
	0x11003, 0x11037,
	0x11083, 0x110af,
	0x110d0, 0x110e8,
	0x11103, 0x11126,
	0x11150, 0x11172,
	0x11176, 0x11176,
	0x11183, 0x111b2,
	0x111c1, 0x111c4,
	0x111da, 0x111da,
	0x11200, 0x11211,
	0x11213, 0x1122b,
	0x112b0, 0x112de,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133d, 0x1133d,
	0x1135d, 0x11361,
	0x11480, 0x114af,
	0x114c4, 0x114c5,
	0x114c7, 0x114c7,
	0x11580, 0x115ae,
	0x11600, 0x1162f,
	0x11644, 0x11644,
	0x11680, 0x116aa,
	0x118a0, 0x118df,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16ad0, 0x16aed,
	0x16b00, 0x16b2f,
	0x16b40, 0x16b43,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f50,
	0x16f93, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1e800, 0x1e8c4,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_ID_Start */

/* 'ID_Continue': Derived Property */
static const OnigCodePoint CR_ID_Continue[] = {
	626,
	0x0030, 0x0039,
	0x0041, 0x005a,
	0x005f, 0x005f,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00b7, 0x00b7,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0300, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x037f, 0x037f,
	0x0386, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x0483, 0x0487,
	0x048a, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0610, 0x061a,
	0x0620, 0x0669,
	0x066e, 0x06d3,
	0x06d5, 0x06dc,
	0x06df, 0x06e8,
	0x06ea, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x082d,
	0x0840, 0x085b,
	0x08a0, 0x08b2,
	0x08e4, 0x0963,
	0x0966, 0x096f,
	0x0971, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09f1,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b6f,
	0x0b71, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bef,
	0x0c00, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c81, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d01, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d6f,
	0x0d7a, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0de6, 0x0def,
	0x0df2, 0x0df3,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e4e,
	0x0e50, 0x0e59,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f00,
	0x0f18, 0x0f19,
	0x0f20, 0x0f29,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f3e, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f84,
	0x0f86, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x1000, 0x1049,
	0x1050, 0x109d,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x10fa,
	0x10fc, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x135f,
	0x1369, 0x1371,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1734,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17d3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dd,
	0x17e0, 0x17e9,
	0x180b, 0x180d,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1946, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x1a00, 0x1a1b,
	0x1a20, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa7, 0x1aa7,
	0x1ab0, 0x1abd,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b59,
	0x1b6b, 0x1b73,
	0x1b80, 0x1bf3,
	0x1c00, 0x1c37,
	0x1c40, 0x1c49,
	0x1c4d, 0x1c7d,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1cf6,
	0x1cf8, 0x1cf9,
	0x1d00, 0x1df5,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x203f, 0x2040,
	0x2054, 0x2054,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x20d0, 0x20dc,
	0x20e1, 0x20e1,
	0x20e5, 0x20f0,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2118, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d6f,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2dff,
	0x3005, 0x3007,
	0x3021, 0x302f,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x3099, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa62b,
	0xa640, 0xa66f,
	0xa674, 0xa67d,
	0xa67f, 0xa69d,
	0xa69f, 0xa6f1,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa827,
	0xa840, 0xa873,
	0xa880, 0xa8c4,
	0xa8d0, 0xa8d9,
	0xa8e0, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa900, 0xa92d,
	0xa930, 0xa953,
	0xa960, 0xa97c,
	0xa980, 0xa9c0,
	0xa9cf, 0xa9d9,
	0xa9e0, 0xa9fe,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa60, 0xaa76,
	0xaa7a, 0xaac2,
	0xaadb, 0xaadd,
	0xaae0, 0xaaef,
	0xaaf2, 0xaaf6,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5a,
	0xab5c, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabea,
	0xabec, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe2d,
	0xfe33, 0xfe34,
	0xfe4d, 0xfe4f,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff10, 0xff19,
	0xff21, 0xff3a,
	0xff3f, 0xff3f,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x101fd, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x102e0, 0x102e0,
	0x10300, 0x1031f,
	0x10330, 0x1034a,
	0x10350, 0x1037a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10860, 0x10876,
	0x10880, 0x1089e,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x10a60, 0x10a7c,
	0x10a80, 0x10a9c,
	0x10ac0, 0x10ac7,
	0x10ac9, 0x10ae6,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10b80, 0x10b91,
	0x10c00, 0x10c48,
	0x11000, 0x11046,
	0x11066, 0x1106f,
	0x1107f, 0x110ba,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11100, 0x11134,
	0x11136, 0x1113f,
	0x11150, 0x11173,
	0x11176, 0x11176,
	0x11180, 0x111c4,
	0x111d0, 0x111da,
	0x11200, 0x11211,
	0x11213, 0x11237,
	0x112b0, 0x112ea,
	0x112f0, 0x112f9,
	0x11301, 0x11303,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133c, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134d,
	0x11357, 0x11357,
	0x1135d, 0x11363,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x11480, 0x114c5,
	0x114c7, 0x114c7,
	0x114d0, 0x114d9,
	0x11580, 0x115b5,
	0x115b8, 0x115c0,
	0x11600, 0x11640,
	0x11644, 0x11644,
	0x11650, 0x11659,
	0x11680, 0x116b7,
	0x116c0, 0x116c9,
	0x118a0, 0x118e9,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16a60, 0x16a69,
	0x16ad0, 0x16aed,
	0x16af0, 0x16af4,
	0x16b00, 0x16b36,
	0x16b40, 0x16b43,
	0x16b50, 0x16b59,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f8f, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1bc9d, 0x1bc9e,
	0x1d165, 0x1d169,
	0x1d16d, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1e800, 0x1e8c4,
	0x1e8d0, 0x1e8d6,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0100, 0xe01ef,
}; /* CR_ID_Continue */

/* 'XID_Start': Derived Property */
static const OnigCodePoint CR_XID_Start[] = {
	545,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0370, 0x0374,
	0x0376, 0x0377,
	0x037b, 0x037d,
	0x037f, 0x037f,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0620, 0x064a,
	0x066e, 0x066f,
	0x0671, 0x06d3,
	0x06d5, 0x06d5,
	0x06e5, 0x06e6,
	0x06ee, 0x06ef,
	0x06fa, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x0710,
	0x0712, 0x072f,
	0x074d, 0x07a5,
	0x07b1, 0x07b1,
	0x07ca, 0x07ea,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x0815,
	0x081a, 0x081a,
	0x0824, 0x0824,
	0x0828, 0x0828,
	0x0840, 0x0858,
	0x08a0, 0x08b2,
	0x0904, 0x0939,
	0x093d, 0x093d,
	0x0950, 0x0950,
	0x0958, 0x0961,
	0x0971, 0x0980,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09bd,
	0x09ce, 0x09ce,
	0x09dc, 0x09dd,
	0x09df, 0x09e1,
	0x09f0, 0x09f1,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a72, 0x0a74,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0abd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae1,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b3d,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b71, 0x0b71,
	0x0b83, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bd0, 0x0bd0,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c3d,
	0x0c58, 0x0c59,
	0x0c60, 0x0c61,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cbd,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0cf1, 0x0cf2,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d3d,
	0x0d4e, 0x0d4e,
	0x0d60, 0x0d61,
	0x0d7a, 0x0d7f,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0e01, 0x0e30,
	0x0e32, 0x0e32,
	0x0e40, 0x0e46,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb0,
	0x0eb2, 0x0eb2,
	0x0ebd, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0edc, 0x0edf,
	0x0f00, 0x0f00,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f88, 0x0f8c,
	0x1000, 0x102a,
	0x103f, 0x103f,
	0x1050, 0x1055,
	0x105a, 0x105d,
	0x1061, 0x1061,
	0x1065, 0x1066,
	0x106e, 0x1070,
	0x1075, 0x1081,
	0x108e, 0x108e,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x10fa,
	0x10fc, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1711,
	0x1720, 0x1731,
	0x1740, 0x1751,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1780, 0x17b3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dc,
	0x1820, 0x1877,
	0x1880, 0x18a8,
	0x18aa, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1950, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19c1, 0x19c7,
	0x1a00, 0x1a16,
	0x1a20, 0x1a54,
	0x1aa7, 0x1aa7,
	0x1b05, 0x1b33,
	0x1b45, 0x1b4b,
	0x1b83, 0x1ba0,
	0x1bae, 0x1baf,
	0x1bba, 0x1be5,
	0x1c00, 0x1c23,
	0x1c4d, 0x1c4f,
	0x1c5a, 0x1c7d,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf1,
	0x1cf5, 0x1cf6,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2118, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2cf2, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x3005, 0x3007,
	0x3021, 0x3029,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa61f,
	0xa62a, 0xa62b,
	0xa640, 0xa66e,
	0xa67f, 0xa69d,
	0xa6a0, 0xa6ef,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa822,
	0xa840, 0xa873,
	0xa882, 0xa8b3,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa90a, 0xa925,
	0xa930, 0xa946,
	0xa960, 0xa97c,
	0xa984, 0xa9b2,
	0xa9cf, 0xa9cf,
	0xa9e0, 0xa9e4,
	0xa9e6, 0xa9ef,
	0xa9fa, 0xa9fe,
	0xaa00, 0xaa28,
	0xaa40, 0xaa42,
	0xaa44, 0xaa4b,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa7e, 0xaaaf,
	0xaab1, 0xaab1,
	0xaab5, 0xaab6,
	0xaab9, 0xaabd,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadd,
	0xaae0, 0xaaea,
	0xaaf2, 0xaaf4,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5a,
	0xab5c, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabe2,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb1d,
	0xfb1f, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfc5d,
	0xfc64, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdf9,
	0xfe71, 0xfe71,
	0xfe73, 0xfe73,
	0xfe77, 0xfe77,
	0xfe79, 0xfe79,
	0xfe7b, 0xfe7b,
	0xfe7d, 0xfe7d,
	0xfe7f, 0xfefc,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0xff66, 0xff9d,
	0xffa0, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031f,
	0x10330, 0x1034a,
	0x10350, 0x10375,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10860, 0x10876,
	0x10880, 0x1089e,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a00,
	0x10a10, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10a80, 0x10a9c,
	0x10ac0, 0x10ac7,
	0x10ac9, 0x10ae4,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10b80, 0x10b91,
	0x10c00, 0x10c48,
	0x11003, 0x11037,
	0x11083, 0x110af,
	0x110d0, 0x110e8,
	0x11103, 0x11126,
	0x11150, 0x11172,
	0x11176, 0x11176,
	0x11183, 0x111b2,
	0x111c1, 0x111c4,
	0x111da, 0x111da,
	0x11200, 0x11211,
	0x11213, 0x1122b,
	0x112b0, 0x112de,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133d, 0x1133d,
	0x1135d, 0x11361,
	0x11480, 0x114af,
	0x114c4, 0x114c5,
	0x114c7, 0x114c7,
	0x11580, 0x115ae,
	0x11600, 0x1162f,
	0x11644, 0x11644,
	0x11680, 0x116aa,
	0x118a0, 0x118df,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16ad0, 0x16aed,
	0x16b00, 0x16b2f,
	0x16b40, 0x16b43,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f50,
	0x16f93, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1e800, 0x1e8c4,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_XID_Start */

/* 'XID_Continue': Derived Property */
static const OnigCodePoint CR_XID_Continue[] = {
	633,
	0x0030, 0x0039,
	0x0041, 0x005a,
	0x005f, 0x005f,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00b7, 0x00b7,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0300, 0x0374,
	0x0376, 0x0377,
	0x037b, 0x037d,
	0x037f, 0x037f,
	0x0386, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x0483, 0x0487,
	0x048a, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0610, 0x061a,
	0x0620, 0x0669,
	0x066e, 0x06d3,
	0x06d5, 0x06dc,
	0x06df, 0x06e8,
	0x06ea, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x082d,
	0x0840, 0x085b,
	0x08a0, 0x08b2,
	0x08e4, 0x0963,
	0x0966, 0x096f,
	0x0971, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09f1,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b6f,
	0x0b71, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bef,
	0x0c00, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c81, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d01, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d6f,
	0x0d7a, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0de6, 0x0def,
	0x0df2, 0x0df3,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e4e,
	0x0e50, 0x0e59,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f00,
	0x0f18, 0x0f19,
	0x0f20, 0x0f29,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f3e, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f84,
	0x0f86, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x1000, 0x1049,
	0x1050, 0x109d,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x10fa,
	0x10fc, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x135f,
	0x1369, 0x1371,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1734,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17d3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dd,
	0x17e0, 0x17e9,
	0x180b, 0x180d,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1946, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x1a00, 0x1a1b,
	0x1a20, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa7, 0x1aa7,
	0x1ab0, 0x1abd,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b59,
	0x1b6b, 0x1b73,
	0x1b80, 0x1bf3,
	0x1c00, 0x1c37,
	0x1c40, 0x1c49,
	0x1c4d, 0x1c7d,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1cf6,
	0x1cf8, 0x1cf9,
	0x1d00, 0x1df5,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x203f, 0x2040,
	0x2054, 0x2054,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x20d0, 0x20dc,
	0x20e1, 0x20e1,
	0x20e5, 0x20f0,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2118, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cf3,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d6f,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2dff,
	0x3005, 0x3007,
	0x3021, 0x302f,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x3099, 0x309a,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa62b,
	0xa640, 0xa66f,
	0xa674, 0xa67d,
	0xa67f, 0xa69d,
	0xa69f, 0xa6f1,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa827,
	0xa840, 0xa873,
	0xa880, 0xa8c4,
	0xa8d0, 0xa8d9,
	0xa8e0, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa900, 0xa92d,
	0xa930, 0xa953,
	0xa960, 0xa97c,
	0xa980, 0xa9c0,
	0xa9cf, 0xa9d9,
	0xa9e0, 0xa9fe,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa60, 0xaa76,
	0xaa7a, 0xaac2,
	0xaadb, 0xaadd,
	0xaae0, 0xaaef,
	0xaaf2, 0xaaf6,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5a,
	0xab5c, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabea,
	0xabec, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfc5d,
	0xfc64, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdf9,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe2d,
	0xfe33, 0xfe34,
	0xfe4d, 0xfe4f,
	0xfe71, 0xfe71,
	0xfe73, 0xfe73,
	0xfe77, 0xfe77,
	0xfe79, 0xfe79,
	0xfe7b, 0xfe7b,
	0xfe7d, 0xfe7d,
	0xfe7f, 0xfefc,
	0xff10, 0xff19,
	0xff21, 0xff3a,
	0xff3f, 0xff3f,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x101fd, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x102e0, 0x102e0,
	0x10300, 0x1031f,
	0x10330, 0x1034a,
	0x10350, 0x1037a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10860, 0x10876,
	0x10880, 0x1089e,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x10a60, 0x10a7c,
	0x10a80, 0x10a9c,
	0x10ac0, 0x10ac7,
	0x10ac9, 0x10ae6,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10b80, 0x10b91,
	0x10c00, 0x10c48,
	0x11000, 0x11046,
	0x11066, 0x1106f,
	0x1107f, 0x110ba,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11100, 0x11134,
	0x11136, 0x1113f,
	0x11150, 0x11173,
	0x11176, 0x11176,
	0x11180, 0x111c4,
	0x111d0, 0x111da,
	0x11200, 0x11211,
	0x11213, 0x11237,
	0x112b0, 0x112ea,
	0x112f0, 0x112f9,
	0x11301, 0x11303,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133c, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134d,
	0x11357, 0x11357,
	0x1135d, 0x11363,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x11480, 0x114c5,
	0x114c7, 0x114c7,
	0x114d0, 0x114d9,
	0x11580, 0x115b5,
	0x115b8, 0x115c0,
	0x11600, 0x11640,
	0x11644, 0x11644,
	0x11650, 0x11659,
	0x11680, 0x116b7,
	0x116c0, 0x116c9,
	0x118a0, 0x118e9,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16a60, 0x16a69,
	0x16ad0, 0x16aed,
	0x16af0, 0x16af4,
	0x16b00, 0x16b36,
	0x16b40, 0x16b43,
	0x16b50, 0x16b59,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f8f, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1bc9d, 0x1bc9e,
	0x1d165, 0x1d169,
	0x1d16d, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1e800, 0x1e8c4,
	0x1e8d0, 0x1e8d6,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0100, 0xe01ef,
}; /* CR_XID_Continue */

/* 'Default_Ignorable_Code_Point': Derived Property */
static const OnigCodePoint CR_Default_Ignorable_Code_Point[] = {
	17,
	0x00ad, 0x00ad,
	0x034f, 0x034f,
	0x061c, 0x061c,
	0x115f, 0x1160,
	0x17b4, 0x17b5,
	0x180b, 0x180e,
	0x200b, 0x200f,
	0x202a, 0x202e,
	0x2060, 0x206f,
	0x3164, 0x3164,
	0xfe00, 0xfe0f,
	0xfeff, 0xfeff,
	0xffa0, 0xffa0,
	0xfff0, 0xfff8,
	0x1bca0, 0x1bca3,
	0x1d173, 0x1d17a,
	0xe0000, 0xe0fff,
}; /* CR_Default_Ignorable_Code_Point */

/* 'Grapheme_Extend': Derived Property */
static const OnigCodePoint CR_Grapheme_Extend[] = {
	272,
	0x0300, 0x036f,
	0x0483, 0x0489,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x0610, 0x061a,
	0x064b, 0x065f,
	0x0670, 0x0670,
	0x06d6, 0x06dc,
	0x06df, 0x06e4,
	0x06e7, 0x06e8,
	0x06ea, 0x06ed,
	0x0711, 0x0711,
	0x0730, 0x074a,
	0x07a6, 0x07b0,
	0x07eb, 0x07f3,
	0x0816, 0x0819,
	0x081b, 0x0823,
	0x0825, 0x0827,
	0x0829, 0x082d,
	0x0859, 0x085b,
	0x08e4, 0x0902,
	0x093a, 0x093a,
	0x093c, 0x093c,
	0x0941, 0x0948,
	0x094d, 0x094d,
	0x0951, 0x0957,
	0x0962, 0x0963,
	0x0981, 0x0981,
	0x09bc, 0x09bc,
	0x09be, 0x09be,
	0x09c1, 0x09c4,
	0x09cd, 0x09cd,
	0x09d7, 0x09d7,
	0x09e2, 0x09e3,
	0x0a01, 0x0a02,
	0x0a3c, 0x0a3c,
	0x0a41, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a70, 0x0a71,
	0x0a75, 0x0a75,
	0x0a81, 0x0a82,
	0x0abc, 0x0abc,
	0x0ac1, 0x0ac5,
	0x0ac7, 0x0ac8,
	0x0acd, 0x0acd,
	0x0ae2, 0x0ae3,
	0x0b01, 0x0b01,
	0x0b3c, 0x0b3c,
	0x0b3e, 0x0b3f,
	0x0b41, 0x0b44,
	0x0b4d, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b62, 0x0b63,
	0x0b82, 0x0b82,
	0x0bbe, 0x0bbe,
	0x0bc0, 0x0bc0,
	0x0bcd, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0c00, 0x0c00,
	0x0c3e, 0x0c40,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c62, 0x0c63,
	0x0c81, 0x0c81,
	0x0cbc, 0x0cbc,
	0x0cbf, 0x0cbf,
	0x0cc2, 0x0cc2,
	0x0cc6, 0x0cc6,
	0x0ccc, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0ce2, 0x0ce3,
	0x0d01, 0x0d01,
	0x0d3e, 0x0d3e,
	0x0d41, 0x0d44,
	0x0d4d, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d62, 0x0d63,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dcf,
	0x0dd2, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0ddf, 0x0ddf,
	0x0e31, 0x0e31,
	0x0e34, 0x0e3a,
	0x0e47, 0x0e4e,
	0x0eb1, 0x0eb1,
	0x0eb4, 0x0eb9,
	0x0ebb, 0x0ebc,
	0x0ec8, 0x0ecd,
	0x0f18, 0x0f19,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f71, 0x0f7e,
	0x0f80, 0x0f84,
	0x0f86, 0x0f87,
	0x0f8d, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x102d, 0x1030,
	0x1032, 0x1037,
	0x1039, 0x103a,
	0x103d, 0x103e,
	0x1058, 0x1059,
	0x105e, 0x1060,
	0x1071, 0x1074,
	0x1082, 0x1082,
	0x1085, 0x1086,
	0x108d, 0x108d,
	0x109d, 0x109d,
	0x135d, 0x135f,
	0x1712, 0x1714,
	0x1732, 0x1734,
	0x1752, 0x1753,
	0x1772, 0x1773,
	0x17b4, 0x17b5,
	0x17b7, 0x17bd,
	0x17c6, 0x17c6,
	0x17c9, 0x17d3,
	0x17dd, 0x17dd,
	0x180b, 0x180d,
	0x18a9, 0x18a9,
	0x1920, 0x1922,
	0x1927, 0x1928,
	0x1932, 0x1932,
	0x1939, 0x193b,
	0x1a17, 0x1a18,
	0x1a1b, 0x1a1b,
	0x1a56, 0x1a56,
	0x1a58, 0x1a5e,
	0x1a60, 0x1a60,
	0x1a62, 0x1a62,
	0x1a65, 0x1a6c,
	0x1a73, 0x1a7c,
	0x1a7f, 0x1a7f,
	0x1ab0, 0x1abe,
	0x1b00, 0x1b03,
	0x1b34, 0x1b34,
	0x1b36, 0x1b3a,
	0x1b3c, 0x1b3c,
	0x1b42, 0x1b42,
	0x1b6b, 0x1b73,
	0x1b80, 0x1b81,
	0x1ba2, 0x1ba5,
	0x1ba8, 0x1ba9,
	0x1bab, 0x1bad,
	0x1be6, 0x1be6,
	0x1be8, 0x1be9,
	0x1bed, 0x1bed,
	0x1bef, 0x1bf1,
	0x1c2c, 0x1c33,
	0x1c36, 0x1c37,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1ce0,
	0x1ce2, 0x1ce8,
	0x1ced, 0x1ced,
	0x1cf4, 0x1cf4,
	0x1cf8, 0x1cf9,
	0x1dc0, 0x1df5,
	0x1dfc, 0x1dff,
	0x200c, 0x200d,
	0x20d0, 0x20f0,
	0x2cef, 0x2cf1,
	0x2d7f, 0x2d7f,
	0x2de0, 0x2dff,
	0x302a, 0x302f,
	0x3099, 0x309a,
	0xa66f, 0xa672,
	0xa674, 0xa67d,
	0xa69f, 0xa69f,
	0xa6f0, 0xa6f1,
	0xa802, 0xa802,
	0xa806, 0xa806,
	0xa80b, 0xa80b,
	0xa825, 0xa826,
	0xa8c4, 0xa8c4,
	0xa8e0, 0xa8f1,
	0xa926, 0xa92d,
	0xa947, 0xa951,
	0xa980, 0xa982,
	0xa9b3, 0xa9b3,
	0xa9b6, 0xa9b9,
	0xa9bc, 0xa9bc,
	0xa9e5, 0xa9e5,
	0xaa29, 0xaa2e,
	0xaa31, 0xaa32,
	0xaa35, 0xaa36,
	0xaa43, 0xaa43,
	0xaa4c, 0xaa4c,
	0xaa7c, 0xaa7c,
	0xaab0, 0xaab0,
	0xaab2, 0xaab4,
	0xaab7, 0xaab8,
	0xaabe, 0xaabf,
	0xaac1, 0xaac1,
	0xaaec, 0xaaed,
	0xaaf6, 0xaaf6,
	0xabe5, 0xabe5,
	0xabe8, 0xabe8,
	0xabed, 0xabed,
	0xfb1e, 0xfb1e,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe2d,
	0xff9e, 0xff9f,
	0x101fd, 0x101fd,
	0x102e0, 0x102e0,
	0x10376, 0x1037a,
	0x10a01, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a0f,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x10ae5, 0x10ae6,
	0x11001, 0x11001,
	0x11038, 0x11046,
	0x1107f, 0x11081,
	0x110b3, 0x110b6,
	0x110b9, 0x110ba,
	0x11100, 0x11102,
	0x11127, 0x1112b,
	0x1112d, 0x11134,
	0x11173, 0x11173,
	0x11180, 0x11181,
	0x111b6, 0x111be,
	0x1122f, 0x11231,
	0x11234, 0x11234,
	0x11236, 0x11237,
	0x112df, 0x112df,
	0x112e3, 0x112ea,
	0x11301, 0x11301,
	0x1133c, 0x1133c,
	0x1133e, 0x1133e,
	0x11340, 0x11340,
	0x11357, 0x11357,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x114b0, 0x114b0,
	0x114b3, 0x114b8,
	0x114ba, 0x114ba,
	0x114bd, 0x114bd,
	0x114bf, 0x114c0,
	0x114c2, 0x114c3,
	0x115af, 0x115af,
	0x115b2, 0x115b5,
	0x115bc, 0x115bd,
	0x115bf, 0x115c0,
	0x11633, 0x1163a,
	0x1163d, 0x1163d,
	0x1163f, 0x11640,
	0x116ab, 0x116ab,
	0x116ad, 0x116ad,
	0x116b0, 0x116b5,
	0x116b7, 0x116b7,
	0x16af0, 0x16af4,
	0x16b30, 0x16b36,
	0x16f8f, 0x16f92,
	0x1bc9d, 0x1bc9e,
	0x1d165, 0x1d165,
	0x1d167, 0x1d169,
	0x1d16e, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0x1e8d0, 0x1e8d6,
	0xe0100, 0xe01ef,
}; /* CR_Grapheme_Extend */

/* 'Grapheme_Base': Derived Property */
static const OnigCodePoint CR_Grapheme_Base[] = {
	724,
	0x0020, 0x007e,
	0x00a0, 0x00ac,
	0x00ae, 0x02ff,
	0x0370, 0x0377,
	0x037a, 0x037f,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0482,
	0x048a, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x058d, 0x058f,
	0x05be, 0x05be,
	0x05c0, 0x05c0,
	0x05c3, 0x05c3,
	0x05c6, 0x05c6,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0606, 0x060f,
	0x061b, 0x061b,
	0x061e, 0x064a,
	0x0660, 0x066f,
	0x0671, 0x06d5,
	0x06de, 0x06de,
	0x06e5, 0x06e6,
	0x06e9, 0x06e9,
	0x06ee, 0x070d,
	0x0710, 0x0710,
	0x0712, 0x072f,
	0x074d, 0x07a5,
	0x07b1, 0x07b1,
	0x07c0, 0x07ea,
	0x07f4, 0x07fa,
	0x0800, 0x0815,
	0x081a, 0x081a,
	0x0824, 0x0824,
	0x0828, 0x0828,
	0x0830, 0x083e,
	0x0840, 0x0858,
	0x085e, 0x085e,
	0x08a0, 0x08b2,
	0x0903, 0x0939,
	0x093b, 0x093b,
	0x093d, 0x0940,
	0x0949, 0x094c,
	0x094e, 0x0950,
	0x0958, 0x0961,
	0x0964, 0x0980,
	0x0982, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09bd,
	0x09bf, 0x09c0,
	0x09c7, 0x09c8,
	0x09cb, 0x09cc,
	0x09ce, 0x09ce,
	0x09dc, 0x09dd,
	0x09df, 0x09e1,
	0x09e6, 0x09fb,
	0x0a03, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3e, 0x0a40,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a6f,
	0x0a72, 0x0a74,
	0x0a83, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0ac0,
	0x0ac9, 0x0ac9,
	0x0acb, 0x0acc,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae1,
	0x0ae6, 0x0af1,
	0x0b02, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b3d,
	0x0b40, 0x0b40,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4c,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b77,
	0x0b83, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbf, 0x0bbf,
	0x0bc1, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcc,
	0x0bd0, 0x0bd0,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c3d,
	0x0c41, 0x0c44,
	0x0c58, 0x0c59,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cbe,
	0x0cc0, 0x0cc1,
	0x0cc3, 0x0cc4,
	0x0cc7, 0x0cc8,
	0x0cca, 0x0ccb,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d3d,
	0x0d3f, 0x0d40,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4c,
	0x0d4e, 0x0d4e,
	0x0d60, 0x0d61,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dd0, 0x0dd1,
	0x0dd8, 0x0dde,
	0x0de6, 0x0def,
	0x0df2, 0x0df4,
	0x0e01, 0x0e30,
	0x0e32, 0x0e33,
	0x0e3f, 0x0e46,
	0x0e4f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb0,
	0x0eb2, 0x0eb3,
	0x0ebd, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f17,
	0x0f1a, 0x0f34,
	0x0f36, 0x0f36,
	0x0f38, 0x0f38,
	0x0f3a, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f7f, 0x0f7f,
	0x0f85, 0x0f85,
	0x0f88, 0x0f8c,
	0x0fbe, 0x0fc5,
	0x0fc7, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x102c,
	0x1031, 0x1031,
	0x1038, 0x1038,
	0x103b, 0x103c,
	0x103f, 0x1057,
	0x105a, 0x105d,
	0x1061, 0x1070,
	0x1075, 0x1081,
	0x1083, 0x1084,
	0x1087, 0x108c,
	0x108e, 0x109c,
	0x109e, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x1360, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1711,
	0x1720, 0x1731,
	0x1735, 0x1736,
	0x1740, 0x1751,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1780, 0x17b3,
	0x17b6, 0x17b6,
	0x17be, 0x17c5,
	0x17c7, 0x17c8,
	0x17d4, 0x17dc,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180a,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a8,
	0x18aa, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1923, 0x1926,
	0x1929, 0x192b,
	0x1930, 0x1931,
	0x1933, 0x1938,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a16,
	0x1a19, 0x1a1a,
	0x1a1e, 0x1a55,
	0x1a57, 0x1a57,
	0x1a61, 0x1a61,
	0x1a63, 0x1a64,
	0x1a6d, 0x1a72,
	0x1a80, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b04, 0x1b33,
	0x1b35, 0x1b35,
	0x1b3b, 0x1b3b,
	0x1b3d, 0x1b41,
	0x1b43, 0x1b4b,
	0x1b50, 0x1b6a,
	0x1b74, 0x1b7c,
	0x1b82, 0x1ba1,
	0x1ba6, 0x1ba7,
	0x1baa, 0x1baa,
	0x1bae, 0x1be5,
	0x1be7, 0x1be7,
	0x1bea, 0x1bec,
	0x1bee, 0x1bee,
	0x1bf2, 0x1bf3,
	0x1bfc, 0x1c2b,
	0x1c34, 0x1c35,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cc0, 0x1cc7,
	0x1cd3, 0x1cd3,
	0x1ce1, 0x1ce1,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf3,
	0x1cf5, 0x1cf6,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x200a,
	0x2010, 0x2027,
	0x202f, 0x205f,
	0x2070, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20bd,
	0x2100, 0x2189,
	0x2190, 0x23fa,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x2b73,
	0x2b76, 0x2b95,
	0x2b98, 0x2bb9,
	0x2bbd, 0x2bc8,
	0x2bca, 0x2bd1,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cee,
	0x2cf2, 0x2cf3,
	0x2cf9, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d70,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2e00, 0x2e42,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x3029,
	0x3030, 0x303f,
	0x3041, 0x3096,
	0x309b, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcc,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa66e,
	0xa673, 0xa673,
	0xa67e, 0xa69d,
	0xa6a0, 0xa6ef,
	0xa6f2, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa824,
	0xa827, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c3,
	0xa8ce, 0xa8d9,
	0xa8f2, 0xa8fb,
	0xa900, 0xa925,
	0xa92e, 0xa946,
	0xa952, 0xa953,
	0xa95f, 0xa97c,
	0xa983, 0xa9b2,
	0xa9b4, 0xa9b5,
	0xa9ba, 0xa9bb,
	0xa9bd, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9e4,
	0xa9e6, 0xa9fe,
	0xaa00, 0xaa28,
	0xaa2f, 0xaa30,
	0xaa33, 0xaa34,
	0xaa40, 0xaa42,
	0xaa44, 0xaa4b,
	0xaa4d, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa7d, 0xaaaf,
	0xaab1, 0xaab1,
	0xaab5, 0xaab6,
	0xaab9, 0xaabd,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaaeb,
	0xaaee, 0xaaf5,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabe4,
	0xabe6, 0xabe7,
	0xabe9, 0xabec,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb1d,
	0xfb1f, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfd,
	0xfe10, 0xfe19,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff01, 0xff9d,
	0xffa0, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfffc, 0xfffd,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018c,
	0x10190, 0x1019b,
	0x101a0, 0x101a0,
	0x101d0, 0x101fc,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x102e1, 0x102fb,
	0x10300, 0x10323,
	0x10330, 0x1034a,
	0x10350, 0x10375,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x1056f, 0x1056f,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1089e,
	0x108a7, 0x108af,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a00,
	0x10a10, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a40, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a9f,
	0x10ac0, 0x10ae4,
	0x10aeb, 0x10af6,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b91,
	0x10b99, 0x10b9c,
	0x10ba9, 0x10baf,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x11000,
	0x11002, 0x11037,
	0x11047, 0x1104d,
	0x11052, 0x1106f,
	0x11082, 0x110b2,
	0x110b7, 0x110b8,
	0x110bb, 0x110bc,
	0x110be, 0x110c1,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11103, 0x11126,
	0x1112c, 0x1112c,
	0x11136, 0x11143,
	0x11150, 0x11172,
	0x11174, 0x11176,
	0x11182, 0x111b5,
	0x111bf, 0x111c8,
	0x111cd, 0x111cd,
	0x111d0, 0x111da,
	0x111e1, 0x111f4,
	0x11200, 0x11211,
	0x11213, 0x1122e,
	0x11232, 0x11233,
	0x11235, 0x11235,
	0x11238, 0x1123d,
	0x112b0, 0x112de,
	0x112e0, 0x112e2,
	0x112f0, 0x112f9,
	0x11302, 0x11303,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133d, 0x1133d,
	0x1133f, 0x1133f,
	0x11341, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134d,
	0x1135d, 0x11363,
	0x11480, 0x114af,
	0x114b1, 0x114b2,
	0x114b9, 0x114b9,
	0x114bb, 0x114bc,
	0x114be, 0x114be,
	0x114c1, 0x114c1,
	0x114c4, 0x114c7,
	0x114d0, 0x114d9,
	0x11580, 0x115ae,
	0x115b0, 0x115b1,
	0x115b8, 0x115bb,
	0x115be, 0x115be,
	0x115c1, 0x115c9,
	0x11600, 0x11632,
	0x1163b, 0x1163c,
	0x1163e, 0x1163e,
	0x11641, 0x11644,
	0x11650, 0x11659,
	0x11680, 0x116aa,
	0x116ac, 0x116ac,
	0x116ae, 0x116af,
	0x116b6, 0x116b6,
	0x116c0, 0x116c9,
	0x118a0, 0x118f2,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x12470, 0x12474,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16a60, 0x16a69,
	0x16a6e, 0x16a6f,
	0x16ad0, 0x16aed,
	0x16af5, 0x16af5,
	0x16b00, 0x16b2f,
	0x16b37, 0x16b45,
	0x16b50, 0x16b59,
	0x16b5b, 0x16b61,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f93, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1bc9c, 0x1bc9c,
	0x1bc9f, 0x1bc9f,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d164,
	0x1d166, 0x1d166,
	0x1d16a, 0x1d16d,
	0x1d183, 0x1d184,
	0x1d18c, 0x1d1a9,
	0x1d1ae, 0x1d1dd,
	0x1d200, 0x1d241,
	0x1d245, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1e800, 0x1e8c4,
	0x1e8c7, 0x1e8cf,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1eef0, 0x1eef1,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0bf,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0f5,
	0x1f100, 0x1f10c,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f16b,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f32c,
	0x1f330, 0x1f37d,
	0x1f380, 0x1f3ce,
	0x1f3d4, 0x1f3f7,
	0x1f400, 0x1f4fe,
	0x1f500, 0x1f54a,
	0x1f550, 0x1f579,
	0x1f57b, 0x1f5a3,
	0x1f5a5, 0x1f642,
	0x1f645, 0x1f6cf,
	0x1f6e0, 0x1f6ec,
	0x1f6f0, 0x1f6f3,
	0x1f700, 0x1f773,
	0x1f780, 0x1f7d4,
	0x1f800, 0x1f80b,
	0x1f810, 0x1f847,
	0x1f850, 0x1f859,
	0x1f860, 0x1f887,
	0x1f890, 0x1f8ad,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Grapheme_Base */

/* 'Grapheme_Link': Derived Property */
static const OnigCodePoint CR_Grapheme_Link[] = {
	40,
	0x094d, 0x094d,
	0x09cd, 0x09cd,
	0x0a4d, 0x0a4d,
	0x0acd, 0x0acd,
	0x0b4d, 0x0b4d,
	0x0bcd, 0x0bcd,
	0x0c4d, 0x0c4d,
	0x0ccd, 0x0ccd,
	0x0d4d, 0x0d4d,
	0x0dca, 0x0dca,
	0x0e3a, 0x0e3a,
	0x0f84, 0x0f84,
	0x1039, 0x103a,
	0x1714, 0x1714,
	0x1734, 0x1734,
	0x17d2, 0x17d2,
	0x1a60, 0x1a60,
	0x1b44, 0x1b44,
	0x1baa, 0x1bab,
	0x1bf2, 0x1bf3,
	0x2d7f, 0x2d7f,
	0xa806, 0xa806,
	0xa8c4, 0xa8c4,
	0xa953, 0xa953,
	0xa9c0, 0xa9c0,
	0xaaf6, 0xaaf6,
	0xabed, 0xabed,
	0x10a3f, 0x10a3f,
	0x11046, 0x11046,
	0x1107f, 0x1107f,
	0x110b9, 0x110b9,
	0x11133, 0x11134,
	0x111c0, 0x111c0,
	0x11235, 0x11235,
	0x112ea, 0x112ea,
	0x1134d, 0x1134d,
	0x114c2, 0x114c2,
	0x115bf, 0x115bf,
	0x1163f, 0x1163f,
	0x116b6, 0x116b6,
}; /* CR_Grapheme_Link */

/* 'Common': Script */
static const OnigCodePoint CR_Common[] = {
	165,
	0x0000, 0x0040,
	0x005b, 0x0060,
	0x007b, 0x00a9,
	0x00ab, 0x00b9,
	0x00bb, 0x00bf,
	0x00d7, 0x00d7,
	0x00f7, 0x00f7,
	0x02b9, 0x02df,
	0x02e5, 0x02e9,
	0x02ec, 0x02ff,
	0x0374, 0x0374,
	0x037e, 0x037e,
	0x0385, 0x0385,
	0x0387, 0x0387,
	0x0589, 0x0589,
	0x0605, 0x0605,
	0x060c, 0x060c,
	0x061b, 0x061c,
	0x061f, 0x061f,
	0x0640, 0x0640,
	0x0660, 0x0669,
	0x06dd, 0x06dd,
	0x0964, 0x0965,
	0x0e3f, 0x0e3f,
	0x0fd5, 0x0fd8,
	0x10fb, 0x10fb,
	0x16eb, 0x16ed,
	0x1735, 0x1736,
	0x1802, 0x1803,
	0x1805, 0x1805,
	0x1cd3, 0x1cd3,
	0x1ce1, 0x1ce1,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf3,
	0x1cf5, 0x1cf6,
	0x2000, 0x200b,
	0x200e, 0x2064,
	0x2066, 0x2070,
	0x2074, 0x207e,
	0x2080, 0x208e,
	0x20a0, 0x20bd,
	0x2100, 0x2125,
	0x2127, 0x2129,
	0x212c, 0x2131,
	0x2133, 0x214d,
	0x214f, 0x215f,
	0x2189, 0x2189,
	0x2190, 0x23fa,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x27ff,
	0x2900, 0x2b73,
	0x2b76, 0x2b95,
	0x2b98, 0x2bb9,
	0x2bbd, 0x2bc8,
	0x2bca, 0x2bd1,
	0x2e00, 0x2e42,
	0x2ff0, 0x2ffb,
	0x3000, 0x3004,
	0x3006, 0x3006,
	0x3008, 0x3020,
	0x3030, 0x3037,
	0x303c, 0x303f,
	0x309b, 0x309c,
	0x30a0, 0x30a0,
	0x30fb, 0x30fc,
	0x3190, 0x319f,
	0x31c0, 0x31e3,
	0x3220, 0x325f,
	0x327f, 0x32cf,
	0x3358, 0x33ff,
	0x4dc0, 0x4dff,
	0xa700, 0xa721,
	0xa788, 0xa78a,
	0xa830, 0xa839,
	0xa92e, 0xa92e,
	0xa9cf, 0xa9cf,
	0xab5b, 0xab5b,
	0xfd3e, 0xfd3f,
	0xfe10, 0xfe19,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfeff, 0xfeff,
	0xff01, 0xff20,
	0xff3b, 0xff40,
	0xff5b, 0xff65,
	0xff70, 0xff70,
	0xff9e, 0xff9f,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xfffd,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1013f,
	0x10190, 0x1019b,
	0x101d0, 0x101fc,
	0x102e1, 0x102fb,
	0x1bca0, 0x1bca3,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d166,
	0x1d16a, 0x1d17a,
	0x1d183, 0x1d184,
	0x1d18c, 0x1d1a9,
	0x1d1ae, 0x1d1dd,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0bf,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0f5,
	0x1f100, 0x1f10c,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f16b,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f1ff,
	0x1f201, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f32c,
	0x1f330, 0x1f37d,
	0x1f380, 0x1f3ce,
	0x1f3d4, 0x1f3f7,
	0x1f400, 0x1f4fe,
	0x1f500, 0x1f54a,
	0x1f550, 0x1f579,
	0x1f57b, 0x1f5a3,
	0x1f5a5, 0x1f642,
	0x1f645, 0x1f6cf,
	0x1f6e0, 0x1f6ec,
	0x1f6f0, 0x1f6f3,
	0x1f700, 0x1f773,
	0x1f780, 0x1f7d4,
	0x1f800, 0x1f80b,
	0x1f810, 0x1f847,
	0x1f850, 0x1f859,
	0x1f860, 0x1f887,
	0x1f890, 0x1f8ad,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
}; /* CR_Common */

/* 'Latin': Script */
static const OnigCodePoint CR_Latin[] = {
	33,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02b8,
	0x02e0, 0x02e4,
	0x1d00, 0x1d25,
	0x1d2c, 0x1d5c,
	0x1d62, 0x1d65,
	0x1d6b, 0x1d77,
	0x1d79, 0x1dbe,
	0x1e00, 0x1eff,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x212a, 0x212b,
	0x2132, 0x2132,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x2c60, 0x2c7f,
	0xa722, 0xa787,
	0xa78b, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa7ff,
	0xab30, 0xab5a,
	0xab5c, 0xab5f,
	0xab64, 0xab64,
	0xfb00, 0xfb06,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
}; /* CR_Latin */

/* 'Greek': Script */
static const OnigCodePoint CR_Greek[] = {
	36,
	0x0370, 0x0373,
	0x0375, 0x0377,
	0x037a, 0x037d,
	0x037f, 0x037f,
	0x0384, 0x0384,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03e1,
	0x03f0, 0x03ff,
	0x1d26, 0x1d2a,
	0x1d5d, 0x1d61,
	0x1d66, 0x1d6a,
	0x1dbf, 0x1dbf,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2126, 0x2126,
	0xab65, 0xab65,
	0x10140, 0x1018c,
	0x101a0, 0x101a0,
	0x1d200, 0x1d245,
}; /* CR_Greek */

/* 'Cyrillic': Script */
static const OnigCodePoint CR_Cyrillic[] = {
	7,
	0x0400, 0x0484,
	0x0487, 0x052f,
	0x1d2b, 0x1d2b,
	0x1d78, 0x1d78,
	0x2de0, 0x2dff,
	0xa640, 0xa69d,
	0xa69f, 0xa69f,
}; /* CR_Cyrillic */

/* 'Armenian': Script */
static const OnigCodePoint CR_Armenian[] = {
	6,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x058a, 0x058a,
	0x058d, 0x058f,
	0xfb13, 0xfb17,
}; /* CR_Armenian */

/* 'Hebrew': Script */
static const OnigCodePoint CR_Hebrew[] = {
	9,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfb4f,
}; /* CR_Hebrew */

/* 'Arabic': Script */
static const OnigCodePoint CR_Arabic[] = {
	55,
	0x0600, 0x0604,
	0x0606, 0x060b,
	0x060d, 0x061a,
	0x061e, 0x061e,
	0x0620, 0x063f,
	0x0641, 0x064a,
	0x0656, 0x065f,
	0x066a, 0x066f,
	0x0671, 0x06dc,
	0x06de, 0x06ff,
	0x0750, 0x077f,
	0x08a0, 0x08b2,
	0x08e4, 0x08ff,
	0xfb50, 0xfbc1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfd,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0x10e60, 0x10e7e,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1eef0, 0x1eef1,
}; /* CR_Arabic */

/* 'Syriac': Script */
static const OnigCodePoint CR_Syriac[] = {
	3,
	0x0700, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x074f,
}; /* CR_Syriac */

/* 'Thaana': Script */
static const OnigCodePoint CR_Thaana[] = {
	1,
	0x0780, 0x07b1,
}; /* CR_Thaana */

/* 'Devanagari': Script */
static const OnigCodePoint CR_Devanagari[] = {
	4,
	0x0900, 0x0950,
	0x0953, 0x0963,
	0x0966, 0x097f,
	0xa8e0, 0xa8fb,
}; /* CR_Devanagari */

/* 'Bengali': Script */
static const OnigCodePoint CR_Bengali[] = {
	14,
	0x0980, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
}; /* CR_Bengali */

/* 'Gurmukhi': Script */
static const OnigCodePoint CR_Gurmukhi[] = {
	16,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
}; /* CR_Gurmukhi */

/* 'Gujarati': Script */
static const OnigCodePoint CR_Gujarati[] = {
	13,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0af1,
}; /* CR_Gujarati */

/* 'Oriya': Script */
static const OnigCodePoint CR_Oriya[] = {
	14,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
}; /* CR_Oriya */

/* 'Tamil': Script */
static const OnigCodePoint CR_Tamil[] = {
	16,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
}; /* CR_Tamil */

/* 'Telugu': Script */
static const OnigCodePoint CR_Telugu[] = {
	13,
	0x0c00, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
}; /* CR_Telugu */

/* 'Kannada': Script */
static const OnigCodePoint CR_Kannada[] = {
	14,
	0x0c81, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
}; /* CR_Kannada */

/* 'Malayalam': Script */
static const OnigCodePoint CR_Malayalam[] = {
	11,
	0x0d01, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
}; /* CR_Malayalam */

/* 'Sinhala': Script */
static const OnigCodePoint CR_Sinhala[] = {
	13,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0de6, 0x0def,
	0x0df2, 0x0df4,
	0x111e1, 0x111f4,
}; /* CR_Sinhala */

/* 'Thai': Script */
static const OnigCodePoint CR_Thai[] = {
	2,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e5b,
}; /* CR_Thai */

/* 'Lao': Script */
static const OnigCodePoint CR_Lao[] = {
	18,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
}; /* CR_Lao */

/* 'Tibetan': Script */
static const OnigCodePoint CR_Tibetan[] = {
	7,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fd4,
	0x0fd9, 0x0fda,
}; /* CR_Tibetan */

/* 'Myanmar': Script */
static const OnigCodePoint CR_Myanmar[] = {
	3,
	0x1000, 0x109f,
	0xa9e0, 0xa9fe,
	0xaa60, 0xaa7f,
}; /* CR_Myanmar */

/* 'Georgian': Script */
static const OnigCodePoint CR_Georgian[] = {
	8,
	0x10a0, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x10fa,
	0x10fc, 0x10ff,
	0x2d00, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
}; /* CR_Georgian */

/* 'Hangul': Script */
static const OnigCodePoint CR_Hangul[] = {
	14,
	0x1100, 0x11ff,
	0x302e, 0x302f,
	0x3131, 0x318e,
	0x3200, 0x321e,
	0x3260, 0x327e,
	0xa960, 0xa97c,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xffa0, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
}; /* CR_Hangul */

/* 'Ethiopic': Script */
static const OnigCodePoint CR_Ethiopic[] = {
	32,
	0x1200, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
}; /* CR_Ethiopic */

/* 'Cherokee': Script */
static const OnigCodePoint CR_Cherokee[] = {
	1,
	0x13a0, 0x13f4,
}; /* CR_Cherokee */

/* 'Canadian_Aboriginal': Script */
static const OnigCodePoint CR_Canadian_Aboriginal[] = {
	2,
	0x1400, 0x167f,
	0x18b0, 0x18f5,
}; /* CR_Canadian_Aboriginal */

/* 'Ogham': Script */
static const OnigCodePoint CR_Ogham[] = {
	1,
	0x1680, 0x169c,
}; /* CR_Ogham */

/* 'Runic': Script */
static const OnigCodePoint CR_Runic[] = {
	2,
	0x16a0, 0x16ea,
	0x16ee, 0x16f8,
}; /* CR_Runic */

/* 'Khmer': Script */
static const OnigCodePoint CR_Khmer[] = {
	4,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x19e0, 0x19ff,
}; /* CR_Khmer */

/* 'Mongolian': Script */
static const OnigCodePoint CR_Mongolian[] = {
	6,
	0x1800, 0x1801,
	0x1804, 0x1804,
	0x1806, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
}; /* CR_Mongolian */

/* 'Hiragana': Script */
static const OnigCodePoint CR_Hiragana[] = {
	4,
	0x3041, 0x3096,
	0x309d, 0x309f,
	0x1b001, 0x1b001,
	0x1f200, 0x1f200,
}; /* CR_Hiragana */

/* 'Katakana': Script */
static const OnigCodePoint CR_Katakana[] = {
	8,
	0x30a1, 0x30fa,
	0x30fd, 0x30ff,
	0x31f0, 0x31ff,
	0x32d0, 0x32fe,
	0x3300, 0x3357,
	0xff66, 0xff6f,
	0xff71, 0xff9d,
	0x1b000, 0x1b000,
}; /* CR_Katakana */

/* 'Bopomofo': Script */
static const OnigCodePoint CR_Bopomofo[] = {
	3,
	0x02ea, 0x02eb,
	0x3105, 0x312d,
	0x31a0, 0x31ba,
}; /* CR_Bopomofo */

/* 'Han': Script */
static const OnigCodePoint CR_Han[] = {
	15,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x3005, 0x3005,
	0x3007, 0x3007,
	0x3021, 0x3029,
	0x3038, 0x303b,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Han */

/* 'Yi': Script */
static const OnigCodePoint CR_Yi[] = {
	2,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
}; /* CR_Yi */

/* 'Old_Italic': Script */
static const OnigCodePoint CR_Old_Italic[] = {
	1,
	0x10300, 0x10323,
}; /* CR_Old_Italic */

/* 'Gothic': Script */
static const OnigCodePoint CR_Gothic[] = {
	1,
	0x10330, 0x1034a,
}; /* CR_Gothic */

/* 'Deseret': Script */
static const OnigCodePoint CR_Deseret[] = {
	1,
	0x10400, 0x1044f,
}; /* CR_Deseret */

/* 'Inherited': Script */
static const OnigCodePoint CR_Inherited[] = {
	27,
	0x0300, 0x036f,
	0x0485, 0x0486,
	0x064b, 0x0655,
	0x0670, 0x0670,
	0x0951, 0x0952,
	0x1ab0, 0x1abe,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1ce0,
	0x1ce2, 0x1ce8,
	0x1ced, 0x1ced,
	0x1cf4, 0x1cf4,
	0x1cf8, 0x1cf9,
	0x1dc0, 0x1df5,
	0x1dfc, 0x1dff,
	0x200c, 0x200d,
	0x20d0, 0x20f0,
	0x302a, 0x302d,
	0x3099, 0x309a,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe2d,
	0x101fd, 0x101fd,
	0x102e0, 0x102e0,
	0x1d167, 0x1d169,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0xe0100, 0xe01ef,
}; /* CR_Inherited */

/* 'Tagalog': Script */
static const OnigCodePoint CR_Tagalog[] = {
	2,
	0x1700, 0x170c,
	0x170e, 0x1714,
}; /* CR_Tagalog */

/* 'Hanunoo': Script */
static const OnigCodePoint CR_Hanunoo[] = {
	1,
	0x1720, 0x1734,
}; /* CR_Hanunoo */

/* 'Buhid': Script */
static const OnigCodePoint CR_Buhid[] = {
	1,
	0x1740, 0x1753,
}; /* CR_Buhid */

/* 'Tagbanwa': Script */
static const OnigCodePoint CR_Tagbanwa[] = {
	3,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
}; /* CR_Tagbanwa */

/* 'Limbu': Script */
static const OnigCodePoint CR_Limbu[] = {
	5,
	0x1900, 0x191e,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x194f,
}; /* CR_Limbu */

/* 'Tai_Le': Script */
static const OnigCodePoint CR_Tai_Le[] = {
	2,
	0x1950, 0x196d,
	0x1970, 0x1974,
}; /* CR_Tai_Le */

/* 'Linear_B': Script */
static const OnigCodePoint CR_Linear_B[] = {
	7,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
}; /* CR_Linear_B */

/* 'Ugaritic': Script */
static const OnigCodePoint CR_Ugaritic[] = {
	2,
	0x10380, 0x1039d,
	0x1039f, 0x1039f,
}; /* CR_Ugaritic */

/* 'Shavian': Script */
static const OnigCodePoint CR_Shavian[] = {
	1,
	0x10450, 0x1047f,
}; /* CR_Shavian */

/* 'Osmanya': Script */
static const OnigCodePoint CR_Osmanya[] = {
	2,
	0x10480, 0x1049d,
	0x104a0, 0x104a9,
}; /* CR_Osmanya */

/* 'Cypriot': Script */
static const OnigCodePoint CR_Cypriot[] = {
	6,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x1083f,
}; /* CR_Cypriot */

/* 'Braille': Script */
static const OnigCodePoint CR_Braille[] = {
	1,
	0x2800, 0x28ff,
}; /* CR_Braille */

/* 'Buginese': Script */
static const OnigCodePoint CR_Buginese[] = {
	2,
	0x1a00, 0x1a1b,
	0x1a1e, 0x1a1f,
}; /* CR_Buginese */

/* 'Coptic': Script */
static const OnigCodePoint CR_Coptic[] = {
	3,
	0x03e2, 0x03ef,
	0x2c80, 0x2cf3,
	0x2cf9, 0x2cff,
}; /* CR_Coptic */

/* 'New_Tai_Lue': Script */
static const OnigCodePoint CR_New_Tai_Lue[] = {
	4,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x19df,
}; /* CR_New_Tai_Lue */

/* 'Glagolitic': Script */
static const OnigCodePoint CR_Glagolitic[] = {
	2,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
}; /* CR_Glagolitic */

/* 'Tifinagh': Script */
static const OnigCodePoint CR_Tifinagh[] = {
	3,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d7f,
}; /* CR_Tifinagh */

/* 'Syloti_Nagri': Script */
static const OnigCodePoint CR_Syloti_Nagri[] = {
	1,
	0xa800, 0xa82b,
}; /* CR_Syloti_Nagri */

/* 'Old_Persian': Script */
static const OnigCodePoint CR_Old_Persian[] = {
	2,
	0x103a0, 0x103c3,
	0x103c8, 0x103d5,
}; /* CR_Old_Persian */

/* 'Kharoshthi': Script */
static const OnigCodePoint CR_Kharoshthi[] = {
	8,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
}; /* CR_Kharoshthi */

/* 'Balinese': Script */
static const OnigCodePoint CR_Balinese[] = {
	2,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
}; /* CR_Balinese */

/* 'Cuneiform': Script */
static const OnigCodePoint CR_Cuneiform[] = {
	3,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x12470, 0x12474,
}; /* CR_Cuneiform */

/* 'Phoenician': Script */
static const OnigCodePoint CR_Phoenician[] = {
	2,
	0x10900, 0x1091b,
	0x1091f, 0x1091f,
}; /* CR_Phoenician */

/* 'Phags_Pa': Script */
static const OnigCodePoint CR_Phags_Pa[] = {
	1,
	0xa840, 0xa877,
}; /* CR_Phags_Pa */

/* 'Nko': Script */
static const OnigCodePoint CR_Nko[] = {
	1,
	0x07c0, 0x07fa,
}; /* CR_Nko */

/* 'Sundanese': Script */
static const OnigCodePoint CR_Sundanese[] = {
	2,
	0x1b80, 0x1bbf,
	0x1cc0, 0x1cc7,
}; /* CR_Sundanese */

/* 'Lepcha': Script */
static const OnigCodePoint CR_Lepcha[] = {
	3,
	0x1c00, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c4f,
}; /* CR_Lepcha */

/* 'Ol_Chiki': Script */
static const OnigCodePoint CR_Ol_Chiki[] = {
	1,
	0x1c50, 0x1c7f,
}; /* CR_Ol_Chiki */

/* 'Vai': Script */
static const OnigCodePoint CR_Vai[] = {
	1,
	0xa500, 0xa62b,
}; /* CR_Vai */

/* 'Saurashtra': Script */
static const OnigCodePoint CR_Saurashtra[] = {
	2,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
}; /* CR_Saurashtra */

/* 'Kayah_Li': Script */
static const OnigCodePoint CR_Kayah_Li[] = {
	2,
	0xa900, 0xa92d,
	0xa92f, 0xa92f,
}; /* CR_Kayah_Li */

/* 'Rejang': Script */
static const OnigCodePoint CR_Rejang[] = {
	2,
	0xa930, 0xa953,
	0xa95f, 0xa95f,
}; /* CR_Rejang */

/* 'Lycian': Script */
static const OnigCodePoint CR_Lycian[] = {
	1,
	0x10280, 0x1029c,
}; /* CR_Lycian */

/* 'Carian': Script */
static const OnigCodePoint CR_Carian[] = {
	1,
	0x102a0, 0x102d0,
}; /* CR_Carian */

/* 'Lydian': Script */
static const OnigCodePoint CR_Lydian[] = {
	2,
	0x10920, 0x10939,
	0x1093f, 0x1093f,
}; /* CR_Lydian */

/* 'Cham': Script */
static const OnigCodePoint CR_Cham[] = {
	4,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa5f,
}; /* CR_Cham */

/* 'Tai_Tham': Script */
static const OnigCodePoint CR_Tai_Tham[] = {
	5,
	0x1a20, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
}; /* CR_Tai_Tham */

/* 'Tai_Viet': Script */
static const OnigCodePoint CR_Tai_Viet[] = {
	2,
	0xaa80, 0xaac2,
	0xaadb, 0xaadf,
}; /* CR_Tai_Viet */

/* 'Avestan': Script */
static const OnigCodePoint CR_Avestan[] = {
	2,
	0x10b00, 0x10b35,
	0x10b39, 0x10b3f,
}; /* CR_Avestan */

/* 'Egyptian_Hieroglyphs': Script */
static const OnigCodePoint CR_Egyptian_Hieroglyphs[] = {
	1,
	0x13000, 0x1342e,
}; /* CR_Egyptian_Hieroglyphs */

/* 'Samaritan': Script */
static const OnigCodePoint CR_Samaritan[] = {
	2,
	0x0800, 0x082d,
	0x0830, 0x083e,
}; /* CR_Samaritan */

/* 'Lisu': Script */
static const OnigCodePoint CR_Lisu[] = {
	1,
	0xa4d0, 0xa4ff,
}; /* CR_Lisu */

/* 'Bamum': Script */
static const OnigCodePoint CR_Bamum[] = {
	2,
	0xa6a0, 0xa6f7,
	0x16800, 0x16a38,
}; /* CR_Bamum */

/* 'Javanese': Script */
static const OnigCodePoint CR_Javanese[] = {
	3,
	0xa980, 0xa9cd,
	0xa9d0, 0xa9d9,
	0xa9de, 0xa9df,
}; /* CR_Javanese */

/* 'Meetei_Mayek': Script */
static const OnigCodePoint CR_Meetei_Mayek[] = {
	3,
	0xaae0, 0xaaf6,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
}; /* CR_Meetei_Mayek */

/* 'Imperial_Aramaic': Script */
static const OnigCodePoint CR_Imperial_Aramaic[] = {
	2,
	0x10840, 0x10855,
	0x10857, 0x1085f,
}; /* CR_Imperial_Aramaic */

/* 'Old_South_Arabian': Script */
static const OnigCodePoint CR_Old_South_Arabian[] = {
	1,
	0x10a60, 0x10a7f,
}; /* CR_Old_South_Arabian */

/* 'Inscriptional_Parthian': Script */
static const OnigCodePoint CR_Inscriptional_Parthian[] = {
	2,
	0x10b40, 0x10b55,
	0x10b58, 0x10b5f,
}; /* CR_Inscriptional_Parthian */

/* 'Inscriptional_Pahlavi': Script */
static const OnigCodePoint CR_Inscriptional_Pahlavi[] = {
	2,
	0x10b60, 0x10b72,
	0x10b78, 0x10b7f,
}; /* CR_Inscriptional_Pahlavi */

/* 'Old_Turkic': Script */
static const OnigCodePoint CR_Old_Turkic[] = {
	1,
	0x10c00, 0x10c48,
}; /* CR_Old_Turkic */

/* 'Kaithi': Script */
static const OnigCodePoint CR_Kaithi[] = {
	1,
	0x11080, 0x110c1,
}; /* CR_Kaithi */

/* 'Batak': Script */
static const OnigCodePoint CR_Batak[] = {
	2,
	0x1bc0, 0x1bf3,
	0x1bfc, 0x1bff,
}; /* CR_Batak */

/* 'Brahmi': Script */
static const OnigCodePoint CR_Brahmi[] = {
	3,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x1107f, 0x1107f,
}; /* CR_Brahmi */

/* 'Mandaic': Script */
static const OnigCodePoint CR_Mandaic[] = {
	2,
	0x0840, 0x085b,
	0x085e, 0x085e,
}; /* CR_Mandaic */

/* 'Chakma': Script */
static const OnigCodePoint CR_Chakma[] = {
	2,
	0x11100, 0x11134,
	0x11136, 0x11143,
}; /* CR_Chakma */

/* 'Meroitic_Cursive': Script */
static const OnigCodePoint CR_Meroitic_Cursive[] = {
	2,
	0x109a0, 0x109b7,
	0x109be, 0x109bf,
}; /* CR_Meroitic_Cursive */

/* 'Meroitic_Hieroglyphs': Script */
static const OnigCodePoint CR_Meroitic_Hieroglyphs[] = {
	1,
	0x10980, 0x1099f,
}; /* CR_Meroitic_Hieroglyphs */

/* 'Miao': Script */
static const OnigCodePoint CR_Miao[] = {
	3,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f8f, 0x16f9f,
}; /* CR_Miao */

/* 'Sharada': Script */
static const OnigCodePoint CR_Sharada[] = {
	3,
	0x11180, 0x111c8,
	0x111cd, 0x111cd,
	0x111d0, 0x111da,
}; /* CR_Sharada */

/* 'Sora_Sompeng': Script */
static const OnigCodePoint CR_Sora_Sompeng[] = {
	2,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
}; /* CR_Sora_Sompeng */

/* 'Takri': Script */
static const OnigCodePoint CR_Takri[] = {
	2,
	0x11680, 0x116b7,
	0x116c0, 0x116c9,
}; /* CR_Takri */

/* 'Caucasian_Albanian': Script */
static const OnigCodePoint CR_Caucasian_Albanian[] = {
	2,
	0x10530, 0x10563,
	0x1056f, 0x1056f,
}; /* CR_Caucasian_Albanian */

/* 'Bassa_Vah': Script */
static const OnigCodePoint CR_Bassa_Vah[] = {
	2,
	0x16ad0, 0x16aed,
	0x16af0, 0x16af5,
}; /* CR_Bassa_Vah */

/* 'Duployan': Script */
static const OnigCodePoint CR_Duployan[] = {
	5,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1bc9c, 0x1bc9f,
}; /* CR_Duployan */

/* 'Elbasan': Script */
static const OnigCodePoint CR_Elbasan[] = {
	1,
	0x10500, 0x10527,
}; /* CR_Elbasan */

/* 'Grantha': Script */
static const OnigCodePoint CR_Grantha[] = {
	14,
	0x11301, 0x11303,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133c, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134d,
	0x11357, 0x11357,
	0x1135d, 0x11363,
	0x11366, 0x1136c,
	0x11370, 0x11374,
}; /* CR_Grantha */

/* 'Pahawh_Hmong': Script */
static const OnigCodePoint CR_Pahawh_Hmong[] = {
	5,
	0x16b00, 0x16b45,
	0x16b50, 0x16b59,
	0x16b5b, 0x16b61,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
}; /* CR_Pahawh_Hmong */

/* 'Khojki': Script */
static const OnigCodePoint CR_Khojki[] = {
	2,
	0x11200, 0x11211,
	0x11213, 0x1123d,
}; /* CR_Khojki */

/* 'Linear_A': Script */
static const OnigCodePoint CR_Linear_A[] = {
	3,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
}; /* CR_Linear_A */

/* 'Mahajani': Script */
static const OnigCodePoint CR_Mahajani[] = {
	1,
	0x11150, 0x11176,
}; /* CR_Mahajani */

/* 'Manichaean': Script */
static const OnigCodePoint CR_Manichaean[] = {
	2,
	0x10ac0, 0x10ae6,
	0x10aeb, 0x10af6,
}; /* CR_Manichaean */

/* 'Mende_Kikakui': Script */
static const OnigCodePoint CR_Mende_Kikakui[] = {
	2,
	0x1e800, 0x1e8c4,
	0x1e8c7, 0x1e8d6,
}; /* CR_Mende_Kikakui */

/* 'Modi': Script */
static const OnigCodePoint CR_Modi[] = {
	2,
	0x11600, 0x11644,
	0x11650, 0x11659,
}; /* CR_Modi */

/* 'Mro': Script */
static const OnigCodePoint CR_Mro[] = {
	3,
	0x16a40, 0x16a5e,
	0x16a60, 0x16a69,
	0x16a6e, 0x16a6f,
}; /* CR_Mro */

/* 'Old_North_Arabian': Script */
static const OnigCodePoint CR_Old_North_Arabian[] = {
	1,
	0x10a80, 0x10a9f,
}; /* CR_Old_North_Arabian */

/* 'Nabataean': Script */
static const OnigCodePoint CR_Nabataean[] = {
	2,
	0x10880, 0x1089e,
	0x108a7, 0x108af,
}; /* CR_Nabataean */

/* 'Palmyrene': Script */
static const OnigCodePoint CR_Palmyrene[] = {
	1,
	0x10860, 0x1087f,
}; /* CR_Palmyrene */

/* 'Pau_Cin_Hau': Script */
static const OnigCodePoint CR_Pau_Cin_Hau[] = {
	1,
	0x11ac0, 0x11af8,
}; /* CR_Pau_Cin_Hau */

/* 'Old_Permic': Script */
static const OnigCodePoint CR_Old_Permic[] = {
	1,
	0x10350, 0x1037a,
}; /* CR_Old_Permic */

/* 'Psalter_Pahlavi': Script */
static const OnigCodePoint CR_Psalter_Pahlavi[] = {
	3,
	0x10b80, 0x10b91,
	0x10b99, 0x10b9c,
	0x10ba9, 0x10baf,
}; /* CR_Psalter_Pahlavi */

/* 'Siddham': Script */
static const OnigCodePoint CR_Siddham[] = {
	2,
	0x11580, 0x115b5,
	0x115b8, 0x115c9,
}; /* CR_Siddham */

/* 'Khudawadi': Script */
static const OnigCodePoint CR_Khudawadi[] = {
	2,
	0x112b0, 0x112ea,
	0x112f0, 0x112f9,
}; /* CR_Khudawadi */

/* 'Tirhuta': Script */
static const OnigCodePoint CR_Tirhuta[] = {
	2,
	0x11480, 0x114c7,
	0x114d0, 0x114d9,
}; /* CR_Tirhuta */

/* 'Warang_Citi': Script */
static const OnigCodePoint CR_Warang_Citi[] = {
	2,
	0x118a0, 0x118f2,
	0x118ff, 0x118ff,
}; /* CR_Warang_Citi */

/* 'White_Space': Binary Property */
#define CR_White_Space CR_Space

/* 'Bidi_Control': Binary Property */
static const OnigCodePoint CR_Bidi_Control[] = {
	4,
	0x061c, 0x061c,
	0x200e, 0x200f,
	0x202a, 0x202e,
	0x2066, 0x2069,
}; /* CR_Bidi_Control */

/* 'Join_Control': Binary Property */
static const OnigCodePoint CR_Join_Control[] = {
	1,
	0x200c, 0x200d,
}; /* CR_Join_Control */

/* 'Dash': Binary Property */
static const OnigCodePoint CR_Dash[] = {
	21,
	0x002d, 0x002d,
	0x058a, 0x058a,
	0x05be, 0x05be,
	0x1400, 0x1400,
	0x1806, 0x1806,
	0x2010, 0x2015,
	0x2053, 0x2053,
	0x207b, 0x207b,
	0x208b, 0x208b,
	0x2212, 0x2212,
	0x2e17, 0x2e17,
	0x2e1a, 0x2e1a,
	0x2e3a, 0x2e3b,
	0x2e40, 0x2e40,
	0x301c, 0x301c,
	0x3030, 0x3030,
	0x30a0, 0x30a0,
	0xfe31, 0xfe32,
	0xfe58, 0xfe58,
	0xfe63, 0xfe63,
	0xff0d, 0xff0d,
}; /* CR_Dash */

/* 'Hyphen': Binary Property */
static const OnigCodePoint CR_Hyphen[] = {
	10,
	0x002d, 0x002d,
	0x00ad, 0x00ad,
	0x058a, 0x058a,
	0x1806, 0x1806,
	0x2010, 0x2011,
	0x2e17, 0x2e17,
	0x30fb, 0x30fb,
	0xfe63, 0xfe63,
	0xff0d, 0xff0d,
	0xff65, 0xff65,
}; /* CR_Hyphen */

/* 'Quotation_Mark': Binary Property */
static const OnigCodePoint CR_Quotation_Mark[] = {
	13,
	0x0022, 0x0022,
	0x0027, 0x0027,
	0x00ab, 0x00ab,
	0x00bb, 0x00bb,
	0x2018, 0x201f,
	0x2039, 0x203a,
	0x2e42, 0x2e42,
	0x300c, 0x300f,
	0x301d, 0x301f,
	0xfe41, 0xfe44,
	0xff02, 0xff02,
	0xff07, 0xff07,
	0xff62, 0xff63,
}; /* CR_Quotation_Mark */

/* 'Terminal_Punctuation': Binary Property */
static const OnigCodePoint CR_Terminal_Punctuation[] = {
	86,
	0x0021, 0x0021,
	0x002c, 0x002c,
	0x002e, 0x002e,
	0x003a, 0x003b,
	0x003f, 0x003f,
	0x037e, 0x037e,
	0x0387, 0x0387,
	0x0589, 0x0589,
	0x05c3, 0x05c3,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x06d4, 0x06d4,
	0x0700, 0x070a,
	0x070c, 0x070c,
	0x07f8, 0x07f9,
	0x0830, 0x083e,
	0x085e, 0x085e,
	0x0964, 0x0965,
	0x0e5a, 0x0e5b,
	0x0f08, 0x0f08,
	0x0f0d, 0x0f12,
	0x104a, 0x104b,
	0x1361, 0x1368,
	0x166d, 0x166e,
	0x16eb, 0x16ed,
	0x1735, 0x1736,
	0x17d4, 0x17d6,
	0x17da, 0x17da,
	0x1802, 0x1805,
	0x1808, 0x1809,
	0x1944, 0x1945,
	0x1aa8, 0x1aab,
	0x1b5a, 0x1b5b,
	0x1b5d, 0x1b5f,
	0x1c3b, 0x1c3f,
	0x1c7e, 0x1c7f,
	0x203c, 0x203d,
	0x2047, 0x2049,
	0x2e2e, 0x2e2e,
	0x2e3c, 0x2e3c,
	0x2e41, 0x2e41,
	0x3001, 0x3002,
	0xa4fe, 0xa4ff,
	0xa60d, 0xa60f,
	0xa6f3, 0xa6f7,
	0xa876, 0xa877,
	0xa8ce, 0xa8cf,
	0xa92f, 0xa92f,
	0xa9c7, 0xa9c9,
	0xaa5d, 0xaa5f,
	0xaadf, 0xaadf,
	0xaaf0, 0xaaf1,
	0xabeb, 0xabeb,
	0xfe50, 0xfe52,
	0xfe54, 0xfe57,
	0xff01, 0xff01,
	0xff0c, 0xff0c,
	0xff0e, 0xff0e,
	0xff1a, 0xff1b,
	0xff1f, 0xff1f,
	0xff61, 0xff61,
	0xff64, 0xff64,
	0x1039f, 0x1039f,
	0x103d0, 0x103d0,
	0x10857, 0x10857,
	0x1091f, 0x1091f,
	0x10a56, 0x10a57,
	0x10af0, 0x10af5,
	0x10b3a, 0x10b3f,
	0x10b99, 0x10b9c,
	0x11047, 0x1104d,
	0x110be, 0x110c1,
	0x11141, 0x11143,
	0x111c5, 0x111c6,
	0x111cd, 0x111cd,
	0x11238, 0x1123c,
	0x115c2, 0x115c5,
	0x115c9, 0x115c9,
	0x11641, 0x11642,
	0x12470, 0x12474,
	0x16a6e, 0x16a6f,
	0x16af5, 0x16af5,
	0x16b37, 0x16b39,
	0x16b44, 0x16b44,
	0x1bc9f, 0x1bc9f,
}; /* CR_Terminal_Punctuation */

/* 'Other_Math': Binary Property */
static const OnigCodePoint CR_Other_Math[] = {
	134,
	0x005e, 0x005e,
	0x03d0, 0x03d2,
	0x03d5, 0x03d5,
	0x03f0, 0x03f1,
	0x03f4, 0x03f5,
	0x2016, 0x2016,
	0x2032, 0x2034,
	0x2040, 0x2040,
	0x2061, 0x2064,
	0x207d, 0x207e,
	0x208d, 0x208e,
	0x20d0, 0x20dc,
	0x20e1, 0x20e1,
	0x20e5, 0x20e6,
	0x20eb, 0x20ef,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2128, 0x2129,
	0x212c, 0x212d,
	0x212f, 0x2131,
	0x2133, 0x2138,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x2195, 0x2199,
	0x219c, 0x219f,
	0x21a1, 0x21a2,
	0x21a4, 0x21a5,
	0x21a7, 0x21a7,
	0x21a9, 0x21ad,
	0x21b0, 0x21b1,
	0x21b6, 0x21b7,
	0x21bc, 0x21cd,
	0x21d0, 0x21d1,
	0x21d3, 0x21d3,
	0x21d5, 0x21db,
	0x21dd, 0x21dd,
	0x21e4, 0x21e5,
	0x2308, 0x230b,
	0x23b4, 0x23b5,
	0x23b7, 0x23b7,
	0x23d0, 0x23d0,
	0x23e2, 0x23e2,
	0x25a0, 0x25a1,
	0x25ae, 0x25b6,
	0x25bc, 0x25c0,
	0x25c6, 0x25c7,
	0x25ca, 0x25cb,
	0x25cf, 0x25d3,
	0x25e2, 0x25e2,
	0x25e4, 0x25e4,
	0x25e7, 0x25ec,
	0x2605, 0x2606,
	0x2640, 0x2640,
	0x2642, 0x2642,
	0x2660, 0x2663,
	0x266d, 0x266e,
	0x27c5, 0x27c6,
	0x27e6, 0x27ef,
	0x2983, 0x2998,
	0x29d8, 0x29db,
	0x29fc, 0x29fd,
	0xfe61, 0xfe61,
	0xfe63, 0xfe63,
	0xfe68, 0xfe68,
	0xff3c, 0xff3c,
	0xff3e, 0xff3e,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
}; /* CR_Other_Math */

/* 'Hex_Digit': Binary Property */
static const OnigCodePoint CR_Hex_Digit[] = {
	6,
	0x0030, 0x0039,
	0x0041, 0x0046,
	0x0061, 0x0066,
	0xff10, 0xff19,
	0xff21, 0xff26,
	0xff41, 0xff46,
}; /* CR_Hex_Digit */

/* 'ASCII_Hex_Digit': Binary Property */
#define CR_ASCII_Hex_Digit CR_XDigit

/* 'Other_Alphabetic': Binary Property */
static const OnigCodePoint CR_Other_Alphabetic[] = {
	178,
	0x0345, 0x0345,
	0x05b0, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x0610, 0x061a,
	0x064b, 0x0657,
	0x0659, 0x065f,
	0x0670, 0x0670,
	0x06d6, 0x06dc,
	0x06e1, 0x06e4,
	0x06e7, 0x06e8,
	0x06ed, 0x06ed,
	0x0711, 0x0711,
	0x0730, 0x073f,
	0x07a6, 0x07b0,
	0x0816, 0x0817,
	0x081b, 0x0823,
	0x0825, 0x0827,
	0x0829, 0x082c,
	0x08e4, 0x08e9,
	0x08f0, 0x0903,
	0x093a, 0x093b,
	0x093e, 0x094c,
	0x094e, 0x094f,
	0x0955, 0x0957,
	0x0962, 0x0963,
	0x0981, 0x0983,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cc,
	0x09d7, 0x09d7,
	0x09e2, 0x09e3,
	0x0a01, 0x0a03,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4c,
	0x0a51, 0x0a51,
	0x0a70, 0x0a71,
	0x0a75, 0x0a75,
	0x0a81, 0x0a83,
	0x0abe, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acc,
	0x0ae2, 0x0ae3,
	0x0b01, 0x0b03,
	0x0b3e, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4c,
	0x0b56, 0x0b57,
	0x0b62, 0x0b63,
	0x0b82, 0x0b82,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcc,
	0x0bd7, 0x0bd7,
	0x0c00, 0x0c03,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4c,
	0x0c55, 0x0c56,
	0x0c62, 0x0c63,
	0x0c81, 0x0c83,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccc,
	0x0cd5, 0x0cd6,
	0x0ce2, 0x0ce3,
	0x0d01, 0x0d03,
	0x0d3e, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4c,
	0x0d57, 0x0d57,
	0x0d62, 0x0d63,
	0x0d82, 0x0d83,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0e31, 0x0e31,
	0x0e34, 0x0e3a,
	0x0e4d, 0x0e4d,
	0x0eb1, 0x0eb1,
	0x0eb4, 0x0eb9,
	0x0ebb, 0x0ebc,
	0x0ecd, 0x0ecd,
	0x0f71, 0x0f81,
	0x0f8d, 0x0f97,
	0x0f99, 0x0fbc,
	0x102b, 0x1036,
	0x1038, 0x1038,
	0x103b, 0x103e,
	0x1056, 0x1059,
	0x105e, 0x1060,
	0x1062, 0x1062,
	0x1067, 0x1068,
	0x1071, 0x1074,
	0x1082, 0x1086,
	0x109c, 0x109d,
	0x135f, 0x135f,
	0x1712, 0x1713,
	0x1732, 0x1733,
	0x1752, 0x1753,
	0x1772, 0x1773,
	0x17b6, 0x17c8,
	0x18a9, 0x18a9,
	0x1920, 0x192b,
	0x1930, 0x1938,
	0x19b0, 0x19c0,
	0x19c8, 0x19c9,
	0x1a17, 0x1a1b,
	0x1a55, 0x1a5e,
	0x1a61, 0x1a74,
	0x1b00, 0x1b04,
	0x1b35, 0x1b43,
	0x1b80, 0x1b82,
	0x1ba1, 0x1ba9,
	0x1bac, 0x1bad,
	0x1be7, 0x1bf1,
	0x1c24, 0x1c35,
	0x1cf2, 0x1cf3,
	0x1de7, 0x1df4,
	0x24b6, 0x24e9,
	0x2de0, 0x2dff,
	0xa674, 0xa67b,
	0xa69f, 0xa69f,
	0xa823, 0xa827,
	0xa880, 0xa881,
	0xa8b4, 0xa8c3,
	0xa926, 0xa92a,
	0xa947, 0xa952,
	0xa980, 0xa983,
	0xa9b4, 0xa9bf,
	0xaa29, 0xaa36,
	0xaa43, 0xaa43,
	0xaa4c, 0xaa4d,
	0xaab0, 0xaab0,
	0xaab2, 0xaab4,
	0xaab7, 0xaab8,
	0xaabe, 0xaabe,
	0xaaeb, 0xaaef,
	0xaaf5, 0xaaf5,
	0xabe3, 0xabea,
	0xfb1e, 0xfb1e,
	0x10376, 0x1037a,
	0x10a01, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a0f,
	0x11000, 0x11002,
	0x11038, 0x11045,
	0x11082, 0x11082,
	0x110b0, 0x110b8,
	0x11100, 0x11102,
	0x11127, 0x11132,
	0x11180, 0x11182,
	0x111b3, 0x111bf,
	0x1122c, 0x11234,
	0x11237, 0x11237,
	0x112df, 0x112e8,
	0x11301, 0x11303,
	0x1133e, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134c,
	0x11357, 0x11357,
	0x11362, 0x11363,
	0x114b0, 0x114c1,
	0x115af, 0x115b5,
	0x115b8, 0x115be,
	0x11630, 0x1163e,
	0x11640, 0x11640,
	0x116ab, 0x116b5,
	0x16b30, 0x16b36,
	0x16f51, 0x16f7e,
	0x1bc9e, 0x1bc9e,
	0x1f130, 0x1f149,
	0x1f150, 0x1f169,
	0x1f170, 0x1f189,
}; /* CR_Other_Alphabetic */

/* 'Ideographic': Binary Property */
static const OnigCodePoint CR_Ideographic[] = {
	11,
	0x3006, 0x3007,
	0x3021, 0x3029,
	0x3038, 0x303a,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xf900, 0xfa6d,
	0xfa70, 0xfad9,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Ideographic */

/* 'Diacritic': Binary Property */
static const OnigCodePoint CR_Diacritic[] = {
	145,
	0x005e, 0x005e,
	0x0060, 0x0060,
	0x00a8, 0x00a8,
	0x00af, 0x00af,
	0x00b4, 0x00b4,
	0x00b7, 0x00b8,
	0x02b0, 0x034e,
	0x0350, 0x0357,
	0x035d, 0x0362,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x0384, 0x0385,
	0x0483, 0x0487,
	0x0559, 0x0559,
	0x0591, 0x05a1,
	0x05a3, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c4,
	0x064b, 0x0652,
	0x0657, 0x0658,
	0x06df, 0x06e0,
	0x06e5, 0x06e6,
	0x06ea, 0x06ec,
	0x0730, 0x074a,
	0x07a6, 0x07b0,
	0x07eb, 0x07f5,
	0x0818, 0x0819,
	0x08e4, 0x08fe,
	0x093c, 0x093c,
	0x094d, 0x094d,
	0x0951, 0x0954,
	0x0971, 0x0971,
	0x09bc, 0x09bc,
	0x09cd, 0x09cd,
	0x0a3c, 0x0a3c,
	0x0a4d, 0x0a4d,
	0x0abc, 0x0abc,
	0x0acd, 0x0acd,
	0x0b3c, 0x0b3c,
	0x0b4d, 0x0b4d,
	0x0bcd, 0x0bcd,
	0x0c4d, 0x0c4d,
	0x0cbc, 0x0cbc,
	0x0ccd, 0x0ccd,
	0x0d4d, 0x0d4d,
	0x0dca, 0x0dca,
	0x0e47, 0x0e4c,
	0x0e4e, 0x0e4e,
	0x0ec8, 0x0ecc,
	0x0f18, 0x0f19,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f3e, 0x0f3f,
	0x0f82, 0x0f84,
	0x0f86, 0x0f87,
	0x0fc6, 0x0fc6,
	0x1037, 0x1037,
	0x1039, 0x103a,
	0x1087, 0x108d,
	0x108f, 0x108f,
	0x109a, 0x109b,
	0x17c9, 0x17d3,
	0x17dd, 0x17dd,
	0x1939, 0x193b,
	0x1a75, 0x1a7c,
	0x1a7f, 0x1a7f,
	0x1ab0, 0x1abd,
	0x1b34, 0x1b34,
	0x1b44, 0x1b44,
	0x1b6b, 0x1b73,
	0x1baa, 0x1bab,
	0x1c36, 0x1c37,
	0x1c78, 0x1c7d,
	0x1cd0, 0x1ce8,
	0x1ced, 0x1ced,
	0x1cf4, 0x1cf4,
	0x1cf8, 0x1cf9,
	0x1d2c, 0x1d6a,
	0x1dc4, 0x1dcf,
	0x1df5, 0x1df5,
	0x1dfd, 0x1dff,
	0x1fbd, 0x1fbd,
	0x1fbf, 0x1fc1,
	0x1fcd, 0x1fcf,
	0x1fdd, 0x1fdf,
	0x1fed, 0x1fef,
	0x1ffd, 0x1ffe,
	0x2cef, 0x2cf1,
	0x2e2f, 0x2e2f,
	0x302a, 0x302f,
	0x3099, 0x309c,
	0x30fc, 0x30fc,
	0xa66f, 0xa66f,
	0xa67c, 0xa67d,
	0xa67f, 0xa67f,
	0xa69c, 0xa69d,
	0xa6f0, 0xa6f1,
	0xa717, 0xa721,
	0xa788, 0xa788,
	0xa7f8, 0xa7f9,
	0xa8c4, 0xa8c4,
	0xa8e0, 0xa8f1,
	0xa92b, 0xa92e,
	0xa953, 0xa953,
	0xa9b3, 0xa9b3,
	0xa9c0, 0xa9c0,
	0xa9e5, 0xa9e5,
	0xaa7b, 0xaa7d,
	0xaabf, 0xaac2,
	0xaaf6, 0xaaf6,
	0xab5b, 0xab5f,
	0xabec, 0xabed,
	0xfb1e, 0xfb1e,
	0xfe20, 0xfe2d,
	0xff3e, 0xff3e,
	0xff40, 0xff40,
	0xff70, 0xff70,
	0xff9e, 0xff9f,
	0xffe3, 0xffe3,
	0x102e0, 0x102e0,
	0x10ae5, 0x10ae6,
	0x110b9, 0x110ba,
	0x11133, 0x11134,
	0x11173, 0x11173,
	0x111c0, 0x111c0,
	0x11235, 0x11236,
	0x112e9, 0x112ea,
	0x1133c, 0x1133c,
	0x1134d, 0x1134d,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x114c2, 0x114c3,
	0x115bf, 0x115c0,
	0x1163f, 0x1163f,
	0x116b6, 0x116b7,
	0x16af0, 0x16af4,
	0x16f8f, 0x16f9f,
	0x1d167, 0x1d169,
	0x1d16d, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1e8d0, 0x1e8d6,
}; /* CR_Diacritic */

/* 'Extender': Binary Property */
static const OnigCodePoint CR_Extender[] = {
	26,
	0x00b7, 0x00b7,
	0x02d0, 0x02d1,
	0x0640, 0x0640,
	0x07fa, 0x07fa,
	0x0e46, 0x0e46,
	0x0ec6, 0x0ec6,
	0x180a, 0x180a,
	0x1843, 0x1843,
	0x1aa7, 0x1aa7,
	0x1c36, 0x1c36,
	0x1c7b, 0x1c7b,
	0x3005, 0x3005,
	0x3031, 0x3035,
	0x309d, 0x309e,
	0x30fc, 0x30fe,
	0xa015, 0xa015,
	0xa60c, 0xa60c,
	0xa9cf, 0xa9cf,
	0xa9e6, 0xa9e6,
	0xaa70, 0xaa70,
	0xaadd, 0xaadd,
	0xaaf3, 0xaaf4,
	0xff70, 0xff70,
	0x1135d, 0x1135d,
	0x115c6, 0x115c8,
	0x16b42, 0x16b43,
}; /* CR_Extender */

/* 'Other_Lowercase': Binary Property */
static const OnigCodePoint CR_Other_Lowercase[] = {
	20,
	0x00aa, 0x00aa,
	0x00ba, 0x00ba,
	0x02b0, 0x02b8,
	0x02c0, 0x02c1,
	0x02e0, 0x02e4,
	0x0345, 0x0345,
	0x037a, 0x037a,
	0x1d2c, 0x1d6a,
	0x1d78, 0x1d78,
	0x1d9b, 0x1dbf,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2170, 0x217f,
	0x24d0, 0x24e9,
	0x2c7c, 0x2c7d,
	0xa69c, 0xa69d,
	0xa770, 0xa770,
	0xa7f8, 0xa7f9,
	0xab5c, 0xab5f,
}; /* CR_Other_Lowercase */

/* 'Other_Uppercase': Binary Property */
static const OnigCodePoint CR_Other_Uppercase[] = {
	5,
	0x2160, 0x216f,
	0x24b6, 0x24cf,
	0x1f130, 0x1f149,
	0x1f150, 0x1f169,
	0x1f170, 0x1f189,
}; /* CR_Other_Uppercase */

/* 'Noncharacter_Code_Point': Binary Property */
static const OnigCodePoint CR_Noncharacter_Code_Point[] = {
	18,
	0xfdd0, 0xfdef,
	0xfffe, 0xffff,
	0x1fffe, 0x1ffff,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xefffe, 0xeffff,
	0xffffe, 0xfffff,
	0x10fffe, 0x10ffff,
}; /* CR_Noncharacter_Code_Point */

/* 'Other_Grapheme_Extend': Binary Property */
static const OnigCodePoint CR_Other_Grapheme_Extend[] = {
	22,
	0x09be, 0x09be,
	0x09d7, 0x09d7,
	0x0b3e, 0x0b3e,
	0x0b57, 0x0b57,
	0x0bbe, 0x0bbe,
	0x0bd7, 0x0bd7,
	0x0cc2, 0x0cc2,
	0x0cd5, 0x0cd6,
	0x0d3e, 0x0d3e,
	0x0d57, 0x0d57,
	0x0dcf, 0x0dcf,
	0x0ddf, 0x0ddf,
	0x200c, 0x200d,
	0x302e, 0x302f,
	0xff9e, 0xff9f,
	0x1133e, 0x1133e,
	0x11357, 0x11357,
	0x114b0, 0x114b0,
	0x114bd, 0x114bd,
	0x115af, 0x115af,
	0x1d165, 0x1d165,
	0x1d16e, 0x1d172,
}; /* CR_Other_Grapheme_Extend */

/* 'IDS_Binary_Operator': Binary Property */
static const OnigCodePoint CR_IDS_Binary_Operator[] = {
	2,
	0x2ff0, 0x2ff1,
	0x2ff4, 0x2ffb,
}; /* CR_IDS_Binary_Operator */

/* 'IDS_Trinary_Operator': Binary Property */
static const OnigCodePoint CR_IDS_Trinary_Operator[] = {
	1,
	0x2ff2, 0x2ff3,
}; /* CR_IDS_Trinary_Operator */

/* 'Radical': Binary Property */
static const OnigCodePoint CR_Radical[] = {
	3,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
}; /* CR_Radical */

/* 'Unified_Ideograph': Binary Property */
static const OnigCodePoint CR_Unified_Ideograph[] = {
	12,
	0x3400, 0x4db5,
	0x4e00, 0x9fcc,
	0xfa0e, 0xfa0f,
	0xfa11, 0xfa11,
	0xfa13, 0xfa14,
	0xfa1f, 0xfa1f,
	0xfa21, 0xfa21,
	0xfa23, 0xfa24,
	0xfa27, 0xfa29,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
}; /* CR_Unified_Ideograph */

/* 'Other_Default_Ignorable_Code_Point': Binary Property */
static const OnigCodePoint CR_Other_Default_Ignorable_Code_Point[] = {
	11,
	0x034f, 0x034f,
	0x115f, 0x1160,
	0x17b4, 0x17b5,
	0x2065, 0x2065,
	0x3164, 0x3164,
	0xffa0, 0xffa0,
	0xfff0, 0xfff8,
	0xe0000, 0xe0000,
	0xe0002, 0xe001f,
	0xe0080, 0xe00ff,
	0xe01f0, 0xe0fff,
}; /* CR_Other_Default_Ignorable_Code_Point */

/* 'Deprecated': Binary Property */
static const OnigCodePoint CR_Deprecated[] = {
	9,
	0x0149, 0x0149,
	0x0673, 0x0673,
	0x0f77, 0x0f77,
	0x0f79, 0x0f79,
	0x17a3, 0x17a4,
	0x206a, 0x206f,
	0x2329, 0x232a,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
}; /* CR_Deprecated */

/* 'Soft_Dotted': Binary Property */
static const OnigCodePoint CR_Soft_Dotted[] = {
	31,
	0x0069, 0x006a,
	0x012f, 0x012f,
	0x0249, 0x0249,
	0x0268, 0x0268,
	0x029d, 0x029d,
	0x02b2, 0x02b2,
	0x03f3, 0x03f3,
	0x0456, 0x0456,
	0x0458, 0x0458,
	0x1d62, 0x1d62,
	0x1d96, 0x1d96,
	0x1da4, 0x1da4,
	0x1da8, 0x1da8,
	0x1e2d, 0x1e2d,
	0x1ecb, 0x1ecb,
	0x2071, 0x2071,
	0x2148, 0x2149,
	0x2c7c, 0x2c7c,
	0x1d422, 0x1d423,
	0x1d456, 0x1d457,
	0x1d48a, 0x1d48b,
	0x1d4be, 0x1d4bf,
	0x1d4f2, 0x1d4f3,
	0x1d526, 0x1d527,
	0x1d55a, 0x1d55b,
	0x1d58e, 0x1d58f,
	0x1d5c2, 0x1d5c3,
	0x1d5f6, 0x1d5f7,
	0x1d62a, 0x1d62b,
	0x1d65e, 0x1d65f,
	0x1d692, 0x1d693,
}; /* CR_Soft_Dotted */

/* 'Logical_Order_Exception': Binary Property */
static const OnigCodePoint CR_Logical_Order_Exception[] = {
	5,
	0x0e40, 0x0e44,
	0x0ec0, 0x0ec4,
	0xaab5, 0xaab6,
	0xaab9, 0xaab9,
	0xaabb, 0xaabc,
}; /* CR_Logical_Order_Exception */

/* 'Other_ID_Start': Binary Property */
static const OnigCodePoint CR_Other_ID_Start[] = {
	3,
	0x2118, 0x2118,
	0x212e, 0x212e,
	0x309b, 0x309c,
}; /* CR_Other_ID_Start */

/* 'Other_ID_Continue': Binary Property */
static const OnigCodePoint CR_Other_ID_Continue[] = {
	4,
	0x00b7, 0x00b7,
	0x0387, 0x0387,
	0x1369, 0x1371,
	0x19da, 0x19da,
}; /* CR_Other_ID_Continue */

/* 'STerm': Binary Property */
static const OnigCodePoint CR_STerm[] = {
	60,
	0x0021, 0x0021,
	0x002e, 0x002e,
	0x003f, 0x003f,
	0x0589, 0x0589,
	0x061f, 0x061f,
	0x06d4, 0x06d4,
	0x0700, 0x0702,
	0x07f9, 0x07f9,
	0x0964, 0x0965,
	0x104a, 0x104b,
	0x1362, 0x1362,
	0x1367, 0x1368,
	0x166e, 0x166e,
	0x1735, 0x1736,
	0x1803, 0x1803,
	0x1809, 0x1809,
	0x1944, 0x1945,
	0x1aa8, 0x1aab,
	0x1b5a, 0x1b5b,
	0x1b5e, 0x1b5f,
	0x1c3b, 0x1c3c,
	0x1c7e, 0x1c7f,
	0x203c, 0x203d,
	0x2047, 0x2049,
	0x2e2e, 0x2e2e,
	0x2e3c, 0x2e3c,
	0x3002, 0x3002,
	0xa4ff, 0xa4ff,
	0xa60e, 0xa60f,
	0xa6f3, 0xa6f3,
	0xa6f7, 0xa6f7,
	0xa876, 0xa877,
	0xa8ce, 0xa8cf,
	0xa92f, 0xa92f,
	0xa9c8, 0xa9c9,
	0xaa5d, 0xaa5f,
	0xaaf0, 0xaaf1,
	0xabeb, 0xabeb,
	0xfe52, 0xfe52,
	0xfe56, 0xfe57,
	0xff01, 0xff01,
	0xff0e, 0xff0e,
	0xff1f, 0xff1f,
	0xff61, 0xff61,
	0x10a56, 0x10a57,
	0x11047, 0x11048,
	0x110be, 0x110c1,
	0x11141, 0x11143,
	0x111c5, 0x111c6,
	0x111cd, 0x111cd,
	0x11238, 0x11239,
	0x1123b, 0x1123c,
	0x115c2, 0x115c3,
	0x115c9, 0x115c9,
	0x11641, 0x11642,
	0x16a6e, 0x16a6f,
	0x16af5, 0x16af5,
	0x16b37, 0x16b38,
	0x16b44, 0x16b44,
	0x1bc9f, 0x1bc9f,
}; /* CR_STerm */

/* 'Variation_Selector': Binary Property */
static const OnigCodePoint CR_Variation_Selector[] = {
	3,
	0x180b, 0x180d,
	0xfe00, 0xfe0f,
	0xe0100, 0xe01ef,
}; /* CR_Variation_Selector */

/* 'Pattern_White_Space': Binary Property */
static const OnigCodePoint CR_Pattern_White_Space[] = {
	5,
	0x0009, 0x000d,
	0x0020, 0x0020,
	0x0085, 0x0085,
	0x200e, 0x200f,
	0x2028, 0x2029,
}; /* CR_Pattern_White_Space */

/* 'Pattern_Syntax': Binary Property */
static const OnigCodePoint CR_Pattern_Syntax[] = {
	28,
	0x0021, 0x002f,
	0x003a, 0x0040,
	0x005b, 0x005e,
	0x0060, 0x0060,
	0x007b, 0x007e,
	0x00a1, 0x00a7,
	0x00a9, 0x00a9,
	0x00ab, 0x00ac,
	0x00ae, 0x00ae,
	0x00b0, 0x00b1,
	0x00b6, 0x00b6,
	0x00bb, 0x00bb,
	0x00bf, 0x00bf,
	0x00d7, 0x00d7,
	0x00f7, 0x00f7,
	0x2010, 0x2027,
	0x2030, 0x203e,
	0x2041, 0x2053,
	0x2055, 0x205e,
	0x2190, 0x245f,
	0x2500, 0x2775,
	0x2794, 0x2bff,
	0x2e00, 0x2e7f,
	0x3001, 0x3003,
	0x3008, 0x3020,
	0x3030, 0x3030,
	0xfd3e, 0xfd3f,
	0xfe45, 0xfe46,
}; /* CR_Pattern_Syntax */

/* 'Unknown': Script */
static const OnigCodePoint CR_Unknown[] = {
	598,
	0x0378, 0x0379,
	0x0380, 0x0383,
	0x038b, 0x038b,
	0x038d, 0x038d,
	0x03a2, 0x03a2,
	0x0530, 0x0530,
	0x0557, 0x0558,
	0x0560, 0x0560,
	0x0588, 0x0588,
	0x058b, 0x058c,
	0x0590, 0x0590,
	0x05c8, 0x05cf,
	0x05eb, 0x05ef,
	0x05f5, 0x05ff,
	0x061d, 0x061d,
	0x070e, 0x070e,
	0x074b, 0x074c,
	0x07b2, 0x07bf,
	0x07fb, 0x07ff,
	0x082e, 0x082f,
	0x083f, 0x083f,
	0x085c, 0x085d,
	0x085f, 0x089f,
	0x08b3, 0x08e3,
	0x0984, 0x0984,
	0x098d, 0x098e,
	0x0991, 0x0992,
	0x09a9, 0x09a9,
	0x09b1, 0x09b1,
	0x09b3, 0x09b5,
	0x09ba, 0x09bb,
	0x09c5, 0x09c6,
	0x09c9, 0x09ca,
	0x09cf, 0x09d6,
	0x09d8, 0x09db,
	0x09de, 0x09de,
	0x09e4, 0x09e5,
	0x09fc, 0x0a00,
	0x0a04, 0x0a04,
	0x0a0b, 0x0a0e,
	0x0a11, 0x0a12,
	0x0a29, 0x0a29,
	0x0a31, 0x0a31,
	0x0a34, 0x0a34,
	0x0a37, 0x0a37,
	0x0a3a, 0x0a3b,
	0x0a3d, 0x0a3d,
	0x0a43, 0x0a46,
	0x0a49, 0x0a4a,
	0x0a4e, 0x0a50,
	0x0a52, 0x0a58,
	0x0a5d, 0x0a5d,
	0x0a5f, 0x0a65,
	0x0a76, 0x0a80,
	0x0a84, 0x0a84,
	0x0a8e, 0x0a8e,
	0x0a92, 0x0a92,
	0x0aa9, 0x0aa9,
	0x0ab1, 0x0ab1,
	0x0ab4, 0x0ab4,
	0x0aba, 0x0abb,
	0x0ac6, 0x0ac6,
	0x0aca, 0x0aca,
	0x0ace, 0x0acf,
	0x0ad1, 0x0adf,
	0x0ae4, 0x0ae5,
	0x0af2, 0x0b00,
	0x0b04, 0x0b04,
	0x0b0d, 0x0b0e,
	0x0b11, 0x0b12,
	0x0b29, 0x0b29,
	0x0b31, 0x0b31,
	0x0b34, 0x0b34,
	0x0b3a, 0x0b3b,
	0x0b45, 0x0b46,
	0x0b49, 0x0b4a,
	0x0b4e, 0x0b55,
	0x0b58, 0x0b5b,
	0x0b5e, 0x0b5e,
	0x0b64, 0x0b65,
	0x0b78, 0x0b81,
	0x0b84, 0x0b84,
	0x0b8b, 0x0b8d,
	0x0b91, 0x0b91,
	0x0b96, 0x0b98,
	0x0b9b, 0x0b9b,
	0x0b9d, 0x0b9d,
	0x0ba0, 0x0ba2,
	0x0ba5, 0x0ba7,
	0x0bab, 0x0bad,
	0x0bba, 0x0bbd,
	0x0bc3, 0x0bc5,
	0x0bc9, 0x0bc9,
	0x0bce, 0x0bcf,
	0x0bd1, 0x0bd6,
	0x0bd8, 0x0be5,
	0x0bfb, 0x0bff,
	0x0c04, 0x0c04,
	0x0c0d, 0x0c0d,
	0x0c11, 0x0c11,
	0x0c29, 0x0c29,
	0x0c3a, 0x0c3c,
	0x0c45, 0x0c45,
	0x0c49, 0x0c49,
	0x0c4e, 0x0c54,
	0x0c57, 0x0c57,
	0x0c5a, 0x0c5f,
	0x0c64, 0x0c65,
	0x0c70, 0x0c77,
	0x0c80, 0x0c80,
	0x0c84, 0x0c84,
	0x0c8d, 0x0c8d,
	0x0c91, 0x0c91,
	0x0ca9, 0x0ca9,
	0x0cb4, 0x0cb4,
	0x0cba, 0x0cbb,
	0x0cc5, 0x0cc5,
	0x0cc9, 0x0cc9,
	0x0cce, 0x0cd4,
	0x0cd7, 0x0cdd,
	0x0cdf, 0x0cdf,
	0x0ce4, 0x0ce5,
	0x0cf0, 0x0cf0,
	0x0cf3, 0x0d00,
	0x0d04, 0x0d04,
	0x0d0d, 0x0d0d,
	0x0d11, 0x0d11,
	0x0d3b, 0x0d3c,
	0x0d45, 0x0d45,
	0x0d49, 0x0d49,
	0x0d4f, 0x0d56,
	0x0d58, 0x0d5f,
	0x0d64, 0x0d65,
	0x0d76, 0x0d78,
	0x0d80, 0x0d81,
	0x0d84, 0x0d84,
	0x0d97, 0x0d99,
	0x0db2, 0x0db2,
	0x0dbc, 0x0dbc,
	0x0dbe, 0x0dbf,
	0x0dc7, 0x0dc9,
	0x0dcb, 0x0dce,
	0x0dd5, 0x0dd5,
	0x0dd7, 0x0dd7,
	0x0de0, 0x0de5,
	0x0df0, 0x0df1,
	0x0df5, 0x0e00,
	0x0e3b, 0x0e3e,
	0x0e5c, 0x0e80,
	0x0e83, 0x0e83,
	0x0e85, 0x0e86,
	0x0e89, 0x0e89,
	0x0e8b, 0x0e8c,
	0x0e8e, 0x0e93,
	0x0e98, 0x0e98,
	0x0ea0, 0x0ea0,
	0x0ea4, 0x0ea4,
	0x0ea6, 0x0ea6,
	0x0ea8, 0x0ea9,
	0x0eac, 0x0eac,
	0x0eba, 0x0eba,
	0x0ebe, 0x0ebf,
	0x0ec5, 0x0ec5,
	0x0ec7, 0x0ec7,
	0x0ece, 0x0ecf,
	0x0eda, 0x0edb,
	0x0ee0, 0x0eff,
	0x0f48, 0x0f48,
	0x0f6d, 0x0f70,
	0x0f98, 0x0f98,
	0x0fbd, 0x0fbd,
	0x0fcd, 0x0fcd,
	0x0fdb, 0x0fff,
	0x10c6, 0x10c6,
	0x10c8, 0x10cc,
	0x10ce, 0x10cf,
	0x1249, 0x1249,
	0x124e, 0x124f,
	0x1257, 0x1257,
	0x1259, 0x1259,
	0x125e, 0x125f,
	0x1289, 0x1289,
	0x128e, 0x128f,
	0x12b1, 0x12b1,
	0x12b6, 0x12b7,
	0x12bf, 0x12bf,
	0x12c1, 0x12c1,
	0x12c6, 0x12c7,
	0x12d7, 0x12d7,
	0x1311, 0x1311,
	0x1316, 0x1317,
	0x135b, 0x135c,
	0x137d, 0x137f,
	0x139a, 0x139f,
	0x13f5, 0x13ff,
	0x169d, 0x169f,
	0x16f9, 0x16ff,
	0x170d, 0x170d,
	0x1715, 0x171f,
	0x1737, 0x173f,
	0x1754, 0x175f,
	0x176d, 0x176d,
	0x1771, 0x1771,
	0x1774, 0x177f,
	0x17de, 0x17df,
	0x17ea, 0x17ef,
	0x17fa, 0x17ff,
	0x180f, 0x180f,
	0x181a, 0x181f,
	0x1878, 0x187f,
	0x18ab, 0x18af,
	0x18f6, 0x18ff,
	0x191f, 0x191f,
	0x192c, 0x192f,
	0x193c, 0x193f,
	0x1941, 0x1943,
	0x196e, 0x196f,
	0x1975, 0x197f,
	0x19ac, 0x19af,
	0x19ca, 0x19cf,
	0x19db, 0x19dd,
	0x1a1c, 0x1a1d,
	0x1a5f, 0x1a5f,
	0x1a7d, 0x1a7e,
	0x1a8a, 0x1a8f,
	0x1a9a, 0x1a9f,
	0x1aae, 0x1aaf,
	0x1abf, 0x1aff,
	0x1b4c, 0x1b4f,
	0x1b7d, 0x1b7f,
	0x1bf4, 0x1bfb,
	0x1c38, 0x1c3a,
	0x1c4a, 0x1c4c,
	0x1c80, 0x1cbf,
	0x1cc8, 0x1ccf,
	0x1cf7, 0x1cf7,
	0x1cfa, 0x1cff,
	0x1df6, 0x1dfb,
	0x1f16, 0x1f17,
	0x1f1e, 0x1f1f,
	0x1f46, 0x1f47,
	0x1f4e, 0x1f4f,
	0x1f58, 0x1f58,
	0x1f5a, 0x1f5a,
	0x1f5c, 0x1f5c,
	0x1f5e, 0x1f5e,
	0x1f7e, 0x1f7f,
	0x1fb5, 0x1fb5,
	0x1fc5, 0x1fc5,
	0x1fd4, 0x1fd5,
	0x1fdc, 0x1fdc,
	0x1ff0, 0x1ff1,
	0x1ff5, 0x1ff5,
	0x1fff, 0x1fff,
	0x2065, 0x2065,
	0x2072, 0x2073,
	0x208f, 0x208f,
	0x209d, 0x209f,
	0x20be, 0x20cf,
	0x20f1, 0x20ff,
	0x218a, 0x218f,
	0x23fb, 0x23ff,
	0x2427, 0x243f,
	0x244b, 0x245f,
	0x2b74, 0x2b75,
	0x2b96, 0x2b97,
	0x2bba, 0x2bbc,
	0x2bc9, 0x2bc9,
	0x2bd2, 0x2bff,
	0x2c2f, 0x2c2f,
	0x2c5f, 0x2c5f,
	0x2cf4, 0x2cf8,
	0x2d26, 0x2d26,
	0x2d28, 0x2d2c,
	0x2d2e, 0x2d2f,
	0x2d68, 0x2d6e,
	0x2d71, 0x2d7e,
	0x2d97, 0x2d9f,
	0x2da7, 0x2da7,
	0x2daf, 0x2daf,
	0x2db7, 0x2db7,
	0x2dbf, 0x2dbf,
	0x2dc7, 0x2dc7,
	0x2dcf, 0x2dcf,
	0x2dd7, 0x2dd7,
	0x2ddf, 0x2ddf,
	0x2e43, 0x2e7f,
	0x2e9a, 0x2e9a,
	0x2ef4, 0x2eff,
	0x2fd6, 0x2fef,
	0x2ffc, 0x2fff,
	0x3040, 0x3040,
	0x3097, 0x3098,
	0x3100, 0x3104,
	0x312e, 0x3130,
	0x318f, 0x318f,
	0x31bb, 0x31bf,
	0x31e4, 0x31ef,
	0x321f, 0x321f,
	0x32ff, 0x32ff,
	0x4db6, 0x4dbf,
	0x9fcd, 0x9fff,
	0xa48d, 0xa48f,
	0xa4c7, 0xa4cf,
	0xa62c, 0xa63f,
	0xa69e, 0xa69e,
	0xa6f8, 0xa6ff,
	0xa78f, 0xa78f,
	0xa7ae, 0xa7af,
	0xa7b2, 0xa7f6,
	0xa82c, 0xa82f,
	0xa83a, 0xa83f,
	0xa878, 0xa87f,
	0xa8c5, 0xa8cd,
	0xa8da, 0xa8df,
	0xa8fc, 0xa8ff,
	0xa954, 0xa95e,
	0xa97d, 0xa97f,
	0xa9ce, 0xa9ce,
	0xa9da, 0xa9dd,
	0xa9ff, 0xa9ff,
	0xaa37, 0xaa3f,
	0xaa4e, 0xaa4f,
	0xaa5a, 0xaa5b,
	0xaac3, 0xaada,
	0xaaf7, 0xab00,
	0xab07, 0xab08,
	0xab0f, 0xab10,
	0xab17, 0xab1f,
	0xab27, 0xab27,
	0xab2f, 0xab2f,
	0xab60, 0xab63,
	0xab66, 0xabbf,
	0xabee, 0xabef,
	0xabfa, 0xabff,
	0xd7a4, 0xd7af,
	0xd7c7, 0xd7ca,
	0xd7fc, 0xf8ff,
	0xfa6e, 0xfa6f,
	0xfada, 0xfaff,
	0xfb07, 0xfb12,
	0xfb18, 0xfb1c,
	0xfb37, 0xfb37,
	0xfb3d, 0xfb3d,
	0xfb3f, 0xfb3f,
	0xfb42, 0xfb42,
	0xfb45, 0xfb45,
	0xfbc2, 0xfbd2,
	0xfd40, 0xfd4f,
	0xfd90, 0xfd91,
	0xfdc8, 0xfdef,
	0xfdfe, 0xfdff,
	0xfe1a, 0xfe1f,
	0xfe2e, 0xfe2f,
	0xfe53, 0xfe53,
	0xfe67, 0xfe67,
	0xfe6c, 0xfe6f,
	0xfe75, 0xfe75,
	0xfefd, 0xfefe,
	0xff00, 0xff00,
	0xffbf, 0xffc1,
	0xffc8, 0xffc9,
	0xffd0, 0xffd1,
	0xffd8, 0xffd9,
	0xffdd, 0xffdf,
	0xffe7, 0xffe7,
	0xffef, 0xfff8,
	0xfffe, 0xffff,
	0x1000c, 0x1000c,
	0x10027, 0x10027,
	0x1003b, 0x1003b,
	0x1003e, 0x1003e,
	0x1004e, 0x1004f,
	0x1005e, 0x1007f,
	0x100fb, 0x100ff,
	0x10103, 0x10106,
	0x10134, 0x10136,
	0x1018d, 0x1018f,
	0x1019c, 0x1019f,
	0x101a1, 0x101cf,
	0x101fe, 0x1027f,
	0x1029d, 0x1029f,
	0x102d1, 0x102df,
	0x102fc, 0x102ff,
	0x10324, 0x1032f,
	0x1034b, 0x1034f,
	0x1037b, 0x1037f,
	0x1039e, 0x1039e,
	0x103c4, 0x103c7,
	0x103d6, 0x103ff,
	0x1049e, 0x1049f,
	0x104aa, 0x104ff,
	0x10528, 0x1052f,
	0x10564, 0x1056e,
	0x10570, 0x105ff,
	0x10737, 0x1073f,
	0x10756, 0x1075f,
	0x10768, 0x107ff,
	0x10806, 0x10807,
	0x10809, 0x10809,
	0x10836, 0x10836,
	0x10839, 0x1083b,
	0x1083d, 0x1083e,
	0x10856, 0x10856,
	0x1089f, 0x108a6,
	0x108b0, 0x108ff,
	0x1091c, 0x1091e,
	0x1093a, 0x1093e,
	0x10940, 0x1097f,
	0x109b8, 0x109bd,
	0x109c0, 0x109ff,
	0x10a04, 0x10a04,
	0x10a07, 0x10a0b,
	0x10a14, 0x10a14,
	0x10a18, 0x10a18,
	0x10a34, 0x10a37,
	0x10a3b, 0x10a3e,
	0x10a48, 0x10a4f,
	0x10a59, 0x10a5f,
	0x10aa0, 0x10abf,
	0x10ae7, 0x10aea,
	0x10af7, 0x10aff,
	0x10b36, 0x10b38,
	0x10b56, 0x10b57,
	0x10b73, 0x10b77,
	0x10b92, 0x10b98,
	0x10b9d, 0x10ba8,
	0x10bb0, 0x10bff,
	0x10c49, 0x10e5f,
	0x10e7f, 0x10fff,
	0x1104e, 0x11051,
	0x11070, 0x1107e,
	0x110c2, 0x110cf,
	0x110e9, 0x110ef,
	0x110fa, 0x110ff,
	0x11135, 0x11135,
	0x11144, 0x1114f,
	0x11177, 0x1117f,
	0x111c9, 0x111cc,
	0x111ce, 0x111cf,
	0x111db, 0x111e0,
	0x111f5, 0x111ff,
	0x11212, 0x11212,
	0x1123e, 0x112af,
	0x112eb, 0x112ef,
	0x112fa, 0x11300,
	0x11304, 0x11304,
	0x1130d, 0x1130e,
	0x11311, 0x11312,
	0x11329, 0x11329,
	0x11331, 0x11331,
	0x11334, 0x11334,
	0x1133a, 0x1133b,
	0x11345, 0x11346,
	0x11349, 0x1134a,
	0x1134e, 0x11356,
	0x11358, 0x1135c,
	0x11364, 0x11365,
	0x1136d, 0x1136f,
	0x11375, 0x1147f,
	0x114c8, 0x114cf,
	0x114da, 0x1157f,
	0x115b6, 0x115b7,
	0x115ca, 0x115ff,
	0x11645, 0x1164f,
	0x1165a, 0x1167f,
	0x116b8, 0x116bf,
	0x116ca, 0x1189f,
	0x118f3, 0x118fe,
	0x11900, 0x11abf,
	0x11af9, 0x11fff,
	0x12399, 0x123ff,
	0x1246f, 0x1246f,
	0x12475, 0x12fff,
	0x1342f, 0x167ff,
	0x16a39, 0x16a3f,
	0x16a5f, 0x16a5f,
	0x16a6a, 0x16a6d,
	0x16a70, 0x16acf,
	0x16aee, 0x16aef,
	0x16af6, 0x16aff,
	0x16b46, 0x16b4f,
	0x16b5a, 0x16b5a,
	0x16b62, 0x16b62,
	0x16b78, 0x16b7c,
	0x16b90, 0x16eff,
	0x16f45, 0x16f4f,
	0x16f7f, 0x16f8e,
	0x16fa0, 0x1afff,
	0x1b002, 0x1bbff,
	0x1bc6b, 0x1bc6f,
	0x1bc7d, 0x1bc7f,
	0x1bc89, 0x1bc8f,
	0x1bc9a, 0x1bc9b,
	0x1bca4, 0x1cfff,
	0x1d0f6, 0x1d0ff,
	0x1d127, 0x1d128,
	0x1d1de, 0x1d1ff,
	0x1d246, 0x1d2ff,
	0x1d357, 0x1d35f,
	0x1d372, 0x1d3ff,
	0x1d455, 0x1d455,
	0x1d49d, 0x1d49d,
	0x1d4a0, 0x1d4a1,
	0x1d4a3, 0x1d4a4,
	0x1d4a7, 0x1d4a8,
	0x1d4ad, 0x1d4ad,
	0x1d4ba, 0x1d4ba,
	0x1d4bc, 0x1d4bc,
	0x1d4c4, 0x1d4c4,
	0x1d506, 0x1d506,
	0x1d50b, 0x1d50c,
	0x1d515, 0x1d515,
	0x1d51d, 0x1d51d,
	0x1d53a, 0x1d53a,
	0x1d53f, 0x1d53f,
	0x1d545, 0x1d545,
	0x1d547, 0x1d549,
	0x1d551, 0x1d551,
	0x1d6a6, 0x1d6a7,
	0x1d7cc, 0x1d7cd,
	0x1d800, 0x1e7ff,
	0x1e8c5, 0x1e8c6,
	0x1e8d7, 0x1edff,
	0x1ee04, 0x1ee04,
	0x1ee20, 0x1ee20,
	0x1ee23, 0x1ee23,
	0x1ee25, 0x1ee26,
	0x1ee28, 0x1ee28,
	0x1ee33, 0x1ee33,
	0x1ee38, 0x1ee38,
	0x1ee3a, 0x1ee3a,
	0x1ee3c, 0x1ee41,
	0x1ee43, 0x1ee46,
	0x1ee48, 0x1ee48,
	0x1ee4a, 0x1ee4a,
	0x1ee4c, 0x1ee4c,
	0x1ee50, 0x1ee50,
	0x1ee53, 0x1ee53,
	0x1ee55, 0x1ee56,
	0x1ee58, 0x1ee58,
	0x1ee5a, 0x1ee5a,
	0x1ee5c, 0x1ee5c,
	0x1ee5e, 0x1ee5e,
	0x1ee60, 0x1ee60,
	0x1ee63, 0x1ee63,
	0x1ee65, 0x1ee66,
	0x1ee6b, 0x1ee6b,
	0x1ee73, 0x1ee73,
	0x1ee78, 0x1ee78,
	0x1ee7d, 0x1ee7d,
	0x1ee7f, 0x1ee7f,
	0x1ee8a, 0x1ee8a,
	0x1ee9c, 0x1eea0,
	0x1eea4, 0x1eea4,
	0x1eeaa, 0x1eeaa,
	0x1eebc, 0x1eeef,
	0x1eef2, 0x1efff,
	0x1f02c, 0x1f02f,
	0x1f094, 0x1f09f,
	0x1f0af, 0x1f0b0,
	0x1f0c0, 0x1f0c0,
	0x1f0d0, 0x1f0d0,
	0x1f0f6, 0x1f0ff,
	0x1f10d, 0x1f10f,
	0x1f12f, 0x1f12f,
	0x1f16c, 0x1f16f,
	0x1f19b, 0x1f1e5,
	0x1f203, 0x1f20f,
	0x1f23b, 0x1f23f,
	0x1f249, 0x1f24f,
	0x1f252, 0x1f2ff,
	0x1f32d, 0x1f32f,
	0x1f37e, 0x1f37f,
	0x1f3cf, 0x1f3d3,
	0x1f3f8, 0x1f3ff,
	0x1f4ff, 0x1f4ff,
	0x1f54b, 0x1f54f,
	0x1f57a, 0x1f57a,
	0x1f5a4, 0x1f5a4,
	0x1f643, 0x1f644,
	0x1f6d0, 0x1f6df,
	0x1f6ed, 0x1f6ef,
	0x1f6f4, 0x1f6ff,
	0x1f774, 0x1f77f,
	0x1f7d5, 0x1f7ff,
	0x1f80c, 0x1f80f,
	0x1f848, 0x1f84f,
	0x1f85a, 0x1f85f,
	0x1f888, 0x1f88f,
	0x1f8ae, 0x1ffff,
	0x2a6d7, 0x2a6ff,
	0x2b735, 0x2b73f,
	0x2b81e, 0x2f7ff,
	0x2fa1e, 0xe0000,
	0xe0002, 0xe001f,
	0xe0080, 0xe00ff,
	0xe01f0, 0x10ffff,
}; /* CR_Unknown */

#ifdef USE_UNICODE_AGE_PROPERTIES
/* 'Age_1_1': Derived Age 1.1 */
static const OnigCodePoint CR_Age_1_1[] = {
	288,
	0x0000, 0x01f5,
	0x01fa, 0x0217,
	0x0250, 0x02a8,
	0x02b0, 0x02de,
	0x02e0, 0x02e9,
	0x0300, 0x0345,
	0x0360, 0x0361,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03d6,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03f3,
	0x0401, 0x040c,
	0x040e, 0x044f,
	0x0451, 0x045c,
	0x045e, 0x0486,
	0x0490, 0x04c4,
	0x04c7, 0x04c8,
	0x04cb, 0x04cc,
	0x04d0, 0x04eb,
	0x04ee, 0x04f5,
	0x04f8, 0x04f9,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x0589,
	0x05b0, 0x05b9,
	0x05bb, 0x05c3,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0652,
	0x0660, 0x066d,
	0x0670, 0x06b7,
	0x06ba, 0x06be,
	0x06c0, 0x06ce,
	0x06d0, 0x06ed,
	0x06f0, 0x06f9,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x10a0, 0x10c5,
	0x10d0, 0x10f6,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1e00, 0x1e9a,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x202e,
	0x2030, 0x2046,
	0x206a, 0x2070,
	0x2074, 0x208e,
	0x20a0, 0x20aa,
	0x20d0, 0x20e1,
	0x2100, 0x2138,
	0x2153, 0x2182,
	0x2190, 0x21ea,
	0x2200, 0x22f1,
	0x2300, 0x2300,
	0x2302, 0x237a,
	0x2400, 0x2424,
	0x2440, 0x244a,
	0x2460, 0x24ea,
	0x2500, 0x2595,
	0x25a0, 0x25ef,
	0x2600, 0x2613,
	0x261a, 0x266f,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2767,
	0x2776, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x3000, 0x3037,
	0x303f, 0x303f,
	0x3041, 0x3094,
	0x3099, 0x309e,
	0x30a1, 0x30fe,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x319f,
	0x3200, 0x321c,
	0x3220, 0x3243,
	0x3260, 0x327b,
	0x327f, 0x32b0,
	0x32c0, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x4e00, 0x9fa5,
	0xe000, 0xfa2d,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1e, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe20, 0xfe23,
	0xfe30, 0xfe44,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe72,
	0xfe74, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xff5e,
	0xff61, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfffd, 0xffff,
}; /* CR_Age_1_1 */

/* 'Age_2_0': Derived Age 2.0 */
static const OnigCodePoint CR_Age_2_0[] = {
	312,
	0x0000, 0x01f5,
	0x01fa, 0x0217,
	0x0250, 0x02a8,
	0x02b0, 0x02de,
	0x02e0, 0x02e9,
	0x0300, 0x0345,
	0x0360, 0x0361,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03d6,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03f3,
	0x0401, 0x040c,
	0x040e, 0x044f,
	0x0451, 0x045c,
	0x045e, 0x0486,
	0x0490, 0x04c4,
	0x04c7, 0x04c8,
	0x04cb, 0x04cc,
	0x04d0, 0x04eb,
	0x04ee, 0x04f5,
	0x04f8, 0x04f9,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x0589,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0652,
	0x0660, 0x066d,
	0x0670, 0x06b7,
	0x06ba, 0x06be,
	0x06c0, 0x06ce,
	0x06d0, 0x06ed,
	0x06f0, 0x06f9,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f69,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f95,
	0x0f97, 0x0f97,
	0x0f99, 0x0fad,
	0x0fb1, 0x0fb7,
	0x0fb9, 0x0fb9,
	0x10a0, 0x10c5,
	0x10d0, 0x10f6,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x202e,
	0x2030, 0x2046,
	0x206a, 0x2070,
	0x2074, 0x208e,
	0x20a0, 0x20ab,
	0x20d0, 0x20e1,
	0x2100, 0x2138,
	0x2153, 0x2182,
	0x2190, 0x21ea,
	0x2200, 0x22f1,
	0x2300, 0x2300,
	0x2302, 0x237a,
	0x2400, 0x2424,
	0x2440, 0x244a,
	0x2460, 0x24ea,
	0x2500, 0x2595,
	0x25a0, 0x25ef,
	0x2600, 0x2613,
	0x261a, 0x266f,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2767,
	0x2776, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x3000, 0x3037,
	0x303f, 0x303f,
	0x3041, 0x3094,
	0x3099, 0x309e,
	0x30a1, 0x30fe,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x319f,
	0x3200, 0x321c,
	0x3220, 0x3243,
	0x3260, 0x327b,
	0x327f, 0x32b0,
	0x32c0, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x4e00, 0x9fa5,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1e, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe20, 0xfe23,
	0xfe30, 0xfe44,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe72,
	0xfe74, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xff5e,
	0xff61, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfffd, 0xffff,
	0x1fffe, 0x1ffff,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xefffe, 0x10ffff,
}; /* CR_Age_2_0 */

/* 'Age_2_1': Derived Age 2.1 */
static const OnigCodePoint CR_Age_2_1[] = {
	312,
	0x0000, 0x01f5,
	0x01fa, 0x0217,
	0x0250, 0x02a8,
	0x02b0, 0x02de,
	0x02e0, 0x02e9,
	0x0300, 0x0345,
	0x0360, 0x0361,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03d6,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03f3,
	0x0401, 0x040c,
	0x040e, 0x044f,
	0x0451, 0x045c,
	0x045e, 0x0486,
	0x0490, 0x04c4,
	0x04c7, 0x04c8,
	0x04cb, 0x04cc,
	0x04d0, 0x04eb,
	0x04ee, 0x04f5,
	0x04f8, 0x04f9,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x0589,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0652,
	0x0660, 0x066d,
	0x0670, 0x06b7,
	0x06ba, 0x06be,
	0x06c0, 0x06ce,
	0x06d0, 0x06ed,
	0x06f0, 0x06f9,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f69,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f95,
	0x0f97, 0x0f97,
	0x0f99, 0x0fad,
	0x0fb1, 0x0fb7,
	0x0fb9, 0x0fb9,
	0x10a0, 0x10c5,
	0x10d0, 0x10f6,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x202e,
	0x2030, 0x2046,
	0x206a, 0x2070,
	0x2074, 0x208e,
	0x20a0, 0x20ac,
	0x20d0, 0x20e1,
	0x2100, 0x2138,
	0x2153, 0x2182,
	0x2190, 0x21ea,
	0x2200, 0x22f1,
	0x2300, 0x2300,
	0x2302, 0x237a,
	0x2400, 0x2424,
	0x2440, 0x244a,
	0x2460, 0x24ea,
	0x2500, 0x2595,
	0x25a0, 0x25ef,
	0x2600, 0x2613,
	0x261a, 0x266f,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2767,
	0x2776, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x3000, 0x3037,
	0x303f, 0x303f,
	0x3041, 0x3094,
	0x3099, 0x309e,
	0x30a1, 0x30fe,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x319f,
	0x3200, 0x321c,
	0x3220, 0x3243,
	0x3260, 0x327b,
	0x327f, 0x32b0,
	0x32c0, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x4e00, 0x9fa5,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1e, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe20, 0xfe23,
	0xfe30, 0xfe44,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe72,
	0xfe74, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xff5e,
	0xff61, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfffc, 0xffff,
	0x1fffe, 0x1ffff,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xefffe, 0x10ffff,
}; /* CR_Age_2_1 */

/* 'Age_3_0': Derived Age 3.0 */
static const OnigCodePoint CR_Age_3_0[] = {
	369,
	0x0000, 0x021f,
	0x0222, 0x0233,
	0x0250, 0x02ad,
	0x02b0, 0x02ee,
	0x0300, 0x034e,
	0x0360, 0x0362,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03d7,
	0x03da, 0x03f3,
	0x0400, 0x0486,
	0x0488, 0x0489,
	0x048c, 0x04c4,
	0x04c7, 0x04c8,
	0x04cb, 0x04cc,
	0x04d0, 0x04f5,
	0x04f8, 0x04f9,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0655,
	0x0660, 0x066d,
	0x0670, 0x06ed,
	0x06f0, 0x06fe,
	0x0700, 0x070d,
	0x070f, 0x072c,
	0x0730, 0x074a,
	0x0780, 0x07b0,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fcf,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10f6,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1206,
	0x1208, 0x1246,
	0x1248, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1286,
	0x1288, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12ae,
	0x12b0, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12ce,
	0x12d0, 0x12d6,
	0x12d8, 0x12ee,
	0x12f0, 0x130e,
	0x1310, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x131e,
	0x1320, 0x1346,
	0x1348, 0x135a,
	0x1361, 0x137c,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1780, 0x17dc,
	0x17e0, 0x17e9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2046,
	0x2048, 0x204d,
	0x206a, 0x2070,
	0x2074, 0x208e,
	0x20a0, 0x20af,
	0x20d0, 0x20e3,
	0x2100, 0x213a,
	0x2153, 0x2183,
	0x2190, 0x21f3,
	0x2200, 0x22f1,
	0x2300, 0x237b,
	0x237d, 0x239a,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x24ea,
	0x2500, 0x2595,
	0x25a0, 0x25f7,
	0x2600, 0x2613,
	0x2619, 0x2671,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2767,
	0x2776, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x2800, 0x28ff,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303a,
	0x303e, 0x303f,
	0x3041, 0x3094,
	0x3099, 0x309e,
	0x30a1, 0x30fe,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x3200, 0x321c,
	0x3220, 0x3243,
	0x3260, 0x327b,
	0x327f, 0x32b0,
	0x32c0, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x3400, 0x4db5,
	0x4e00, 0x9fa5,
	0xa000, 0xa48c,
	0xa490, 0xa4a1,
	0xa4a4, 0xa4b3,
	0xa4b5, 0xa4c0,
	0xa4c2, 0xa4c4,
	0xa4c6, 0xa4c6,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe20, 0xfe23,
	0xfe30, 0xfe44,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe72,
	0xfe74, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xff5e,
	0xff61, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xffff,
	0x1fffe, 0x1ffff,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xefffe, 0x10ffff,
}; /* CR_Age_3_0 */

/* 'Age_3_1': Derived Age 3.1 */
static const OnigCodePoint CR_Age_3_1[] = {
	402,
	0x0000, 0x021f,
	0x0222, 0x0233,
	0x0250, 0x02ad,
	0x02b0, 0x02ee,
	0x0300, 0x034e,
	0x0360, 0x0362,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03d7,
	0x03da, 0x03f5,
	0x0400, 0x0486,
	0x0488, 0x0489,
	0x048c, 0x04c4,
	0x04c7, 0x04c8,
	0x04cb, 0x04cc,
	0x04d0, 0x04f5,
	0x04f8, 0x04f9,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0655,
	0x0660, 0x066d,
	0x0670, 0x06ed,
	0x06f0, 0x06fe,
	0x0700, 0x070d,
	0x070f, 0x072c,
	0x0730, 0x074a,
	0x0780, 0x07b0,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fcf,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10f6,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1206,
	0x1208, 0x1246,
	0x1248, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1286,
	0x1288, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12ae,
	0x12b0, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12ce,
	0x12d0, 0x12d6,
	0x12d8, 0x12ee,
	0x12f0, 0x130e,
	0x1310, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x131e,
	0x1320, 0x1346,
	0x1348, 0x135a,
	0x1361, 0x137c,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1780, 0x17dc,
	0x17e0, 0x17e9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2046,
	0x2048, 0x204d,
	0x206a, 0x2070,
	0x2074, 0x208e,
	0x20a0, 0x20af,
	0x20d0, 0x20e3,
	0x2100, 0x213a,
	0x2153, 0x2183,
	0x2190, 0x21f3,
	0x2200, 0x22f1,
	0x2300, 0x237b,
	0x237d, 0x239a,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x24ea,
	0x2500, 0x2595,
	0x25a0, 0x25f7,
	0x2600, 0x2613,
	0x2619, 0x2671,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2767,
	0x2776, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x2800, 0x28ff,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303a,
	0x303e, 0x303f,
	0x3041, 0x3094,
	0x3099, 0x309e,
	0x30a1, 0x30fe,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x3200, 0x321c,
	0x3220, 0x3243,
	0x3260, 0x327b,
	0x327f, 0x32b0,
	0x32c0, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x3400, 0x4db5,
	0x4e00, 0x9fa5,
	0xa000, 0xa48c,
	0xa490, 0xa4a1,
	0xa4a4, 0xa4b3,
	0xa4b5, 0xa4c0,
	0xa4c2, 0xa4c4,
	0xa4c6, 0xa4c6,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfb,
	0xfe20, 0xfe23,
	0xfe30, 0xfe44,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe72,
	0xfe74, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xff5e,
	0xff61, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xffff,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10400, 0x10425,
	0x10428, 0x1044d,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d12a, 0x1d1dd,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c0,
	0x1d4c2, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a3,
	0x1d6a8, 0x1d7c9,
	0x1d7ce, 0x1d7ff,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xefffe, 0x10ffff,
}; /* CR_Age_3_1 */

/* 'Age_3_2': Derived Age 3.2 */
static const OnigCodePoint CR_Age_3_2[] = {
	397,
	0x0000, 0x0220,
	0x0222, 0x0233,
	0x0250, 0x02ad,
	0x02b0, 0x02ee,
	0x0300, 0x034f,
	0x0360, 0x036f,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03f6,
	0x0400, 0x0486,
	0x0488, 0x04ce,
	0x04d0, 0x04f5,
	0x04f8, 0x04f9,
	0x0500, 0x050f,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0655,
	0x0660, 0x06ed,
	0x06f0, 0x06fe,
	0x0700, 0x070d,
	0x070f, 0x072c,
	0x0730, 0x074a,
	0x0780, 0x07b1,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fcf,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10f8,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1206,
	0x1208, 0x1246,
	0x1248, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1286,
	0x1288, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12ae,
	0x12b0, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12ce,
	0x12d0, 0x12d6,
	0x12d8, 0x12ee,
	0x12f0, 0x130e,
	0x1310, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x131e,
	0x1320, 0x1346,
	0x1348, 0x135a,
	0x1361, 0x137c,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dc,
	0x17e0, 0x17e9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2052,
	0x2057, 0x2057,
	0x205f, 0x2063,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x20a0, 0x20b1,
	0x20d0, 0x20ea,
	0x2100, 0x213a,
	0x213d, 0x214b,
	0x2153, 0x2183,
	0x2190, 0x23ce,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x24fe,
	0x2500, 0x2613,
	0x2616, 0x2617,
	0x2619, 0x267d,
	0x2680, 0x2689,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27d0, 0x27eb,
	0x27f0, 0x2aff,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31f0, 0x321c,
	0x3220, 0x3243,
	0x3251, 0x327b,
	0x327f, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x3400, 0x4db5,
	0x4e00, 0x9fa5,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6a,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfc,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe23,
	0xfe30, 0xfe46,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xffff,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10400, 0x10425,
	0x10428, 0x1044d,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d12a, 0x1d1dd,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c0,
	0x1d4c2, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a3,
	0x1d6a8, 0x1d7c9,
	0x1d7ce, 0x1d7ff,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xefffe, 0x10ffff,
}; /* CR_Age_3_2 */

/* 'Age_4_0': Derived Age 4.0 */
static const OnigCodePoint CR_Age_4_0[] = {
	412,
	0x0000, 0x0236,
	0x0250, 0x0357,
	0x035d, 0x036f,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03fb,
	0x0400, 0x0486,
	0x0488, 0x04ce,
	0x04d0, 0x04f5,
	0x04f8, 0x04f9,
	0x0500, 0x050f,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x060c, 0x0615,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0658,
	0x0660, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x074f,
	0x0780, 0x07b1,
	0x0901, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fcf,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10f8,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1206,
	0x1208, 0x1246,
	0x1248, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1286,
	0x1288, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12ae,
	0x12b0, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12ce,
	0x12d0, 0x12d6,
	0x12d8, 0x12ee,
	0x12f0, 0x130e,
	0x1310, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x131e,
	0x1320, 0x1346,
	0x1348, 0x135a,
	0x1361, 0x137c,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x19e0, 0x19ff,
	0x1d00, 0x1d6b,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2054,
	0x2057, 0x2057,
	0x205f, 0x2063,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x20a0, 0x20b1,
	0x20d0, 0x20ea,
	0x2100, 0x213b,
	0x213d, 0x214b,
	0x2153, 0x2183,
	0x2190, 0x23d0,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x2617,
	0x2619, 0x267d,
	0x2680, 0x2691,
	0x26a0, 0x26a1,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27d0, 0x27eb,
	0x27f0, 0x2b0d,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31f0, 0x321e,
	0x3220, 0x3243,
	0x3250, 0x327d,
	0x327f, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fa5,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6a,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe23,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1013f,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x1039f,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x1083f,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d12a, 0x1d1dd,
	0x1d300, 0x1d356,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a3,
	0x1d6a8, 0x1d7c9,
	0x1d7ce, 0x1d7ff,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_4_0 */

/* 'Age_4_1': Derived Age 4.1 */
static const OnigCodePoint CR_Age_4_1[] = {
	430,
	0x0000, 0x0241,
	0x0250, 0x036f,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x0486,
	0x0488, 0x04ce,
	0x04d0, 0x04f9,
	0x0500, 0x050f,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05b9,
	0x05bb, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x060b, 0x0615,
	0x061b, 0x061b,
	0x061e, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x065e,
	0x0660, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x076d,
	0x0780, 0x07b1,
	0x0901, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x097d, 0x097d,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fd1,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19a9,
	0x19b0, 0x19c9,
	0x19d0, 0x19d9,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a1f,
	0x1d00, 0x1dc3,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2063,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x2094,
	0x20a0, 0x20b5,
	0x20d0, 0x20eb,
	0x2100, 0x214c,
	0x2153, 0x2183,
	0x2190, 0x23db,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x269c,
	0x26a0, 0x26b1,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27c0, 0x27c6,
	0x27d0, 0x27eb,
	0x27f0, 0x2b13,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c80, 0x2cea,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2e00, 0x2e17,
	0x2e1c, 0x2e1d,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31c0, 0x31cf,
	0x31f0, 0x321e,
	0x3220, 0x3243,
	0x3250, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fbb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa700, 0xa716,
	0xa800, 0xa82b,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6a,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe23,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x1083f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d12a, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7c9,
	0x1d7ce, 0x1d7ff,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_4_1 */

/* 'Age_5_0': Derived Age 5.0 */
static const OnigCodePoint CR_Age_5_0[] = {
	440,
	0x0000, 0x036f,
	0x0374, 0x0375,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x0486,
	0x0488, 0x0513,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x060b, 0x0615,
	0x061b, 0x061b,
	0x061e, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x065e,
	0x0660, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x076d,
	0x0780, 0x07b1,
	0x07c0, 0x07fa,
	0x0901, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x097b, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fd1,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19a9,
	0x19b0, 0x19c9,
	0x19d0, 0x19d9,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a1f,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1d00, 0x1dca,
	0x1dfe, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2063,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x2094,
	0x20a0, 0x20b5,
	0x20d0, 0x20ef,
	0x2100, 0x214e,
	0x2153, 0x2184,
	0x2190, 0x23e7,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x269c,
	0x26a0, 0x26b2,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27c0, 0x27ca,
	0x27d0, 0x27eb,
	0x27f0, 0x2b1a,
	0x2b20, 0x2b23,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2c6c,
	0x2c74, 0x2c77,
	0x2c80, 0x2cea,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2e00, 0x2e17,
	0x2e1c, 0x2e1d,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31c0, 0x31cf,
	0x31f0, 0x321e,
	0x3220, 0x3243,
	0x3250, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fbb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa700, 0xa71a,
	0xa720, 0xa721,
	0xa800, 0xa82b,
	0xa840, 0xa877,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6a,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe23,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x1083f,
	0x10900, 0x10919,
	0x1091f, 0x1091f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d12a, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_5_0 */

/* 'Age_5_1': Derived Age 5.1 */
static const OnigCodePoint CR_Age_5_1[] = {
	455,
	0x0000, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0523,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x0606, 0x061b,
	0x061e, 0x061f,
	0x0621, 0x065e,
	0x0660, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0901, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0972,
	0x097b, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fd4,
	0x1000, 0x1099,
	0x109e, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19a9,
	0x19b0, 0x19c9,
	0x19d0, 0x19d9,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a1f,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1c00, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1d00, 0x1de6,
	0x1dfe, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x2094,
	0x20a0, 0x20b5,
	0x20d0, 0x20f0,
	0x2100, 0x214f,
	0x2153, 0x2188,
	0x2190, 0x23e7,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x269d,
	0x26a0, 0x26bc,
	0x26c0, 0x26c3,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27c0, 0x27ca,
	0x27cc, 0x27cc,
	0x27d0, 0x2b4c,
	0x2b50, 0x2b54,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2c6f,
	0x2c71, 0x2c7d,
	0x2c80, 0x2cea,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e30,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x3243,
	0x3250, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fc3,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa500, 0xa62b,
	0xa640, 0xa65f,
	0xa662, 0xa673,
	0xa67c, 0xa697,
	0xa700, 0xa78c,
	0xa7fb, 0xa82b,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa900, 0xa953,
	0xa95f, 0xa95f,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa5f,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6a,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x1083f,
	0x10900, 0x10919,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_5_1 */

/* 'Age_5_2': Derived Age 5.2 */
static const OnigCodePoint CR_Age_5_2[] = {
	495,
	0x0000, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0525,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x0606, 0x061b,
	0x061e, 0x061f,
	0x0621, 0x065e,
	0x0660, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0900, 0x0939,
	0x093c, 0x094e,
	0x0950, 0x0955,
	0x0958, 0x0972,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fd8,
	0x1000, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1c00, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cd0, 0x1cf2,
	0x1d00, 0x1de6,
	0x1dfd, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x2094,
	0x20a0, 0x20b8,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23e8,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26cd,
	0x26cf, 0x26e1,
	0x26e3, 0x26e3,
	0x26e8, 0x26ff,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27c0, 0x27ca,
	0x27cc, 0x27cc,
	0x27d0, 0x2b4c,
	0x2b50, 0x2b59,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf1,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e31,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa65f,
	0xa662, 0xa673,
	0xa67c, 0xa697,
	0xa6a0, 0xa6f7,
	0xa700, 0xa78c,
	0xa7fb, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaadf,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1085f,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a7f,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b7f,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11080, 0x110c1,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x13000, 0x1342e,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f131, 0x1f131,
	0x1f13d, 0x1f13d,
	0x1f13f, 0x1f13f,
	0x1f142, 0x1f142,
	0x1f146, 0x1f146,
	0x1f14a, 0x1f14e,
	0x1f157, 0x1f157,
	0x1f15f, 0x1f15f,
	0x1f179, 0x1f179,
	0x1f17b, 0x1f17c,
	0x1f17f, 0x1f17f,
	0x1f18a, 0x1f18d,
	0x1f190, 0x1f190,
	0x1f200, 0x1f200,
	0x1f210, 0x1f231,
	0x1f240, 0x1f248,
	0x1fffe, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_5_2 */

/* 'Age_6_0': Derived Age 6.0 */
static const OnigCodePoint CR_Age_6_0[] = {
	511,
	0x0000, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x0606, 0x061b,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x0900, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1bc0, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cd0, 0x1cf2,
	0x1d00, 0x1de6,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20b9,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26ff,
	0x2701, 0x27ca,
	0x27cc, 0x27cc,
	0x27ce, 0x2b4c,
	0x2b50, 0x2b59,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf1,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e31,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa673,
	0xa67c, 0xa697,
	0xa6a0, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaadf,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1085f,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a7f,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b7f,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x11080, 0x110c1,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f169,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f5ff,
	0x1f601, 0x1f610,
	0x1f612, 0x1f614,
	0x1f616, 0x1f616,
	0x1f618, 0x1f618,
	0x1f61a, 0x1f61a,
	0x1f61c, 0x1f61e,
	0x1f620, 0x1f625,
	0x1f628, 0x1f62b,
	0x1f62d, 0x1f62d,
	0x1f630, 0x1f633,
	0x1f635, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
	0x1fffe, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_6_0 */

/* 'Age_6_1': Derived Age 6.1 */
static const OnigCodePoint CR_Age_6_1[] = {
	549,
	0x0000, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x058f, 0x058f,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0604,
	0x0606, 0x061b,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x08a0, 0x08a0,
	0x08a2, 0x08ac,
	0x08e4, 0x08fe,
	0x0900, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cc0, 0x1cc7,
	0x1cd0, 0x1cf6,
	0x1d00, 0x1de6,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20b9,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26ff,
	0x2701, 0x2b4c,
	0x2b50, 0x2b59,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf3,
	0x2cf9, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e3b,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcc,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa697,
	0xa69f, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa793,
	0xa7a0, 0xa7aa,
	0xa7f8, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaaf6,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xd800, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1085f,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a7f,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b7f,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x11080, 0x110c1,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11100, 0x11134,
	0x11136, 0x11143,
	0x11180, 0x111c8,
	0x111d0, 0x111d9,
	0x11680, 0x116b7,
	0x116c0, 0x116c9,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f8f, 0x16f9f,
	0x1b000, 0x1b001,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1eef0, 0x1eef1,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f16b,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f540, 0x1f543,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
	0x1fffe, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_6_1 */

/* 'Age_6_2': Derived Age 6.2 */
static const OnigCodePoint CR_Age_6_2[] = {
	549,
	0x0000, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x058f, 0x058f,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0604,
	0x0606, 0x061b,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x08a0, 0x08a0,
	0x08a2, 0x08ac,
	0x08e4, 0x08fe,
	0x0900, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cc0, 0x1cc7,
	0x1cd0, 0x1cf6,
	0x1d00, 0x1de6,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20ba,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26ff,
	0x2701, 0x2b4c,
	0x2b50, 0x2b59,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf3,
	0x2cf9, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e3b,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcc,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa697,
	0xa69f, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa793,
	0xa7a0, 0xa7aa,
	0xa7f8, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaaf6,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xd800, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1085f,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a7f,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b7f,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x11080, 0x110c1,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11100, 0x11134,
	0x11136, 0x11143,
	0x11180, 0x111c8,
	0x111d0, 0x111d9,
	0x11680, 0x116b7,
	0x116c0, 0x116c9,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f8f, 0x16f9f,
	0x1b000, 0x1b001,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1eef0, 0x1eef1,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f16b,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f540, 0x1f543,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
	0x1fffe, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_6_2 */

/* 'Age_6_3': Derived Age 6.3 */
static const OnigCodePoint CR_Age_6_3[] = {
	549,
	0x0000, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x058f, 0x058f,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0604,
	0x0606, 0x061c,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x08a0, 0x08a0,
	0x08a2, 0x08ac,
	0x08e4, 0x08fe,
	0x0900, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cc0, 0x1cc7,
	0x1cd0, 0x1cf6,
	0x1d00, 0x1de6,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x2066, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20ba,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26ff,
	0x2701, 0x2b4c,
	0x2b50, 0x2b59,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf3,
	0x2cf9, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e3b,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcc,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa697,
	0xa69f, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa793,
	0xa7a0, 0xa7aa,
	0xa7f8, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaaf6,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xd800, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1085f,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a7f,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b7f,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x11080, 0x110c1,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11100, 0x11134,
	0x11136, 0x11143,
	0x11180, 0x111c8,
	0x111d0, 0x111d9,
	0x11680, 0x116b7,
	0x116c0, 0x116c9,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f8f, 0x16f9f,
	0x1b000, 0x1b001,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1eef0, 0x1eef1,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f16b,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f540, 0x1f543,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
	0x1fffe, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_6_3 */

/* 'Age_7_0': Derived Age 7.0 */
static const OnigCodePoint CR_Age_7_0[] = {
	610,
	0x0000, 0x0377,
	0x037a, 0x037f,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x052f,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x058d, 0x058f,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x061c,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x08a0, 0x08b2,
	0x08e4, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c00, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c81, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d01, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0de6, 0x0def,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edf,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10c7, 0x10c7,
	0x10cd, 0x10cd,
	0x10d0, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f8,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191e,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1ab0, 0x1abe,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cc0, 0x1cc7,
	0x1cd0, 0x1cf6,
	0x1cf8, 0x1cf9,
	0x1d00, 0x1df5,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x2066, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20bd,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23fa,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x2b73,
	0x2b76, 0x2b95,
	0x2b98, 0x2bb9,
	0x2bbd, 0x2bc8,
	0x2bca, 0x2bd1,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf3,
	0x2cf9, 0x2d25,
	0x2d27, 0x2d27,
	0x2d2d, 0x2d2d,
	0x2d30, 0x2d67,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e42,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcc,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa69d,
	0xa69f, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa7ad,
	0xa7b0, 0xa7b1,
	0xa7f7, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9fe,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaac2,
	0xaadb, 0xaaf6,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xab30, 0xab5f,
	0xab64, 0xab65,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xd800, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe2d,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018c,
	0x10190, 0x1019b,
	0x101a0, 0x101a0,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x102e0, 0x102fb,
	0x10300, 0x10323,
	0x10330, 0x1034a,
	0x10350, 0x1037a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10500, 0x10527,
	0x10530, 0x10563,
	0x1056f, 0x1056f,
	0x10600, 0x10736,
	0x10740, 0x10755,
	0x10760, 0x10767,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1089e,
	0x108a7, 0x108af,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10980, 0x109b7,
	0x109be, 0x109bf,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a9f,
	0x10ac0, 0x10ae6,
	0x10aeb, 0x10af6,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b91,
	0x10b99, 0x10b9c,
	0x10ba9, 0x10baf,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x1107f, 0x110c1,
	0x110d0, 0x110e8,
	0x110f0, 0x110f9,
	0x11100, 0x11134,
	0x11136, 0x11143,
	0x11150, 0x11176,
	0x11180, 0x111c8,
	0x111cd, 0x111cd,
	0x111d0, 0x111da,
	0x111e1, 0x111f4,
	0x11200, 0x11211,
	0x11213, 0x1123d,
	0x112b0, 0x112ea,
	0x112f0, 0x112f9,
	0x11301, 0x11303,
	0x11305, 0x1130c,
	0x1130f, 0x11310,
	0x11313, 0x11328,
	0x1132a, 0x11330,
	0x11332, 0x11333,
	0x11335, 0x11339,
	0x1133c, 0x11344,
	0x11347, 0x11348,
	0x1134b, 0x1134d,
	0x11357, 0x11357,
	0x1135d, 0x11363,
	0x11366, 0x1136c,
	0x11370, 0x11374,
	0x11480, 0x114c7,
	0x114d0, 0x114d9,
	0x11580, 0x115b5,
	0x115b8, 0x115c9,
	0x11600, 0x11644,
	0x11650, 0x11659,
	0x11680, 0x116b7,
	0x116c0, 0x116c9,
	0x118a0, 0x118f2,
	0x118ff, 0x118ff,
	0x11ac0, 0x11af8,
	0x12000, 0x12398,
	0x12400, 0x1246e,
	0x12470, 0x12474,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x16a40, 0x16a5e,
	0x16a60, 0x16a69,
	0x16a6e, 0x16a6f,
	0x16ad0, 0x16aed,
	0x16af0, 0x16af5,
	0x16b00, 0x16b45,
	0x16b50, 0x16b59,
	0x16b5b, 0x16b61,
	0x16b63, 0x16b77,
	0x16b7d, 0x16b8f,
	0x16f00, 0x16f44,
	0x16f50, 0x16f7e,
	0x16f8f, 0x16f9f,
	0x1b000, 0x1b001,
	0x1bc00, 0x1bc6a,
	0x1bc70, 0x1bc7c,
	0x1bc80, 0x1bc88,
	0x1bc90, 0x1bc99,
	0x1bc9c, 0x1bca3,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1e800, 0x1e8c4,
	0x1e8c7, 0x1e8d6,
	0x1ee00, 0x1ee03,
	0x1ee05, 0x1ee1f,
	0x1ee21, 0x1ee22,
	0x1ee24, 0x1ee24,
	0x1ee27, 0x1ee27,
	0x1ee29, 0x1ee32,
	0x1ee34, 0x1ee37,
	0x1ee39, 0x1ee39,
	0x1ee3b, 0x1ee3b,
	0x1ee42, 0x1ee42,
	0x1ee47, 0x1ee47,
	0x1ee49, 0x1ee49,
	0x1ee4b, 0x1ee4b,
	0x1ee4d, 0x1ee4f,
	0x1ee51, 0x1ee52,
	0x1ee54, 0x1ee54,
	0x1ee57, 0x1ee57,
	0x1ee59, 0x1ee59,
	0x1ee5b, 0x1ee5b,
	0x1ee5d, 0x1ee5d,
	0x1ee5f, 0x1ee5f,
	0x1ee61, 0x1ee62,
	0x1ee64, 0x1ee64,
	0x1ee67, 0x1ee6a,
	0x1ee6c, 0x1ee72,
	0x1ee74, 0x1ee77,
	0x1ee79, 0x1ee7c,
	0x1ee7e, 0x1ee7e,
	0x1ee80, 0x1ee89,
	0x1ee8b, 0x1ee9b,
	0x1eea1, 0x1eea3,
	0x1eea5, 0x1eea9,
	0x1eeab, 0x1eebb,
	0x1eef0, 0x1eef1,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0bf,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0f5,
	0x1f100, 0x1f10c,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f16b,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f32c,
	0x1f330, 0x1f37d,
	0x1f380, 0x1f3ce,
	0x1f3d4, 0x1f3f7,
	0x1f400, 0x1f4fe,
	0x1f500, 0x1f54a,
	0x1f550, 0x1f579,
	0x1f57b, 0x1f5a3,
	0x1f5a5, 0x1f642,
	0x1f645, 0x1f6cf,
	0x1f6e0, 0x1f6ec,
	0x1f6f0, 0x1f6f3,
	0x1f700, 0x1f773,
	0x1f780, 0x1f7d4,
	0x1f800, 0x1f80b,
	0x1f810, 0x1f847,
	0x1f850, 0x1f859,
	0x1f860, 0x1f887,
	0x1f890, 0x1f8ad,
	0x1fffe, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_7_0 */
#endif /* USE_UNICODE_AGE_PROPERTIES */

/* 'In_Basic_Latin': Block */
#define CR_In_Basic_Latin CR_ASCII

/* 'In_Latin_1_Supplement': Block */
static const OnigCodePoint CR_In_Latin_1_Supplement[] = {
	1,
	0x0080, 0x00ff,
}; /* CR_In_Latin_1_Supplement */

/* 'In_Latin_Extended_A': Block */
static const OnigCodePoint CR_In_Latin_Extended_A[] = {
	1,
	0x0100, 0x017f,
}; /* CR_In_Latin_Extended_A */

/* 'In_Latin_Extended_B': Block */
static const OnigCodePoint CR_In_Latin_Extended_B[] = {
	1,
	0x0180, 0x024f,
}; /* CR_In_Latin_Extended_B */

/* 'In_IPA_Extensions': Block */
static const OnigCodePoint CR_In_IPA_Extensions[] = {
	1,
	0x0250, 0x02af,
}; /* CR_In_IPA_Extensions */

/* 'In_Spacing_Modifier_Letters': Block */
static const OnigCodePoint CR_In_Spacing_Modifier_Letters[] = {
	1,
	0x02b0, 0x02ff,
}; /* CR_In_Spacing_Modifier_Letters */

/* 'In_Combining_Diacritical_Marks': Block */
static const OnigCodePoint CR_In_Combining_Diacritical_Marks[] = {
	1,
	0x0300, 0x036f,
}; /* CR_In_Combining_Diacritical_Marks */

/* 'In_Greek_and_Coptic': Block */
static const OnigCodePoint CR_In_Greek_and_Coptic[] = {
	1,
	0x0370, 0x03ff,
}; /* CR_In_Greek_and_Coptic */

/* 'In_Cyrillic': Block */
static const OnigCodePoint CR_In_Cyrillic[] = {
	1,
	0x0400, 0x04ff,
}; /* CR_In_Cyrillic */

/* 'In_Cyrillic_Supplement': Block */
static const OnigCodePoint CR_In_Cyrillic_Supplement[] = {
	1,
	0x0500, 0x052f,
}; /* CR_In_Cyrillic_Supplement */

/* 'In_Armenian': Block */
static const OnigCodePoint CR_In_Armenian[] = {
	1,
	0x0530, 0x058f,
}; /* CR_In_Armenian */

/* 'In_Hebrew': Block */
static const OnigCodePoint CR_In_Hebrew[] = {
	1,
	0x0590, 0x05ff,
}; /* CR_In_Hebrew */

/* 'In_Arabic': Block */
static const OnigCodePoint CR_In_Arabic[] = {
	1,
	0x0600, 0x06ff,
}; /* CR_In_Arabic */

/* 'In_Syriac': Block */
static const OnigCodePoint CR_In_Syriac[] = {
	1,
	0x0700, 0x074f,
}; /* CR_In_Syriac */

/* 'In_Arabic_Supplement': Block */
static const OnigCodePoint CR_In_Arabic_Supplement[] = {
	1,
	0x0750, 0x077f,
}; /* CR_In_Arabic_Supplement */

/* 'In_Thaana': Block */
static const OnigCodePoint CR_In_Thaana[] = {
	1,
	0x0780, 0x07bf,
}; /* CR_In_Thaana */

/* 'In_NKo': Block */
static const OnigCodePoint CR_In_NKo[] = {
	1,
	0x07c0, 0x07ff,
}; /* CR_In_NKo */

/* 'In_Samaritan': Block */
static const OnigCodePoint CR_In_Samaritan[] = {
	1,
	0x0800, 0x083f,
}; /* CR_In_Samaritan */

/* 'In_Mandaic': Block */
static const OnigCodePoint CR_In_Mandaic[] = {
	1,
	0x0840, 0x085f,
}; /* CR_In_Mandaic */

/* 'In_Arabic_Extended_A': Block */
static const OnigCodePoint CR_In_Arabic_Extended_A[] = {
	1,
	0x08a0, 0x08ff,
}; /* CR_In_Arabic_Extended_A */

/* 'In_Devanagari': Block */
static const OnigCodePoint CR_In_Devanagari[] = {
	1,
	0x0900, 0x097f,
}; /* CR_In_Devanagari */

/* 'In_Bengali': Block */
static const OnigCodePoint CR_In_Bengali[] = {
	1,
	0x0980, 0x09ff,
}; /* CR_In_Bengali */

/* 'In_Gurmukhi': Block */
static const OnigCodePoint CR_In_Gurmukhi[] = {
	1,
	0x0a00, 0x0a7f,
}; /* CR_In_Gurmukhi */

/* 'In_Gujarati': Block */
static const OnigCodePoint CR_In_Gujarati[] = {
	1,
	0x0a80, 0x0aff,
}; /* CR_In_Gujarati */

/* 'In_Oriya': Block */
static const OnigCodePoint CR_In_Oriya[] = {
	1,
	0x0b00, 0x0b7f,
}; /* CR_In_Oriya */

/* 'In_Tamil': Block */
static const OnigCodePoint CR_In_Tamil[] = {
	1,
	0x0b80, 0x0bff,
}; /* CR_In_Tamil */

/* 'In_Telugu': Block */
static const OnigCodePoint CR_In_Telugu[] = {
	1,
	0x0c00, 0x0c7f,
}; /* CR_In_Telugu */

/* 'In_Kannada': Block */
static const OnigCodePoint CR_In_Kannada[] = {
	1,
	0x0c80, 0x0cff,
}; /* CR_In_Kannada */

/* 'In_Malayalam': Block */
static const OnigCodePoint CR_In_Malayalam[] = {
	1,
	0x0d00, 0x0d7f,
}; /* CR_In_Malayalam */

/* 'In_Sinhala': Block */
static const OnigCodePoint CR_In_Sinhala[] = {
	1,
	0x0d80, 0x0dff,
}; /* CR_In_Sinhala */

/* 'In_Thai': Block */
static const OnigCodePoint CR_In_Thai[] = {
	1,
	0x0e00, 0x0e7f,
}; /* CR_In_Thai */

/* 'In_Lao': Block */
static const OnigCodePoint CR_In_Lao[] = {
	1,
	0x0e80, 0x0eff,
}; /* CR_In_Lao */

/* 'In_Tibetan': Block */
static const OnigCodePoint CR_In_Tibetan[] = {
	1,
	0x0f00, 0x0fff,
}; /* CR_In_Tibetan */

/* 'In_Myanmar': Block */
static const OnigCodePoint CR_In_Myanmar[] = {
	1,
	0x1000, 0x109f,
}; /* CR_In_Myanmar */

/* 'In_Georgian': Block */
static const OnigCodePoint CR_In_Georgian[] = {
	1,
	0x10a0, 0x10ff,
}; /* CR_In_Georgian */

/* 'In_Hangul_Jamo': Block */
static const OnigCodePoint CR_In_Hangul_Jamo[] = {
	1,
	0x1100, 0x11ff,
}; /* CR_In_Hangul_Jamo */

/* 'In_Ethiopic': Block */
static const OnigCodePoint CR_In_Ethiopic[] = {
	1,
	0x1200, 0x137f,
}; /* CR_In_Ethiopic */

/* 'In_Ethiopic_Supplement': Block */
static const OnigCodePoint CR_In_Ethiopic_Supplement[] = {
	1,
	0x1380, 0x139f,
}; /* CR_In_Ethiopic_Supplement */

/* 'In_Cherokee': Block */
static const OnigCodePoint CR_In_Cherokee[] = {
	1,
	0x13a0, 0x13ff,
}; /* CR_In_Cherokee */

/* 'In_Unified_Canadian_Aboriginal_Syllabics': Block */
static const OnigCodePoint CR_In_Unified_Canadian_Aboriginal_Syllabics[] = {
	1,
	0x1400, 0x167f,
}; /* CR_In_Unified_Canadian_Aboriginal_Syllabics */

/* 'In_Ogham': Block */
static const OnigCodePoint CR_In_Ogham[] = {
	1,
	0x1680, 0x169f,
}; /* CR_In_Ogham */

/* 'In_Runic': Block */
static const OnigCodePoint CR_In_Runic[] = {
	1,
	0x16a0, 0x16ff,
}; /* CR_In_Runic */

/* 'In_Tagalog': Block */
static const OnigCodePoint CR_In_Tagalog[] = {
	1,
	0x1700, 0x171f,
}; /* CR_In_Tagalog */

/* 'In_Hanunoo': Block */
static const OnigCodePoint CR_In_Hanunoo[] = {
	1,
	0x1720, 0x173f,
}; /* CR_In_Hanunoo */

/* 'In_Buhid': Block */
static const OnigCodePoint CR_In_Buhid[] = {
	1,
	0x1740, 0x175f,
}; /* CR_In_Buhid */

/* 'In_Tagbanwa': Block */
static const OnigCodePoint CR_In_Tagbanwa[] = {
	1,
	0x1760, 0x177f,
}; /* CR_In_Tagbanwa */

/* 'In_Khmer': Block */
static const OnigCodePoint CR_In_Khmer[] = {
	1,
	0x1780, 0x17ff,
}; /* CR_In_Khmer */

/* 'In_Mongolian': Block */
static const OnigCodePoint CR_In_Mongolian[] = {
	1,
	0x1800, 0x18af,
}; /* CR_In_Mongolian */

/* 'In_Unified_Canadian_Aboriginal_Syllabics_Extended': Block */
static const OnigCodePoint CR_In_Unified_Canadian_Aboriginal_Syllabics_Extended[] = {
	1,
	0x18b0, 0x18ff,
}; /* CR_In_Unified_Canadian_Aboriginal_Syllabics_Extended */

/* 'In_Limbu': Block */
static const OnigCodePoint CR_In_Limbu[] = {
	1,
	0x1900, 0x194f,
}; /* CR_In_Limbu */

/* 'In_Tai_Le': Block */
static const OnigCodePoint CR_In_Tai_Le[] = {
	1,
	0x1950, 0x197f,
}; /* CR_In_Tai_Le */

/* 'In_New_Tai_Lue': Block */
static const OnigCodePoint CR_In_New_Tai_Lue[] = {
	1,
	0x1980, 0x19df,
}; /* CR_In_New_Tai_Lue */

/* 'In_Khmer_Symbols': Block */
static const OnigCodePoint CR_In_Khmer_Symbols[] = {
	1,
	0x19e0, 0x19ff,
}; /* CR_In_Khmer_Symbols */

/* 'In_Buginese': Block */
static const OnigCodePoint CR_In_Buginese[] = {
	1,
	0x1a00, 0x1a1f,
}; /* CR_In_Buginese */

/* 'In_Tai_Tham': Block */
static const OnigCodePoint CR_In_Tai_Tham[] = {
	1,
	0x1a20, 0x1aaf,
}; /* CR_In_Tai_Tham */

/* 'In_Combining_Diacritical_Marks_Extended': Block */
static const OnigCodePoint CR_In_Combining_Diacritical_Marks_Extended[] = {
	1,
	0x1ab0, 0x1aff,
}; /* CR_In_Combining_Diacritical_Marks_Extended */

/* 'In_Balinese': Block */
static const OnigCodePoint CR_In_Balinese[] = {
	1,
	0x1b00, 0x1b7f,
}; /* CR_In_Balinese */

/* 'In_Sundanese': Block */
static const OnigCodePoint CR_In_Sundanese[] = {
	1,
	0x1b80, 0x1bbf,
}; /* CR_In_Sundanese */

/* 'In_Batak': Block */
static const OnigCodePoint CR_In_Batak[] = {
	1,
	0x1bc0, 0x1bff,
}; /* CR_In_Batak */

/* 'In_Lepcha': Block */
static const OnigCodePoint CR_In_Lepcha[] = {
	1,
	0x1c00, 0x1c4f,
}; /* CR_In_Lepcha */

/* 'In_Ol_Chiki': Block */
#define CR_In_Ol_Chiki CR_Ol_Chiki

/* 'In_Sundanese_Supplement': Block */
static const OnigCodePoint CR_In_Sundanese_Supplement[] = {
	1,
	0x1cc0, 0x1ccf,
}; /* CR_In_Sundanese_Supplement */

/* 'In_Vedic_Extensions': Block */
static const OnigCodePoint CR_In_Vedic_Extensions[] = {
	1,
	0x1cd0, 0x1cff,
}; /* CR_In_Vedic_Extensions */

/* 'In_Phonetic_Extensions': Block */
static const OnigCodePoint CR_In_Phonetic_Extensions[] = {
	1,
	0x1d00, 0x1d7f,
}; /* CR_In_Phonetic_Extensions */

/* 'In_Phonetic_Extensions_Supplement': Block */
static const OnigCodePoint CR_In_Phonetic_Extensions_Supplement[] = {
	1,
	0x1d80, 0x1dbf,
}; /* CR_In_Phonetic_Extensions_Supplement */

/* 'In_Combining_Diacritical_Marks_Supplement': Block */
static const OnigCodePoint CR_In_Combining_Diacritical_Marks_Supplement[] = {
	1,
	0x1dc0, 0x1dff,
}; /* CR_In_Combining_Diacritical_Marks_Supplement */

/* 'In_Latin_Extended_Additional': Block */
static const OnigCodePoint CR_In_Latin_Extended_Additional[] = {
	1,
	0x1e00, 0x1eff,
}; /* CR_In_Latin_Extended_Additional */

/* 'In_Greek_Extended': Block */
static const OnigCodePoint CR_In_Greek_Extended[] = {
	1,
	0x1f00, 0x1fff,
}; /* CR_In_Greek_Extended */

/* 'In_General_Punctuation': Block */
static const OnigCodePoint CR_In_General_Punctuation[] = {
	1,
	0x2000, 0x206f,
}; /* CR_In_General_Punctuation */

/* 'In_Superscripts_and_Subscripts': Block */
static const OnigCodePoint CR_In_Superscripts_and_Subscripts[] = {
	1,
	0x2070, 0x209f,
}; /* CR_In_Superscripts_and_Subscripts */

/* 'In_Currency_Symbols': Block */
static const OnigCodePoint CR_In_Currency_Symbols[] = {
	1,
	0x20a0, 0x20cf,
}; /* CR_In_Currency_Symbols */

/* 'In_Combining_Diacritical_Marks_for_Symbols': Block */
static const OnigCodePoint CR_In_Combining_Diacritical_Marks_for_Symbols[] = {
	1,
	0x20d0, 0x20ff,
}; /* CR_In_Combining_Diacritical_Marks_for_Symbols */

/* 'In_Letterlike_Symbols': Block */
static const OnigCodePoint CR_In_Letterlike_Symbols[] = {
	1,
	0x2100, 0x214f,
}; /* CR_In_Letterlike_Symbols */

/* 'In_Number_Forms': Block */
static const OnigCodePoint CR_In_Number_Forms[] = {
	1,
	0x2150, 0x218f,
}; /* CR_In_Number_Forms */

/* 'In_Arrows': Block */
static const OnigCodePoint CR_In_Arrows[] = {
	1,
	0x2190, 0x21ff,
}; /* CR_In_Arrows */

/* 'In_Mathematical_Operators': Block */
static const OnigCodePoint CR_In_Mathematical_Operators[] = {
	1,
	0x2200, 0x22ff,
}; /* CR_In_Mathematical_Operators */

/* 'In_Miscellaneous_Technical': Block */
static const OnigCodePoint CR_In_Miscellaneous_Technical[] = {
	1,
	0x2300, 0x23ff,
}; /* CR_In_Miscellaneous_Technical */

/* 'In_Control_Pictures': Block */
static const OnigCodePoint CR_In_Control_Pictures[] = {
	1,
	0x2400, 0x243f,
}; /* CR_In_Control_Pictures */

/* 'In_Optical_Character_Recognition': Block */
static const OnigCodePoint CR_In_Optical_Character_Recognition[] = {
	1,
	0x2440, 0x245f,
}; /* CR_In_Optical_Character_Recognition */

/* 'In_Enclosed_Alphanumerics': Block */
static const OnigCodePoint CR_In_Enclosed_Alphanumerics[] = {
	1,
	0x2460, 0x24ff,
}; /* CR_In_Enclosed_Alphanumerics */

/* 'In_Box_Drawing': Block */
static const OnigCodePoint CR_In_Box_Drawing[] = {
	1,
	0x2500, 0x257f,
}; /* CR_In_Box_Drawing */

/* 'In_Block_Elements': Block */
static const OnigCodePoint CR_In_Block_Elements[] = {
	1,
	0x2580, 0x259f,
}; /* CR_In_Block_Elements */

/* 'In_Geometric_Shapes': Block */
static const OnigCodePoint CR_In_Geometric_Shapes[] = {
	1,
	0x25a0, 0x25ff,
}; /* CR_In_Geometric_Shapes */

/* 'In_Miscellaneous_Symbols': Block */
static const OnigCodePoint CR_In_Miscellaneous_Symbols[] = {
	1,
	0x2600, 0x26ff,
}; /* CR_In_Miscellaneous_Symbols */

/* 'In_Dingbats': Block */
static const OnigCodePoint CR_In_Dingbats[] = {
	1,
	0x2700, 0x27bf,
}; /* CR_In_Dingbats */

/* 'In_Miscellaneous_Mathematical_Symbols_A': Block */
static const OnigCodePoint CR_In_Miscellaneous_Mathematical_Symbols_A[] = {
	1,
	0x27c0, 0x27ef,
}; /* CR_In_Miscellaneous_Mathematical_Symbols_A */

/* 'In_Supplemental_Arrows_A': Block */
static const OnigCodePoint CR_In_Supplemental_Arrows_A[] = {
	1,
	0x27f0, 0x27ff,
}; /* CR_In_Supplemental_Arrows_A */

/* 'In_Braille_Patterns': Block */
#define CR_In_Braille_Patterns CR_Braille

/* 'In_Supplemental_Arrows_B': Block */
static const OnigCodePoint CR_In_Supplemental_Arrows_B[] = {
	1,
	0x2900, 0x297f,
}; /* CR_In_Supplemental_Arrows_B */

/* 'In_Miscellaneous_Mathematical_Symbols_B': Block */
static const OnigCodePoint CR_In_Miscellaneous_Mathematical_Symbols_B[] = {
	1,
	0x2980, 0x29ff,
}; /* CR_In_Miscellaneous_Mathematical_Symbols_B */

/* 'In_Supplemental_Mathematical_Operators': Block */
static const OnigCodePoint CR_In_Supplemental_Mathematical_Operators[] = {
	1,
	0x2a00, 0x2aff,
}; /* CR_In_Supplemental_Mathematical_Operators */

/* 'In_Miscellaneous_Symbols_and_Arrows': Block */
static const OnigCodePoint CR_In_Miscellaneous_Symbols_and_Arrows[] = {
	1,
	0x2b00, 0x2bff,
}; /* CR_In_Miscellaneous_Symbols_and_Arrows */

/* 'In_Glagolitic': Block */
static const OnigCodePoint CR_In_Glagolitic[] = {
	1,
	0x2c00, 0x2c5f,
}; /* CR_In_Glagolitic */

/* 'In_Latin_Extended_C': Block */
static const OnigCodePoint CR_In_Latin_Extended_C[] = {
	1,
	0x2c60, 0x2c7f,
}; /* CR_In_Latin_Extended_C */

/* 'In_Coptic': Block */
static const OnigCodePoint CR_In_Coptic[] = {
	1,
	0x2c80, 0x2cff,
}; /* CR_In_Coptic */

/* 'In_Georgian_Supplement': Block */
static const OnigCodePoint CR_In_Georgian_Supplement[] = {
	1,
	0x2d00, 0x2d2f,
}; /* CR_In_Georgian_Supplement */

/* 'In_Tifinagh': Block */
static const OnigCodePoint CR_In_Tifinagh[] = {
	1,
	0x2d30, 0x2d7f,
}; /* CR_In_Tifinagh */

/* 'In_Ethiopic_Extended': Block */
static const OnigCodePoint CR_In_Ethiopic_Extended[] = {
	1,
	0x2d80, 0x2ddf,
}; /* CR_In_Ethiopic_Extended */

/* 'In_Cyrillic_Extended_A': Block */
static const OnigCodePoint CR_In_Cyrillic_Extended_A[] = {
	1,
	0x2de0, 0x2dff,
}; /* CR_In_Cyrillic_Extended_A */

/* 'In_Supplemental_Punctuation': Block */
static const OnigCodePoint CR_In_Supplemental_Punctuation[] = {
	1,
	0x2e00, 0x2e7f,
}; /* CR_In_Supplemental_Punctuation */

/* 'In_CJK_Radicals_Supplement': Block */
static const OnigCodePoint CR_In_CJK_Radicals_Supplement[] = {
	1,
	0x2e80, 0x2eff,
}; /* CR_In_CJK_Radicals_Supplement */

/* 'In_Kangxi_Radicals': Block */
static const OnigCodePoint CR_In_Kangxi_Radicals[] = {
	1,
	0x2f00, 0x2fdf,
}; /* CR_In_Kangxi_Radicals */

/* 'In_Ideographic_Description_Characters': Block */
static const OnigCodePoint CR_In_Ideographic_Description_Characters[] = {
	1,
	0x2ff0, 0x2fff,
}; /* CR_In_Ideographic_Description_Characters */

/* 'In_CJK_Symbols_and_Punctuation': Block */
static const OnigCodePoint CR_In_CJK_Symbols_and_Punctuation[] = {
	1,
	0x3000, 0x303f,
}; /* CR_In_CJK_Symbols_and_Punctuation */

/* 'In_Hiragana': Block */
static const OnigCodePoint CR_In_Hiragana[] = {
	1,
	0x3040, 0x309f,
}; /* CR_In_Hiragana */

/* 'In_Katakana': Block */
static const OnigCodePoint CR_In_Katakana[] = {
	1,
	0x30a0, 0x30ff,
}; /* CR_In_Katakana */

/* 'In_Bopomofo': Block */
static const OnigCodePoint CR_In_Bopomofo[] = {
	1,
	0x3100, 0x312f,
}; /* CR_In_Bopomofo */

/* 'In_Hangul_Compatibility_Jamo': Block */
static const OnigCodePoint CR_In_Hangul_Compatibility_Jamo[] = {
	1,
	0x3130, 0x318f,
}; /* CR_In_Hangul_Compatibility_Jamo */

/* 'In_Kanbun': Block */
static const OnigCodePoint CR_In_Kanbun[] = {
	1,
	0x3190, 0x319f,
}; /* CR_In_Kanbun */

/* 'In_Bopomofo_Extended': Block */
static const OnigCodePoint CR_In_Bopomofo_Extended[] = {
	1,
	0x31a0, 0x31bf,
}; /* CR_In_Bopomofo_Extended */

/* 'In_CJK_Strokes': Block */
static const OnigCodePoint CR_In_CJK_Strokes[] = {
	1,
	0x31c0, 0x31ef,
}; /* CR_In_CJK_Strokes */

/* 'In_Katakana_Phonetic_Extensions': Block */
static const OnigCodePoint CR_In_Katakana_Phonetic_Extensions[] = {
	1,
	0x31f0, 0x31ff,
}; /* CR_In_Katakana_Phonetic_Extensions */

/* 'In_Enclosed_CJK_Letters_and_Months': Block */
static const OnigCodePoint CR_In_Enclosed_CJK_Letters_and_Months[] = {
	1,
	0x3200, 0x32ff,
}; /* CR_In_Enclosed_CJK_Letters_and_Months */

/* 'In_CJK_Compatibility': Block */
static const OnigCodePoint CR_In_CJK_Compatibility[] = {
	1,
	0x3300, 0x33ff,
}; /* CR_In_CJK_Compatibility */

/* 'In_CJK_Unified_Ideographs_Extension_A': Block */
static const OnigCodePoint CR_In_CJK_Unified_Ideographs_Extension_A[] = {
	1,
	0x3400, 0x4dbf,
}; /* CR_In_CJK_Unified_Ideographs_Extension_A */

/* 'In_Yijing_Hexagram_Symbols': Block */
static const OnigCodePoint CR_In_Yijing_Hexagram_Symbols[] = {
	1,
	0x4dc0, 0x4dff,
}; /* CR_In_Yijing_Hexagram_Symbols */

/* 'In_CJK_Unified_Ideographs': Block */
static const OnigCodePoint CR_In_CJK_Unified_Ideographs[] = {
	1,
	0x4e00, 0x9fff,
}; /* CR_In_CJK_Unified_Ideographs */

/* 'In_Yi_Syllables': Block */
static const OnigCodePoint CR_In_Yi_Syllables[] = {
	1,
	0xa000, 0xa48f,
}; /* CR_In_Yi_Syllables */

/* 'In_Yi_Radicals': Block */
static const OnigCodePoint CR_In_Yi_Radicals[] = {
	1,
	0xa490, 0xa4cf,
}; /* CR_In_Yi_Radicals */

/* 'In_Lisu': Block */
#define CR_In_Lisu CR_Lisu

/* 'In_Vai': Block */
static const OnigCodePoint CR_In_Vai[] = {
	1,
	0xa500, 0xa63f,
}; /* CR_In_Vai */

/* 'In_Cyrillic_Extended_B': Block */
static const OnigCodePoint CR_In_Cyrillic_Extended_B[] = {
	1,
	0xa640, 0xa69f,
}; /* CR_In_Cyrillic_Extended_B */

/* 'In_Bamum': Block */
static const OnigCodePoint CR_In_Bamum[] = {
	1,
	0xa6a0, 0xa6ff,
}; /* CR_In_Bamum */

/* 'In_Modifier_Tone_Letters': Block */
static const OnigCodePoint CR_In_Modifier_Tone_Letters[] = {
	1,
	0xa700, 0xa71f,
}; /* CR_In_Modifier_Tone_Letters */

/* 'In_Latin_Extended_D': Block */
static const OnigCodePoint CR_In_Latin_Extended_D[] = {
	1,
	0xa720, 0xa7ff,
}; /* CR_In_Latin_Extended_D */

/* 'In_Syloti_Nagri': Block */
static const OnigCodePoint CR_In_Syloti_Nagri[] = {
	1,
	0xa800, 0xa82f,
}; /* CR_In_Syloti_Nagri */

/* 'In_Common_Indic_Number_Forms': Block */
static const OnigCodePoint CR_In_Common_Indic_Number_Forms[] = {
	1,
	0xa830, 0xa83f,
}; /* CR_In_Common_Indic_Number_Forms */

/* 'In_Phags_pa': Block */
static const OnigCodePoint CR_In_Phags_pa[] = {
	1,
	0xa840, 0xa87f,
}; /* CR_In_Phags_pa */

/* 'In_Saurashtra': Block */
static const OnigCodePoint CR_In_Saurashtra[] = {
	1,
	0xa880, 0xa8df,
}; /* CR_In_Saurashtra */

/* 'In_Devanagari_Extended': Block */
static const OnigCodePoint CR_In_Devanagari_Extended[] = {
	1,
	0xa8e0, 0xa8ff,
}; /* CR_In_Devanagari_Extended */

/* 'In_Kayah_Li': Block */
static const OnigCodePoint CR_In_Kayah_Li[] = {
	1,
	0xa900, 0xa92f,
}; /* CR_In_Kayah_Li */

/* 'In_Rejang': Block */
static const OnigCodePoint CR_In_Rejang[] = {
	1,
	0xa930, 0xa95f,
}; /* CR_In_Rejang */

/* 'In_Hangul_Jamo_Extended_A': Block */
static const OnigCodePoint CR_In_Hangul_Jamo_Extended_A[] = {
	1,
	0xa960, 0xa97f,
}; /* CR_In_Hangul_Jamo_Extended_A */

/* 'In_Javanese': Block */
static const OnigCodePoint CR_In_Javanese[] = {
	1,
	0xa980, 0xa9df,
}; /* CR_In_Javanese */

/* 'In_Myanmar_Extended_B': Block */
static const OnigCodePoint CR_In_Myanmar_Extended_B[] = {
	1,
	0xa9e0, 0xa9ff,
}; /* CR_In_Myanmar_Extended_B */

/* 'In_Cham': Block */
static const OnigCodePoint CR_In_Cham[] = {
	1,
	0xaa00, 0xaa5f,
}; /* CR_In_Cham */

/* 'In_Myanmar_Extended_A': Block */
static const OnigCodePoint CR_In_Myanmar_Extended_A[] = {
	1,
	0xaa60, 0xaa7f,
}; /* CR_In_Myanmar_Extended_A */

/* 'In_Tai_Viet': Block */
static const OnigCodePoint CR_In_Tai_Viet[] = {
	1,
	0xaa80, 0xaadf,
}; /* CR_In_Tai_Viet */

/* 'In_Meetei_Mayek_Extensions': Block */
static const OnigCodePoint CR_In_Meetei_Mayek_Extensions[] = {
	1,
	0xaae0, 0xaaff,
}; /* CR_In_Meetei_Mayek_Extensions */

/* 'In_Ethiopic_Extended_A': Block */
static const OnigCodePoint CR_In_Ethiopic_Extended_A[] = {
	1,
	0xab00, 0xab2f,
}; /* CR_In_Ethiopic_Extended_A */

/* 'In_Latin_Extended_E': Block */
static const OnigCodePoint CR_In_Latin_Extended_E[] = {
	1,
	0xab30, 0xab6f,
}; /* CR_In_Latin_Extended_E */

/* 'In_Meetei_Mayek': Block */
static const OnigCodePoint CR_In_Meetei_Mayek[] = {
	1,
	0xabc0, 0xabff,
}; /* CR_In_Meetei_Mayek */

/* 'In_Hangul_Syllables': Block */
static const OnigCodePoint CR_In_Hangul_Syllables[] = {
	1,
	0xac00, 0xd7af,
}; /* CR_In_Hangul_Syllables */

/* 'In_Hangul_Jamo_Extended_B': Block */
static const OnigCodePoint CR_In_Hangul_Jamo_Extended_B[] = {
	1,
	0xd7b0, 0xd7ff,
}; /* CR_In_Hangul_Jamo_Extended_B */

/* 'In_High_Surrogates': Block */
static const OnigCodePoint CR_In_High_Surrogates[] = {
	1,
	0xd800, 0xdb7f,
}; /* CR_In_High_Surrogates */

/* 'In_High_Private_Use_Surrogates': Block */
static const OnigCodePoint CR_In_High_Private_Use_Surrogates[] = {
	1,
	0xdb80, 0xdbff,
}; /* CR_In_High_Private_Use_Surrogates */

/* 'In_Low_Surrogates': Block */
static const OnigCodePoint CR_In_Low_Surrogates[] = {
	1,
	0xdc00, 0xdfff,
}; /* CR_In_Low_Surrogates */

/* 'In_Private_Use_Area': Block */
static const OnigCodePoint CR_In_Private_Use_Area[] = {
	1,
	0xe000, 0xf8ff,
}; /* CR_In_Private_Use_Area */

/* 'In_CJK_Compatibility_Ideographs': Block */
static const OnigCodePoint CR_In_CJK_Compatibility_Ideographs[] = {
	1,
	0xf900, 0xfaff,
}; /* CR_In_CJK_Compatibility_Ideographs */

/* 'In_Alphabetic_Presentation_Forms': Block */
static const OnigCodePoint CR_In_Alphabetic_Presentation_Forms[] = {
	1,
	0xfb00, 0xfb4f,
}; /* CR_In_Alphabetic_Presentation_Forms */

/* 'In_Arabic_Presentation_Forms_A': Block */
static const OnigCodePoint CR_In_Arabic_Presentation_Forms_A[] = {
	1,
	0xfb50, 0xfdff,
}; /* CR_In_Arabic_Presentation_Forms_A */

/* 'In_Variation_Selectors': Block */
static const OnigCodePoint CR_In_Variation_Selectors[] = {
	1,
	0xfe00, 0xfe0f,
}; /* CR_In_Variation_Selectors */

/* 'In_Vertical_Forms': Block */
static const OnigCodePoint CR_In_Vertical_Forms[] = {
	1,
	0xfe10, 0xfe1f,
}; /* CR_In_Vertical_Forms */

/* 'In_Combining_Half_Marks': Block */
static const OnigCodePoint CR_In_Combining_Half_Marks[] = {
	1,
	0xfe20, 0xfe2f,
}; /* CR_In_Combining_Half_Marks */

/* 'In_CJK_Compatibility_Forms': Block */
static const OnigCodePoint CR_In_CJK_Compatibility_Forms[] = {
	1,
	0xfe30, 0xfe4f,
}; /* CR_In_CJK_Compatibility_Forms */

/* 'In_Small_Form_Variants': Block */
static const OnigCodePoint CR_In_Small_Form_Variants[] = {
	1,
	0xfe50, 0xfe6f,
}; /* CR_In_Small_Form_Variants */

/* 'In_Arabic_Presentation_Forms_B': Block */
static const OnigCodePoint CR_In_Arabic_Presentation_Forms_B[] = {
	1,
	0xfe70, 0xfeff,
}; /* CR_In_Arabic_Presentation_Forms_B */

/* 'In_Halfwidth_and_Fullwidth_Forms': Block */
static const OnigCodePoint CR_In_Halfwidth_and_Fullwidth_Forms[] = {
	1,
	0xff00, 0xffef,
}; /* CR_In_Halfwidth_and_Fullwidth_Forms */

/* 'In_Specials': Block */
static const OnigCodePoint CR_In_Specials[] = {
	1,
	0xfff0, 0xffff,
}; /* CR_In_Specials */

/* 'In_Linear_B_Syllabary': Block */
static const OnigCodePoint CR_In_Linear_B_Syllabary[] = {
	1,
	0x10000, 0x1007f,
}; /* CR_In_Linear_B_Syllabary */

/* 'In_Linear_B_Ideograms': Block */
static const OnigCodePoint CR_In_Linear_B_Ideograms[] = {
	1,
	0x10080, 0x100ff,
}; /* CR_In_Linear_B_Ideograms */

/* 'In_Aegean_Numbers': Block */
static const OnigCodePoint CR_In_Aegean_Numbers[] = {
	1,
	0x10100, 0x1013f,
}; /* CR_In_Aegean_Numbers */

/* 'In_Ancient_Greek_Numbers': Block */
static const OnigCodePoint CR_In_Ancient_Greek_Numbers[] = {
	1,
	0x10140, 0x1018f,
}; /* CR_In_Ancient_Greek_Numbers */

/* 'In_Ancient_Symbols': Block */
static const OnigCodePoint CR_In_Ancient_Symbols[] = {
	1,
	0x10190, 0x101cf,
}; /* CR_In_Ancient_Symbols */

/* 'In_Phaistos_Disc': Block */
static const OnigCodePoint CR_In_Phaistos_Disc[] = {
	1,
	0x101d0, 0x101ff,
}; /* CR_In_Phaistos_Disc */

/* 'In_Lycian': Block */
static const OnigCodePoint CR_In_Lycian[] = {
	1,
	0x10280, 0x1029f,
}; /* CR_In_Lycian */

/* 'In_Carian': Block */
static const OnigCodePoint CR_In_Carian[] = {
	1,
	0x102a0, 0x102df,
}; /* CR_In_Carian */

/* 'In_Coptic_Epact_Numbers': Block */
static const OnigCodePoint CR_In_Coptic_Epact_Numbers[] = {
	1,
	0x102e0, 0x102ff,
}; /* CR_In_Coptic_Epact_Numbers */

/* 'In_Old_Italic': Block */
static const OnigCodePoint CR_In_Old_Italic[] = {
	1,
	0x10300, 0x1032f,
}; /* CR_In_Old_Italic */

/* 'In_Gothic': Block */
static const OnigCodePoint CR_In_Gothic[] = {
	1,
	0x10330, 0x1034f,
}; /* CR_In_Gothic */

/* 'In_Old_Permic': Block */
static const OnigCodePoint CR_In_Old_Permic[] = {
	1,
	0x10350, 0x1037f,
}; /* CR_In_Old_Permic */

/* 'In_Ugaritic': Block */
static const OnigCodePoint CR_In_Ugaritic[] = {
	1,
	0x10380, 0x1039f,
}; /* CR_In_Ugaritic */

/* 'In_Old_Persian': Block */
static const OnigCodePoint CR_In_Old_Persian[] = {
	1,
	0x103a0, 0x103df,
}; /* CR_In_Old_Persian */

/* 'In_Deseret': Block */
#define CR_In_Deseret CR_Deseret

/* 'In_Shavian': Block */
#define CR_In_Shavian CR_Shavian

/* 'In_Osmanya': Block */
static const OnigCodePoint CR_In_Osmanya[] = {
	1,
	0x10480, 0x104af,
}; /* CR_In_Osmanya */

/* 'In_Elbasan': Block */
static const OnigCodePoint CR_In_Elbasan[] = {
	1,
	0x10500, 0x1052f,
}; /* CR_In_Elbasan */

/* 'In_Caucasian_Albanian': Block */
static const OnigCodePoint CR_In_Caucasian_Albanian[] = {
	1,
	0x10530, 0x1056f,
}; /* CR_In_Caucasian_Albanian */

/* 'In_Linear_A': Block */
static const OnigCodePoint CR_In_Linear_A[] = {
	1,
	0x10600, 0x1077f,
}; /* CR_In_Linear_A */

/* 'In_Cypriot_Syllabary': Block */
static const OnigCodePoint CR_In_Cypriot_Syllabary[] = {
	1,
	0x10800, 0x1083f,
}; /* CR_In_Cypriot_Syllabary */

/* 'In_Imperial_Aramaic': Block */
static const OnigCodePoint CR_In_Imperial_Aramaic[] = {
	1,
	0x10840, 0x1085f,
}; /* CR_In_Imperial_Aramaic */

/* 'In_Palmyrene': Block */
#define CR_In_Palmyrene CR_Palmyrene

/* 'In_Nabataean': Block */
static const OnigCodePoint CR_In_Nabataean[] = {
	1,
	0x10880, 0x108af,
}; /* CR_In_Nabataean */

/* 'In_Phoenician': Block */
static const OnigCodePoint CR_In_Phoenician[] = {
	1,
	0x10900, 0x1091f,
}; /* CR_In_Phoenician */

/* 'In_Lydian': Block */
static const OnigCodePoint CR_In_Lydian[] = {
	1,
	0x10920, 0x1093f,
}; /* CR_In_Lydian */

/* 'In_Meroitic_Hieroglyphs': Block */
#define CR_In_Meroitic_Hieroglyphs CR_Meroitic_Hieroglyphs

/* 'In_Meroitic_Cursive': Block */
static const OnigCodePoint CR_In_Meroitic_Cursive[] = {
	1,
	0x109a0, 0x109ff,
}; /* CR_In_Meroitic_Cursive */

/* 'In_Kharoshthi': Block */
static const OnigCodePoint CR_In_Kharoshthi[] = {
	1,
	0x10a00, 0x10a5f,
}; /* CR_In_Kharoshthi */

/* 'In_Old_South_Arabian': Block */
#define CR_In_Old_South_Arabian CR_Old_South_Arabian

/* 'In_Old_North_Arabian': Block */
#define CR_In_Old_North_Arabian CR_Old_North_Arabian

/* 'In_Manichaean': Block */
static const OnigCodePoint CR_In_Manichaean[] = {
	1,
	0x10ac0, 0x10aff,
}; /* CR_In_Manichaean */

/* 'In_Avestan': Block */
static const OnigCodePoint CR_In_Avestan[] = {
	1,
	0x10b00, 0x10b3f,
}; /* CR_In_Avestan */

/* 'In_Inscriptional_Parthian': Block */
static const OnigCodePoint CR_In_Inscriptional_Parthian[] = {
	1,
	0x10b40, 0x10b5f,
}; /* CR_In_Inscriptional_Parthian */

/* 'In_Inscriptional_Pahlavi': Block */
static const OnigCodePoint CR_In_Inscriptional_Pahlavi[] = {
	1,
	0x10b60, 0x10b7f,
}; /* CR_In_Inscriptional_Pahlavi */

/* 'In_Psalter_Pahlavi': Block */
static const OnigCodePoint CR_In_Psalter_Pahlavi[] = {
	1,
	0x10b80, 0x10baf,
}; /* CR_In_Psalter_Pahlavi */

/* 'In_Old_Turkic': Block */
static const OnigCodePoint CR_In_Old_Turkic[] = {
	1,
	0x10c00, 0x10c4f,
}; /* CR_In_Old_Turkic */

/* 'In_Rumi_Numeral_Symbols': Block */
static const OnigCodePoint CR_In_Rumi_Numeral_Symbols[] = {
	1,
	0x10e60, 0x10e7f,
}; /* CR_In_Rumi_Numeral_Symbols */

/* 'In_Brahmi': Block */
static const OnigCodePoint CR_In_Brahmi[] = {
	1,
	0x11000, 0x1107f,
}; /* CR_In_Brahmi */

/* 'In_Kaithi': Block */
static const OnigCodePoint CR_In_Kaithi[] = {
	1,
	0x11080, 0x110cf,
}; /* CR_In_Kaithi */

/* 'In_Sora_Sompeng': Block */
static const OnigCodePoint CR_In_Sora_Sompeng[] = {
	1,
	0x110d0, 0x110ff,
}; /* CR_In_Sora_Sompeng */

/* 'In_Chakma': Block */
static const OnigCodePoint CR_In_Chakma[] = {
	1,
	0x11100, 0x1114f,
}; /* CR_In_Chakma */

/* 'In_Mahajani': Block */
static const OnigCodePoint CR_In_Mahajani[] = {
	1,
	0x11150, 0x1117f,
}; /* CR_In_Mahajani */

/* 'In_Sharada': Block */
static const OnigCodePoint CR_In_Sharada[] = {
	1,
	0x11180, 0x111df,
}; /* CR_In_Sharada */

/* 'In_Sinhala_Archaic_Numbers': Block */
static const OnigCodePoint CR_In_Sinhala_Archaic_Numbers[] = {
	1,
	0x111e0, 0x111ff,
}; /* CR_In_Sinhala_Archaic_Numbers */

/* 'In_Khojki': Block */
static const OnigCodePoint CR_In_Khojki[] = {
	1,
	0x11200, 0x1124f,
}; /* CR_In_Khojki */

/* 'In_Khudawadi': Block */
static const OnigCodePoint CR_In_Khudawadi[] = {
	1,
	0x112b0, 0x112ff,
}; /* CR_In_Khudawadi */

/* 'In_Grantha': Block */
static const OnigCodePoint CR_In_Grantha[] = {
	1,
	0x11300, 0x1137f,
}; /* CR_In_Grantha */

/* 'In_Tirhuta': Block */
static const OnigCodePoint CR_In_Tirhuta[] = {
	1,
	0x11480, 0x114df,
}; /* CR_In_Tirhuta */

/* 'In_Siddham': Block */
static const OnigCodePoint CR_In_Siddham[] = {
	1,
	0x11580, 0x115ff,
}; /* CR_In_Siddham */

/* 'In_Modi': Block */
static const OnigCodePoint CR_In_Modi[] = {
	1,
	0x11600, 0x1165f,
}; /* CR_In_Modi */

/* 'In_Takri': Block */
static const OnigCodePoint CR_In_Takri[] = {
	1,
	0x11680, 0x116cf,
}; /* CR_In_Takri */

/* 'In_Warang_Citi': Block */
static const OnigCodePoint CR_In_Warang_Citi[] = {
	1,
	0x118a0, 0x118ff,
}; /* CR_In_Warang_Citi */

/* 'In_Pau_Cin_Hau': Block */
static const OnigCodePoint CR_In_Pau_Cin_Hau[] = {
	1,
	0x11ac0, 0x11aff,
}; /* CR_In_Pau_Cin_Hau */

/* 'In_Cuneiform': Block */
static const OnigCodePoint CR_In_Cuneiform[] = {
	1,
	0x12000, 0x123ff,
}; /* CR_In_Cuneiform */

/* 'In_Cuneiform_Numbers_and_Punctuation': Block */
static const OnigCodePoint CR_In_Cuneiform_Numbers_and_Punctuation[] = {
	1,
	0x12400, 0x1247f,
}; /* CR_In_Cuneiform_Numbers_and_Punctuation */

/* 'In_Egyptian_Hieroglyphs': Block */
static const OnigCodePoint CR_In_Egyptian_Hieroglyphs[] = {
	1,
	0x13000, 0x1342f,
}; /* CR_In_Egyptian_Hieroglyphs */

/* 'In_Bamum_Supplement': Block */
static const OnigCodePoint CR_In_Bamum_Supplement[] = {
	1,
	0x16800, 0x16a3f,
}; /* CR_In_Bamum_Supplement */

/* 'In_Mro': Block */
static const OnigCodePoint CR_In_Mro[] = {
	1,
	0x16a40, 0x16a6f,
}; /* CR_In_Mro */

/* 'In_Bassa_Vah': Block */
static const OnigCodePoint CR_In_Bassa_Vah[] = {
	1,
	0x16ad0, 0x16aff,
}; /* CR_In_Bassa_Vah */

/* 'In_Pahawh_Hmong': Block */
static const OnigCodePoint CR_In_Pahawh_Hmong[] = {
	1,
	0x16b00, 0x16b8f,
}; /* CR_In_Pahawh_Hmong */

/* 'In_Miao': Block */
static const OnigCodePoint CR_In_Miao[] = {
	1,
	0x16f00, 0x16f9f,
}; /* CR_In_Miao */

/* 'In_Kana_Supplement': Block */
static const OnigCodePoint CR_In_Kana_Supplement[] = {
	1,
	0x1b000, 0x1b0ff,
}; /* CR_In_Kana_Supplement */

/* 'In_Duployan': Block */
static const OnigCodePoint CR_In_Duployan[] = {
	1,
	0x1bc00, 0x1bc9f,
}; /* CR_In_Duployan */

/* 'In_Shorthand_Format_Controls': Block */
static const OnigCodePoint CR_In_Shorthand_Format_Controls[] = {
	1,
	0x1bca0, 0x1bcaf,
}; /* CR_In_Shorthand_Format_Controls */

/* 'In_Byzantine_Musical_Symbols': Block */
static const OnigCodePoint CR_In_Byzantine_Musical_Symbols[] = {
	1,
	0x1d000, 0x1d0ff,
}; /* CR_In_Byzantine_Musical_Symbols */

/* 'In_Musical_Symbols': Block */
static const OnigCodePoint CR_In_Musical_Symbols[] = {
	1,
	0x1d100, 0x1d1ff,
}; /* CR_In_Musical_Symbols */

/* 'In_Ancient_Greek_Musical_Notation': Block */
static const OnigCodePoint CR_In_Ancient_Greek_Musical_Notation[] = {
	1,
	0x1d200, 0x1d24f,
}; /* CR_In_Ancient_Greek_Musical_Notation */

/* 'In_Tai_Xuan_Jing_Symbols': Block */
static const OnigCodePoint CR_In_Tai_Xuan_Jing_Symbols[] = {
	1,
	0x1d300, 0x1d35f,
}; /* CR_In_Tai_Xuan_Jing_Symbols */

/* 'In_Counting_Rod_Numerals': Block */
static const OnigCodePoint CR_In_Counting_Rod_Numerals[] = {
	1,
	0x1d360, 0x1d37f,
}; /* CR_In_Counting_Rod_Numerals */

/* 'In_Mathematical_Alphanumeric_Symbols': Block */
static const OnigCodePoint CR_In_Mathematical_Alphanumeric_Symbols[] = {
	1,
	0x1d400, 0x1d7ff,
}; /* CR_In_Mathematical_Alphanumeric_Symbols */

/* 'In_Mende_Kikakui': Block */
static const OnigCodePoint CR_In_Mende_Kikakui[] = {
	1,
	0x1e800, 0x1e8df,
}; /* CR_In_Mende_Kikakui */

/* 'In_Arabic_Mathematical_Alphabetic_Symbols': Block */
static const OnigCodePoint CR_In_Arabic_Mathematical_Alphabetic_Symbols[] = {
	1,
	0x1ee00, 0x1eeff,
}; /* CR_In_Arabic_Mathematical_Alphabetic_Symbols */

/* 'In_Mahjong_Tiles': Block */
static const OnigCodePoint CR_In_Mahjong_Tiles[] = {
	1,
	0x1f000, 0x1f02f,
}; /* CR_In_Mahjong_Tiles */

/* 'In_Domino_Tiles': Block */
static const OnigCodePoint CR_In_Domino_Tiles[] = {
	1,
	0x1f030, 0x1f09f,
}; /* CR_In_Domino_Tiles */

/* 'In_Playing_Cards': Block */
static const OnigCodePoint CR_In_Playing_Cards[] = {
	1,
	0x1f0a0, 0x1f0ff,
}; /* CR_In_Playing_Cards */

/* 'In_Enclosed_Alphanumeric_Supplement': Block */
static const OnigCodePoint CR_In_Enclosed_Alphanumeric_Supplement[] = {
	1,
	0x1f100, 0x1f1ff,
}; /* CR_In_Enclosed_Alphanumeric_Supplement */

/* 'In_Enclosed_Ideographic_Supplement': Block */
static const OnigCodePoint CR_In_Enclosed_Ideographic_Supplement[] = {
	1,
	0x1f200, 0x1f2ff,
}; /* CR_In_Enclosed_Ideographic_Supplement */

/* 'In_Miscellaneous_Symbols_and_Pictographs': Block */
static const OnigCodePoint CR_In_Miscellaneous_Symbols_and_Pictographs[] = {
	1,
	0x1f300, 0x1f5ff,
}; /* CR_In_Miscellaneous_Symbols_and_Pictographs */

/* 'In_Emoticons': Block */
static const OnigCodePoint CR_In_Emoticons[] = {
	1,
	0x1f600, 0x1f64f,
}; /* CR_In_Emoticons */

/* 'In_Ornamental_Dingbats': Block */
static const OnigCodePoint CR_In_Ornamental_Dingbats[] = {
	1,
	0x1f650, 0x1f67f,
}; /* CR_In_Ornamental_Dingbats */

/* 'In_Transport_and_Map_Symbols': Block */
static const OnigCodePoint CR_In_Transport_and_Map_Symbols[] = {
	1,
	0x1f680, 0x1f6ff,
}; /* CR_In_Transport_and_Map_Symbols */

/* 'In_Alchemical_Symbols': Block */
static const OnigCodePoint CR_In_Alchemical_Symbols[] = {
	1,
	0x1f700, 0x1f77f,
}; /* CR_In_Alchemical_Symbols */

/* 'In_Geometric_Shapes_Extended': Block */
static const OnigCodePoint CR_In_Geometric_Shapes_Extended[] = {
	1,
	0x1f780, 0x1f7ff,
}; /* CR_In_Geometric_Shapes_Extended */

/* 'In_Supplemental_Arrows_C': Block */
static const OnigCodePoint CR_In_Supplemental_Arrows_C[] = {
	1,
	0x1f800, 0x1f8ff,
}; /* CR_In_Supplemental_Arrows_C */

/* 'In_CJK_Unified_Ideographs_Extension_B': Block */
static const OnigCodePoint CR_In_CJK_Unified_Ideographs_Extension_B[] = {
	1,
	0x20000, 0x2a6df,
}; /* CR_In_CJK_Unified_Ideographs_Extension_B */

/* 'In_CJK_Unified_Ideographs_Extension_C': Block */
static const OnigCodePoint CR_In_CJK_Unified_Ideographs_Extension_C[] = {
	1,
	0x2a700, 0x2b73f,
}; /* CR_In_CJK_Unified_Ideographs_Extension_C */

/* 'In_CJK_Unified_Ideographs_Extension_D': Block */
static const OnigCodePoint CR_In_CJK_Unified_Ideographs_Extension_D[] = {
	1,
	0x2b740, 0x2b81f,
}; /* CR_In_CJK_Unified_Ideographs_Extension_D */

/* 'In_CJK_Compatibility_Ideographs_Supplement': Block */
static const OnigCodePoint CR_In_CJK_Compatibility_Ideographs_Supplement[] = {
	1,
	0x2f800, 0x2fa1f,
}; /* CR_In_CJK_Compatibility_Ideographs_Supplement */

/* 'In_Tags': Block */
static const OnigCodePoint CR_In_Tags[] = {
	1,
	0xe0000, 0xe007f,
}; /* CR_In_Tags */

/* 'In_Variation_Selectors_Supplement': Block */
static const OnigCodePoint CR_In_Variation_Selectors_Supplement[] = {
	1,
	0xe0100, 0xe01ef,
}; /* CR_In_Variation_Selectors_Supplement */

/* 'In_Supplementary_Private_Use_Area_A': Block */
static const OnigCodePoint CR_In_Supplementary_Private_Use_Area_A[] = {
	1,
	0xf0000, 0xfffff,
}; /* CR_In_Supplementary_Private_Use_Area_A */

/* 'In_Supplementary_Private_Use_Area_B': Block */
static const OnigCodePoint CR_In_Supplementary_Private_Use_Area_B[] = {
	1,
	0x100000, 0x10ffff,
}; /* CR_In_Supplementary_Private_Use_Area_B */

/* 'In_No_Block': Block */
static const OnigCodePoint CR_In_No_Block[] = {
	40,
	0x0860, 0x089f,
	0x1c80, 0x1cbf,
	0x2fe0, 0x2fef,
	0xab70, 0xabbf,
	0x10200, 0x1027f,
	0x103e0, 0x103ff,
	0x104b0, 0x104ff,
	0x10570, 0x105ff,
	0x10780, 0x107ff,
	0x108b0, 0x108ff,
	0x10940, 0x1097f,
	0x10aa0, 0x10abf,
	0x10bb0, 0x10bff,
	0x10c50, 0x10e5f,
	0x10e80, 0x10fff,
	0x11250, 0x112af,
	0x11380, 0x1147f,
	0x114e0, 0x1157f,
	0x11660, 0x1167f,
	0x116d0, 0x1189f,
	0x11900, 0x11abf,
	0x11b00, 0x11fff,
	0x12480, 0x12fff,
	0x13430, 0x167ff,
	0x16a70, 0x16acf,
	0x16b90, 0x16eff,
	0x16fa0, 0x1afff,
	0x1b100, 0x1bbff,
	0x1bcb0, 0x1cfff,
	0x1d250, 0x1d2ff,
	0x1d380, 0x1d3ff,
	0x1d800, 0x1e7ff,
	0x1e8e0, 0x1edff,
	0x1ef00, 0x1efff,
	0x1f900, 0x1ffff,
	0x2a6e0, 0x2a6ff,
	0x2b820, 0x2f7ff,
	0x2fa20, 0xdffff,
	0xe0080, 0xe00ff,
	0xe01f0, 0xeffff,
}; /* CR_In_No_Block */
#endif /* USE_UNICODE_PROPERTIES */

static const OnigCodePoint* const CodeRanges[] = {
  CR_NEWLINE,
  CR_Alpha,
  CR_Blank,
  CR_Cntrl,
  CR_Digit,
  CR_Graph,
  CR_Lower,
  CR_Print,
  CR_Punct,
  CR_Space,
  CR_Upper,
  CR_XDigit,
  CR_Word,
  CR_Alnum,
  CR_ASCII,
#ifdef USE_UNICODE_PROPERTIES
  CR_Any,
  CR_Assigned,
  CR_C,
  CR_Cc,
  CR_Cf,
  CR_Cn,
  CR_Co,
  CR_Cs,
  CR_L,
  CR_LC,
  CR_Ll,
  CR_Lm,
  CR_Lo,
  CR_Lt,
  CR_Lu,
  CR_M,
  CR_Mc,
  CR_Me,
  CR_Mn,
  CR_N,
  CR_Nd,
  CR_Nl,
  CR_No,
  CR_P,
  CR_Pc,
  CR_Pd,
  CR_Pe,
  CR_Pf,
  CR_Pi,
  CR_Po,
  CR_Ps,
  CR_S,
  CR_Sc,
  CR_Sk,
  CR_Sm,
  CR_So,
  CR_Z,
  CR_Zl,
  CR_Zp,
  CR_Zs,
  CR_Math,
  CR_Alphabetic,
  CR_Lowercase,
  CR_Uppercase,
  CR_Cased,
  CR_Case_Ignorable,
  CR_Changes_When_Lowercased,
  CR_Changes_When_Uppercased,
  CR_Changes_When_Titlecased,
  CR_Changes_When_Casefolded,
  CR_Changes_When_Casemapped,
  CR_ID_Start,
  CR_ID_Continue,
  CR_XID_Start,
  CR_XID_Continue,
  CR_Default_Ignorable_Code_Point,
  CR_Grapheme_Extend,
  CR_Grapheme_Base,
  CR_Grapheme_Link,
  CR_Common,
  CR_Latin,
  CR_Greek,
  CR_Cyrillic,
  CR_Armenian,
  CR_Hebrew,
  CR_Arabic,
  CR_Syriac,
  CR_Thaana,
  CR_Devanagari,
  CR_Bengali,
  CR_Gurmukhi,
  CR_Gujarati,
  CR_Oriya,
  CR_Tamil,
  CR_Telugu,
  CR_Kannada,
  CR_Malayalam,
  CR_Sinhala,
  CR_Thai,
  CR_Lao,
  CR_Tibetan,
  CR_Myanmar,
  CR_Georgian,
  CR_Hangul,
  CR_Ethiopic,
  CR_Cherokee,
  CR_Canadian_Aboriginal,
  CR_Ogham,
  CR_Runic,
  CR_Khmer,
  CR_Mongolian,
  CR_Hiragana,
  CR_Katakana,
  CR_Bopomofo,
  CR_Han,
  CR_Yi,
  CR_Old_Italic,
  CR_Gothic,
  CR_Deseret,
  CR_Inherited,
  CR_Tagalog,
  CR_Hanunoo,
  CR_Buhid,
  CR_Tagbanwa,
  CR_Limbu,
  CR_Tai_Le,
  CR_Linear_B,
  CR_Ugaritic,
  CR_Shavian,
  CR_Osmanya,
  CR_Cypriot,
  CR_Braille,
  CR_Buginese,
  CR_Coptic,
  CR_New_Tai_Lue,
  CR_Glagolitic,
  CR_Tifinagh,
  CR_Syloti_Nagri,
  CR_Old_Persian,
  CR_Kharoshthi,
  CR_Balinese,
  CR_Cuneiform,
  CR_Phoenician,
  CR_Phags_Pa,
  CR_Nko,
  CR_Sundanese,
  CR_Lepcha,
  CR_Ol_Chiki,
  CR_Vai,
  CR_Saurashtra,
  CR_Kayah_Li,
  CR_Rejang,
  CR_Lycian,
  CR_Carian,
  CR_Lydian,
  CR_Cham,
  CR_Tai_Tham,
  CR_Tai_Viet,
  CR_Avestan,
  CR_Egyptian_Hieroglyphs,
  CR_Samaritan,
  CR_Lisu,
  CR_Bamum,
  CR_Javanese,
  CR_Meetei_Mayek,
  CR_Imperial_Aramaic,
  CR_Old_South_Arabian,
  CR_Inscriptional_Parthian,
  CR_Inscriptional_Pahlavi,
  CR_Old_Turkic,
  CR_Kaithi,
  CR_Batak,
  CR_Brahmi,
  CR_Mandaic,
  CR_Chakma,
  CR_Meroitic_Cursive,
  CR_Meroitic_Hieroglyphs,
  CR_Miao,
  CR_Sharada,
  CR_Sora_Sompeng,
  CR_Takri,
  CR_Caucasian_Albanian,
  CR_Bassa_Vah,
  CR_Duployan,
  CR_Elbasan,
  CR_Grantha,
  CR_Pahawh_Hmong,
  CR_Khojki,
  CR_Linear_A,
  CR_Mahajani,
  CR_Manichaean,
  CR_Mende_Kikakui,
  CR_Modi,
  CR_Mro,
  CR_Old_North_Arabian,
  CR_Nabataean,
  CR_Palmyrene,
  CR_Pau_Cin_Hau,
  CR_Old_Permic,
  CR_Psalter_Pahlavi,
  CR_Siddham,
  CR_Khudawadi,
  CR_Tirhuta,
  CR_Warang_Citi,
  CR_White_Space,
  CR_Bidi_Control,
  CR_Join_Control,
  CR_Dash,
  CR_Hyphen,
  CR_Quotation_Mark,
  CR_Terminal_Punctuation,
  CR_Other_Math,
  CR_Hex_Digit,
  CR_ASCII_Hex_Digit,
  CR_Other_Alphabetic,
  CR_Ideographic,
  CR_Diacritic,
  CR_Extender,
  CR_Other_Lowercase,
  CR_Other_Uppercase,
  CR_Noncharacter_Code_Point,
  CR_Other_Grapheme_Extend,
  CR_IDS_Binary_Operator,
  CR_IDS_Trinary_Operator,
  CR_Radical,
  CR_Unified_Ideograph,
  CR_Other_Default_Ignorable_Code_Point,
  CR_Deprecated,
  CR_Soft_Dotted,
  CR_Logical_Order_Exception,
  CR_Other_ID_Start,
  CR_Other_ID_Continue,
  CR_STerm,
  CR_Variation_Selector,
  CR_Pattern_White_Space,
  CR_Pattern_Syntax,
  CR_Unknown,
#ifdef USE_UNICODE_AGE_PROPERTIES
  CR_Age_1_1,
  CR_Age_2_0,
  CR_Age_2_1,
  CR_Age_3_0,
  CR_Age_3_1,
  CR_Age_3_2,
  CR_Age_4_0,
  CR_Age_4_1,
  CR_Age_5_0,
  CR_Age_5_1,
  CR_Age_5_2,
  CR_Age_6_0,
  CR_Age_6_1,
  CR_Age_6_2,
  CR_Age_6_3,
  CR_Age_7_0,
#endif /* USE_UNICODE_AGE_PROPERTIES */
  CR_In_Basic_Latin,
  CR_In_Latin_1_Supplement,
  CR_In_Latin_Extended_A,
  CR_In_Latin_Extended_B,
  CR_In_IPA_Extensions,
  CR_In_Spacing_Modifier_Letters,
  CR_In_Combining_Diacritical_Marks,
  CR_In_Greek_and_Coptic,
  CR_In_Cyrillic,
  CR_In_Cyrillic_Supplement,
  CR_In_Armenian,
  CR_In_Hebrew,
  CR_In_Arabic,
  CR_In_Syriac,
  CR_In_Arabic_Supplement,
  CR_In_Thaana,
  CR_In_NKo,
  CR_In_Samaritan,
  CR_In_Mandaic,
  CR_In_Arabic_Extended_A,
  CR_In_Devanagari,
  CR_In_Bengali,
  CR_In_Gurmukhi,
  CR_In_Gujarati,
  CR_In_Oriya,
  CR_In_Tamil,
  CR_In_Telugu,
  CR_In_Kannada,
  CR_In_Malayalam,
  CR_In_Sinhala,
  CR_In_Thai,
  CR_In_Lao,
  CR_In_Tibetan,
  CR_In_Myanmar,
  CR_In_Georgian,
  CR_In_Hangul_Jamo,
  CR_In_Ethiopic,
  CR_In_Ethiopic_Supplement,
  CR_In_Cherokee,
  CR_In_Unified_Canadian_Aboriginal_Syllabics,
  CR_In_Ogham,
  CR_In_Runic,
  CR_In_Tagalog,
  CR_In_Hanunoo,
  CR_In_Buhid,
  CR_In_Tagbanwa,
  CR_In_Khmer,
  CR_In_Mongolian,
  CR_In_Unified_Canadian_Aboriginal_Syllabics_Extended,
  CR_In_Limbu,
  CR_In_Tai_Le,
  CR_In_New_Tai_Lue,
  CR_In_Khmer_Symbols,
  CR_In_Buginese,
  CR_In_Tai_Tham,
  CR_In_Combining_Diacritical_Marks_Extended,
  CR_In_Balinese,
  CR_In_Sundanese,
  CR_In_Batak,
  CR_In_Lepcha,
  CR_In_Ol_Chiki,
  CR_In_Sundanese_Supplement,
  CR_In_Vedic_Extensions,
  CR_In_Phonetic_Extensions,
  CR_In_Phonetic_Extensions_Supplement,
  CR_In_Combining_Diacritical_Marks_Supplement,
  CR_In_Latin_Extended_Additional,
  CR_In_Greek_Extended,
  CR_In_General_Punctuation,
  CR_In_Superscripts_and_Subscripts,
  CR_In_Currency_Symbols,
  CR_In_Combining_Diacritical_Marks_for_Symbols,
  CR_In_Letterlike_Symbols,
  CR_In_Number_Forms,
  CR_In_Arrows,
  CR_In_Mathematical_Operators,
  CR_In_Miscellaneous_Technical,
  CR_In_Control_Pictures,
  CR_In_Optical_Character_Recognition,
  CR_In_Enclosed_Alphanumerics,
  CR_In_Box_Drawing,
  CR_In_Block_Elements,
  CR_In_Geometric_Shapes,
  CR_In_Miscellaneous_Symbols,
  CR_In_Dingbats,
  CR_In_Miscellaneous_Mathematical_Symbols_A,
  CR_In_Supplemental_Arrows_A,
  CR_In_Braille_Patterns,
  CR_In_Supplemental_Arrows_B,
  CR_In_Miscellaneous_Mathematical_Symbols_B,
  CR_In_Supplemental_Mathematical_Operators,
  CR_In_Miscellaneous_Symbols_and_Arrows,
  CR_In_Glagolitic,
  CR_In_Latin_Extended_C,
  CR_In_Coptic,
  CR_In_Georgian_Supplement,
  CR_In_Tifinagh,
  CR_In_Ethiopic_Extended,
  CR_In_Cyrillic_Extended_A,
  CR_In_Supplemental_Punctuation,
  CR_In_CJK_Radicals_Supplement,
  CR_In_Kangxi_Radicals,
  CR_In_Ideographic_Description_Characters,
  CR_In_CJK_Symbols_and_Punctuation,
  CR_In_Hiragana,
  CR_In_Katakana,
  CR_In_Bopomofo,
  CR_In_Hangul_Compatibility_Jamo,
  CR_In_Kanbun,
  CR_In_Bopomofo_Extended,
  CR_In_CJK_Strokes,
  CR_In_Katakana_Phonetic_Extensions,
  CR_In_Enclosed_CJK_Letters_and_Months,
  CR_In_CJK_Compatibility,
  CR_In_CJK_Unified_Ideographs_Extension_A,
  CR_In_Yijing_Hexagram_Symbols,
  CR_In_CJK_Unified_Ideographs,
  CR_In_Yi_Syllables,
  CR_In_Yi_Radicals,
  CR_In_Lisu,
  CR_In_Vai,
  CR_In_Cyrillic_Extended_B,
  CR_In_Bamum,
  CR_In_Modifier_Tone_Letters,
  CR_In_Latin_Extended_D,
  CR_In_Syloti_Nagri,
  CR_In_Common_Indic_Number_Forms,
  CR_In_Phags_pa,
  CR_In_Saurashtra,
  CR_In_Devanagari_Extended,
  CR_In_Kayah_Li,
  CR_In_Rejang,
  CR_In_Hangul_Jamo_Extended_A,
  CR_In_Javanese,
  CR_In_Myanmar_Extended_B,
  CR_In_Cham,
  CR_In_Myanmar_Extended_A,
  CR_In_Tai_Viet,
  CR_In_Meetei_Mayek_Extensions,
  CR_In_Ethiopic_Extended_A,
  CR_In_Latin_Extended_E,
  CR_In_Meetei_Mayek,
  CR_In_Hangul_Syllables,
  CR_In_Hangul_Jamo_Extended_B,
  CR_In_High_Surrogates,
  CR_In_High_Private_Use_Surrogates,
  CR_In_Low_Surrogates,
  CR_In_Private_Use_Area,
  CR_In_CJK_Compatibility_Ideographs,
  CR_In_Alphabetic_Presentation_Forms,
  CR_In_Arabic_Presentation_Forms_A,
  CR_In_Variation_Selectors,
  CR_In_Vertical_Forms,
  CR_In_Combining_Half_Marks,
  CR_In_CJK_Compatibility_Forms,
  CR_In_Small_Form_Variants,
  CR_In_Arabic_Presentation_Forms_B,
  CR_In_Halfwidth_and_Fullwidth_Forms,
  CR_In_Specials,
  CR_In_Linear_B_Syllabary,
  CR_In_Linear_B_Ideograms,
  CR_In_Aegean_Numbers,
  CR_In_Ancient_Greek_Numbers,
  CR_In_Ancient_Symbols,
  CR_In_Phaistos_Disc,
  CR_In_Lycian,
  CR_In_Carian,
  CR_In_Coptic_Epact_Numbers,
  CR_In_Old_Italic,
  CR_In_Gothic,
  CR_In_Old_Permic,
  CR_In_Ugaritic,
  CR_In_Old_Persian,
  CR_In_Deseret,
  CR_In_Shavian,
  CR_In_Osmanya,
  CR_In_Elbasan,
  CR_In_Caucasian_Albanian,
  CR_In_Linear_A,
  CR_In_Cypriot_Syllabary,
  CR_In_Imperial_Aramaic,
  CR_In_Palmyrene,
  CR_In_Nabataean,
  CR_In_Phoenician,
  CR_In_Lydian,
  CR_In_Meroitic_Hieroglyphs,
  CR_In_Meroitic_Cursive,
  CR_In_Kharoshthi,
  CR_In_Old_South_Arabian,
  CR_In_Old_North_Arabian,
  CR_In_Manichaean,
  CR_In_Avestan,
  CR_In_Inscriptional_Parthian,
  CR_In_Inscriptional_Pahlavi,
  CR_In_Psalter_Pahlavi,
  CR_In_Old_Turkic,
  CR_In_Rumi_Numeral_Symbols,
  CR_In_Brahmi,
  CR_In_Kaithi,
  CR_In_Sora_Sompeng,
  CR_In_Chakma,
  CR_In_Mahajani,
  CR_In_Sharada,
  CR_In_Sinhala_Archaic_Numbers,
  CR_In_Khojki,
  CR_In_Khudawadi,
  CR_In_Grantha,
  CR_In_Tirhuta,
  CR_In_Siddham,
  CR_In_Modi,
  CR_In_Takri,
  CR_In_Warang_Citi,
  CR_In_Pau_Cin_Hau,
  CR_In_Cuneiform,
  CR_In_Cuneiform_Numbers_and_Punctuation,
  CR_In_Egyptian_Hieroglyphs,
  CR_In_Bamum_Supplement,
  CR_In_Mro,
  CR_In_Bassa_Vah,
  CR_In_Pahawh_Hmong,
  CR_In_Miao,
  CR_In_Kana_Supplement,
  CR_In_Duployan,
  CR_In_Shorthand_Format_Controls,
  CR_In_Byzantine_Musical_Symbols,
  CR_In_Musical_Symbols,
  CR_In_Ancient_Greek_Musical_Notation,
  CR_In_Tai_Xuan_Jing_Symbols,
  CR_In_Counting_Rod_Numerals,
  CR_In_Mathematical_Alphanumeric_Symbols,
  CR_In_Mende_Kikakui,
  CR_In_Arabic_Mathematical_Alphabetic_Symbols,
  CR_In_Mahjong_Tiles,
  CR_In_Domino_Tiles,
  CR_In_Playing_Cards,
  CR_In_Enclosed_Alphanumeric_Supplement,
  CR_In_Enclosed_Ideographic_Supplement,
  CR_In_Miscellaneous_Symbols_and_Pictographs,
  CR_In_Emoticons,
  CR_In_Ornamental_Dingbats,
  CR_In_Transport_and_Map_Symbols,
  CR_In_Alchemical_Symbols,
  CR_In_Geometric_Shapes_Extended,
  CR_In_Supplemental_Arrows_C,
  CR_In_CJK_Unified_Ideographs_Extension_B,
  CR_In_CJK_Unified_Ideographs_Extension_C,
  CR_In_CJK_Unified_Ideographs_Extension_D,
  CR_In_CJK_Compatibility_Ideographs_Supplement,
  CR_In_Tags,
  CR_In_Variation_Selectors_Supplement,
  CR_In_Supplementary_Private_Use_Area_A,
  CR_In_Supplementary_Private_Use_Area_B,
  CR_In_No_Block,
#endif /* USE_UNICODE_PROPERTIES */
};
struct uniname2ctype_struct {
  int name, ctype;
};

static const struct uniname2ctype_struct *uniname2ctype_p(const char *, unsigned int);

#ifndef USE_UNICODE_PROPERTIES
#define TOTAL_KEYWORDS 14
#define MIN_WORD_LENGTH 4
#define MAX_WORD_LENGTH 6
#define MIN_HASH_VALUE 6
#define MAX_HASH_VALUE 19
/* maximum key range = 14, duplicates = 0 */
#else /* USE_UNICODE_PROPERTIES */
#ifndef USE_UNICODE_AGE_PROPERTIES
#define TOTAL_KEYWORDS 689
#else /* USE_UNICODE_AGE_PROPERTIES */
#define TOTAL_KEYWORDS 705
#endif /* USE_UNICODE_AGE_PROPERTIES */
#define MIN_WORD_LENGTH 1
#define MAX_WORD_LENGTH 44
#define MIN_HASH_VALUE 3
#define MAX_HASH_VALUE 4322
/* maximum key range = 4320, duplicates = 0 */
#endif /* USE_UNICODE_PROPERTIES */

#ifdef __GNUC__
__inline
#else
#ifdef __cplusplus
inline
#endif
#endif
static unsigned int
uniname2ctype_hash (str, len)
     register const char *str;
     register unsigned int len;
{
#ifndef USE_UNICODE_PROPERTIES
  static const unsigned char asso_values[] =
#else /* USE_UNICODE_PROPERTIES */
  static const unsigned short asso_values[] =
#endif /* USE_UNICODE_PROPERTIES */
    {
#ifndef USE_UNICODE_PROPERTIES
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20,  3, 11,  5,
       4, 20, 20,  9, 20,  1, 20, 20, 10, 20,
       2, 20,  1, 20,  1,  7,  4,  6, 20,  1,
       4, 20, 20, 20, 20, 20, 20, 20
#else /* USE_UNICODE_PROPERTIES */
      4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,
      4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,
      4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,
      4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,
#ifndef USE_UNICODE_AGE_PROPERTIES
      4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,
      4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,
#else /* USE_UNICODE_AGE_PROPERTIES */
      4323, 4323, 4323, 4323, 4323, 4323,    1, 4323,   12,    1,
         2,    9,   18,   11,    6,   10, 4323, 4323, 4323, 4323,
#endif /* USE_UNICODE_AGE_PROPERTIES */
      4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,
      4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,
      4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,
      4323, 4323, 4323, 4323, 4323, 4323, 4323,   13,  931,    6,
       382,   25,  311,  891,  277,    4,  272, 1436,  120,    7,
         1,  303,  456,    1,  232,   32,   65,  732, 1411,  163,
       883, 1255,    8, 4323, 4323, 4323, 4323, 4323
#endif /* USE_UNICODE_PROPERTIES */
    };
#ifndef USE_UNICODE_PROPERTIES
  return len + asso_values[(unsigned char)str[2]] + asso_values[(unsigned char)str[0]];
#else /* USE_UNICODE_PROPERTIES */
  register int hval = len;

  switch (hval)
    {
      default:
        hval += asso_values[(unsigned char)str[15]];
      /*FALLTHROUGH*/
      case 15:
      case 14:
      case 13:
      case 12:
        hval += asso_values[(unsigned char)str[11]];
      /*FALLTHROUGH*/
      case 11:
      case 10:
      case 9:
      case 8:
      case 7:
      case 6:
        hval += asso_values[(unsigned char)str[5]];
      /*FALLTHROUGH*/
      case 5:
        hval += asso_values[(unsigned char)str[4]];
      /*FALLTHROUGH*/
      case 4:
      case 3:
        hval += asso_values[(unsigned char)str[2]];
      /*FALLTHROUGH*/
      case 2:
        hval += asso_values[(unsigned char)str[1]];
      /*FALLTHROUGH*/
      case 1:
        hval += asso_values[(unsigned char)str[0]];
        break;
    }
  return hval + asso_values[(unsigned char)str[len - 1]];
#endif /* USE_UNICODE_PROPERTIES */
}

struct uniname2ctype_pool_t
  {
#ifndef USE_UNICODE_PROPERTIES
    char uniname2ctype_pool_str6[sizeof("word")];
    char uniname2ctype_pool_str7[sizeof("print")];
    char uniname2ctype_pool_str8[sizeof("punct")];
    char uniname2ctype_pool_str9[sizeof("alpha")];
    char uniname2ctype_pool_str10[sizeof("alnum")];
    char uniname2ctype_pool_str11[sizeof("xdigit")];
    char uniname2ctype_pool_str12[sizeof("upper")];
    char uniname2ctype_pool_str13[sizeof("ascii")];
    char uniname2ctype_pool_str14[sizeof("cntrl")];
    char uniname2ctype_pool_str15[sizeof("space")];
    char uniname2ctype_pool_str16[sizeof("lower")];
    char uniname2ctype_pool_str17[sizeof("graph")];
    char uniname2ctype_pool_str18[sizeof("digit")];
    char uniname2ctype_pool_str19[sizeof("blank")];
#else /* USE_UNICODE_PROPERTIES */
    char uniname2ctype_pool_str3[sizeof("n")];
    char uniname2ctype_pool_str10[sizeof("cn")];
    char uniname2ctype_pool_str11[sizeof("mn")];
    char uniname2ctype_pool_str13[sizeof("c")];
    char uniname2ctype_pool_str15[sizeof("m")];
    char uniname2ctype_pool_str16[sizeof("ci")];
    char uniname2ctype_pool_str17[sizeof("z")];
    char uniname2ctype_pool_str20[sizeof("cc")];
    char uniname2ctype_pool_str21[sizeof("mc")];
    char uniname2ctype_pool_str29[sizeof("mani")];
    char uniname2ctype_pool_str31[sizeof("inmanichaean")];
    char uniname2ctype_pool_str35[sizeof("qaai")];
    char uniname2ctype_pool_str36[sizeof("zzzz")];
    char uniname2ctype_pool_str37[sizeof("qaac")];
    char uniname2ctype_pool_str44[sizeof("incham")];
    char uniname2ctype_pool_str46[sizeof("sc")];
    char uniname2ctype_pool_str48[sizeof("sm")];
    char uniname2ctype_pool_str51[sizeof("mandaic")];
    char uniname2ctype_pool_str55[sizeof("incuneiform")];
    char uniname2ctype_pool_str56[sizeof("cans")];
    char uniname2ctype_pool_str59[sizeof("me")];
    char uniname2ctype_pool_str61[sizeof("inarmenian")];
    char uniname2ctype_pool_str64[sizeof("ascii")];
    char uniname2ctype_pool_str65[sizeof("s")];
    char uniname2ctype_pool_str69[sizeof("insamaritan")];
    char uniname2ctype_pool_str72[sizeof("cs")];
    char uniname2ctype_pool_str74[sizeof("zs")];
    char uniname2ctype_pool_str85[sizeof("inavestan")];
    char uniname2ctype_pool_str92[sizeof("incommonindicnumberforms")];
    char uniname2ctype_pool_str96[sizeof("incuneiformnumbersandpunctuation")];
    char uniname2ctype_pool_str97[sizeof("inthai")];
    char uniname2ctype_pool_str98[sizeof("inipaextensions")];
    char uniname2ctype_pool_str105[sizeof("mtei")];
    char uniname2ctype_pool_str110[sizeof("inspecials")];
    char uniname2ctype_pool_str114[sizeof("initialpunctuation")];
    char uniname2ctype_pool_str115[sizeof("inancientsymbols")];
    char uniname2ctype_pool_str117[sizeof("inthaana")];
    char uniname2ctype_pool_str130[sizeof("inmiscellaneousmathematicalsymbolsa")];
    char uniname2ctype_pool_str134[sizeof("lc")];
    char uniname2ctype_pool_str135[sizeof("inmusicalsymbols")];
    char uniname2ctype_pool_str136[sizeof("lm")];
    char uniname2ctype_pool_str137[sizeof("taile")];
    char uniname2ctype_pool_str141[sizeof("sterm")];
    char uniname2ctype_pool_str142[sizeof("lina")];
    char uniname2ctype_pool_str144[sizeof("inlycian")];
    char uniname2ctype_pool_str147[sizeof("inmyanmarextendeda")];
    char uniname2ctype_pool_str151[sizeof("lana")];
    char uniname2ctype_pool_str153[sizeof("alnum")];
    char uniname2ctype_pool_str155[sizeof("intaitham")];
    char uniname2ctype_pool_str157[sizeof("incontrolpictures")];
    char uniname2ctype_pool_str161[sizeof("inmiscellaneoussymbols")];
    char uniname2ctype_pool_str163[sizeof("inmalayalam")];
    char uniname2ctype_pool_str166[sizeof("intransportandmapsymbols")];
    char uniname2ctype_pool_str170[sizeof("inmiscellaneoussymbolsandarrows")];
    char uniname2ctype_pool_str173[sizeof("inlineara")];
    char uniname2ctype_pool_str175[sizeof("inmiscellaneoussymbolsandpictographs")];
    char uniname2ctype_pool_str183[sizeof("taiviet")];
    char uniname2ctype_pool_str186[sizeof("cwcm")];
    char uniname2ctype_pool_str190[sizeof("sinhala")];
    char uniname2ctype_pool_str203[sizeof("latn")];
    char uniname2ctype_pool_str205[sizeof("latin")];
    char uniname2ctype_pool_str206[sizeof("ital")];
    char uniname2ctype_pool_str208[sizeof("intamil")];
    char uniname2ctype_pool_str209[sizeof("taml")];
    char uniname2ctype_pool_str223[sizeof("inlatinextendedc")];
    char uniname2ctype_pool_str226[sizeof("intaile")];
    char uniname2ctype_pool_str227[sizeof("tale")];
    char uniname2ctype_pool_str237[sizeof("inlatinextendeda")];
    char uniname2ctype_pool_str239[sizeof("inlinearbideograms")];
    char uniname2ctype_pool_str240[sizeof("newtailue")];
    char uniname2ctype_pool_str241[sizeof("l")];
    char uniname2ctype_pool_str243[sizeof("nl")];
    char uniname2ctype_pool_str247[sizeof("inmeeteimayekextensions")];
    char uniname2ctype_pool_str250[sizeof("zl")];
    char uniname2ctype_pool_str252[sizeof("lt")];
    char uniname2ctype_pool_str255[sizeof("inrunic")];
    char uniname2ctype_pool_str256[sizeof("incarian")];
    char uniname2ctype_pool_str257[sizeof("armn")];
    char uniname2ctype_pool_str259[sizeof("cari")];
    char uniname2ctype_pool_str260[sizeof("armi")];
    char uniname2ctype_pool_str261[sizeof("inlatinextendede")];
    char uniname2ctype_pool_str263[sizeof("incyrillic")];
    char uniname2ctype_pool_str266[sizeof("armenian")];
    char uniname2ctype_pool_str267[sizeof("inmyanmar")];
    char uniname2ctype_pool_str270[sizeof("innewtailue")];
    char uniname2ctype_pool_str272[sizeof("carian")];
    char uniname2ctype_pool_str274[sizeof("merc")];
    char uniname2ctype_pool_str280[sizeof("arabic")];
    char uniname2ctype_pool_str284[sizeof("inmiscellaneoustechnical")];
    char uniname2ctype_pool_str287[sizeof("insyriac")];
    char uniname2ctype_pool_str288[sizeof("samr")];
    char uniname2ctype_pool_str294[sizeof("zinh")];
    char uniname2ctype_pool_str295[sizeof("han")];
    char uniname2ctype_pool_str298[sizeof("samaritan")];
    char uniname2ctype_pool_str299[sizeof("hani")];
    char uniname2ctype_pool_str302[sizeof("cwt")];
    char uniname2ctype_pool_str303[sizeof("incherokee")];
    char uniname2ctype_pool_str304[sizeof("insharada")];
    char uniname2ctype_pool_str307[sizeof("cham")];
    char uniname2ctype_pool_str315[sizeof("manichaean")];
    char uniname2ctype_pool_str316[sizeof("inmahajani")];
    char uniname2ctype_pool_str317[sizeof("cntrl")];
    char uniname2ctype_pool_str318[sizeof("sinh")];
    char uniname2ctype_pool_str320[sizeof("inruminumeralsymbols")];
    char uniname2ctype_pool_str327[sizeof("inethiopic")];
    char uniname2ctype_pool_str330[sizeof("tamil")];
    char uniname2ctype_pool_str331[sizeof("miao")];
    char uniname2ctype_pool_str332[sizeof("inenclosedalphanumerics")];
    char uniname2ctype_pool_str333[sizeof("term")];
    char uniname2ctype_pool_str335[sizeof("chakma")];
    char uniname2ctype_pool_str337[sizeof("insinhala")];
    char uniname2ctype_pool_str347[sizeof("shavian")];
    char uniname2ctype_pool_str350[sizeof("inosmanya")];
    char uniname2ctype_pool_str353[sizeof("inlatinextendedadditional")];
    char uniname2ctype_pool_str359[sizeof("osma")];
    char uniname2ctype_pool_str362[sizeof("ll")];
    char uniname2ctype_pool_str363[sizeof("thai")];
    char uniname2ctype_pool_str366[sizeof("math")];
    char uniname2ctype_pool_str372[sizeof("thaa")];
    char uniname2ctype_pool_str374[sizeof("inenclosedalphanumericsupplement")];
    char uniname2ctype_pool_str375[sizeof("ethi")];
    char uniname2ctype_pool_str376[sizeof("connectorpunctuation")];
    char uniname2ctype_pool_str380[sizeof("inlowsurrogates")];
    char uniname2ctype_pool_str382[sizeof("insinhalaarchaicnumbers")];
    char uniname2ctype_pool_str386[sizeof("taitham")];
    char uniname2ctype_pool_str388[sizeof("thaana")];
    char uniname2ctype_pool_str390[sizeof("lineara")];
    char uniname2ctype_pool_str392[sizeof("di")];
    char uniname2ctype_pool_str401[sizeof("idc")];
    char uniname2ctype_pool_str405[sizeof("meroiticcursive")];
    char uniname2ctype_pool_str407[sizeof("mand")];
    char uniname2ctype_pool_str408[sizeof("inmodi")];
    char uniname2ctype_pool_str410[sizeof("inmandaic")];
    char uniname2ctype_pool_str412[sizeof("cwl")];
    char uniname2ctype_pool_str414[sizeof("asciihexdigit")];
    char uniname2ctype_pool_str415[sizeof("dia")];
    char uniname2ctype_pool_str418[sizeof("terminalpunctuation")];
    char uniname2ctype_pool_str419[sizeof("mend")];
    char uniname2ctype_pool_str423[sizeof("sind")];
    char uniname2ctype_pool_str425[sizeof("wara")];
    char uniname2ctype_pool_str433[sizeof("inwarangciti")];
    char uniname2ctype_pool_str439[sizeof("inideographicdescriptioncharacters")];
    char uniname2ctype_pool_str441[sizeof("inemoticons")];
    char uniname2ctype_pool_str453[sizeof("ids")];
    char uniname2ctype_pool_str456[sizeof("insundanese")];
    char uniname2ctype_pool_str466[sizeof("pi")];
    char uniname2ctype_pool_str468[sizeof("indominotiles")];
    char uniname2ctype_pool_str470[sizeof("pc")];
    char uniname2ctype_pool_str476[sizeof("loe")];
    char uniname2ctype_pool_str477[sizeof("titlecaseletter")];
    char uniname2ctype_pool_str485[sizeof("inopticalcharacterrecognition")];
    char uniname2ctype_pool_str487[sizeof("idst")];
    char uniname2ctype_pool_str489[sizeof("shaw")];
    char uniname2ctype_pool_str490[sizeof("cwcf")];
    char uniname2ctype_pool_str493[sizeof("idcontinue")];
    char uniname2ctype_pool_str502[sizeof("inphaistosdisc")];
    char uniname2ctype_pool_str508[sizeof("pe")];
    char uniname2ctype_pool_str518[sizeof("indeseret")];
    char uniname2ctype_pool_str519[sizeof("inspacingmodifierletters")];
    char uniname2ctype_pool_str520[sizeof("inlydian")];
    char uniname2ctype_pool_str522[sizeof("ps")];
    char uniname2ctype_pool_str530[sizeof("hira")];
    char uniname2ctype_pool_str536[sizeof("whitespace")];
    char uniname2ctype_pool_str540[sizeof("inscriptionalparthian")];
    char uniname2ctype_pool_str544[sizeof("cher")];
    char uniname2ctype_pool_str545[sizeof("inmathematicalalphanumericsymbols")];
    char uniname2ctype_pool_str546[sizeof("incoptic")];
    char uniname2ctype_pool_str550[sizeof("inhiragana")];
    char uniname2ctype_pool_str554[sizeof("inenclosedcjklettersandmonths")];
    char uniname2ctype_pool_str556[sizeof("space")];
    char uniname2ctype_pool_str570[sizeof("oriya")];
    char uniname2ctype_pool_str571[sizeof("mero")];
    char uniname2ctype_pool_str573[sizeof("mahj")];
    char uniname2ctype_pool_str582[sizeof("tirh")];
    char uniname2ctype_pool_str584[sizeof("sora")];
    char uniname2ctype_pool_str587[sizeof("inscriptionalpahlavi")];
    char uniname2ctype_pool_str593[sizeof("inarrows")];
    char uniname2ctype_pool_str594[sizeof("mahajani")];
    char uniname2ctype_pool_str596[sizeof("joinc")];
    char uniname2ctype_pool_str597[sizeof("incopticepactnumbers")];
    char uniname2ctype_pool_str598[sizeof("hano")];
    char uniname2ctype_pool_str600[sizeof("palm")];
    char uniname2ctype_pool_str601[sizeof("intirhuta")];
    char uniname2ctype_pool_str603[sizeof("patws")];
    char uniname2ctype_pool_str604[sizeof("inolchiki")];
    char uniname2ctype_pool_str608[sizeof("inlepcha")];
    char uniname2ctype_pool_str609[sizeof("no")];
    char uniname2ctype_pool_str611[sizeof("lepc")];
    char uniname2ctype_pool_str612[sizeof("inogham")];
    char uniname2ctype_pool_str614[sizeof("co")];
    char uniname2ctype_pool_str617[sizeof("innko")];
    char uniname2ctype_pool_str620[sizeof("alpha")];
    char uniname2ctype_pool_str622[sizeof("psalterpahlavi")];
    char uniname2ctype_pool_str623[sizeof("inmro")];
    char uniname2ctype_pool_str624[sizeof("inpalmyrene")];
    char uniname2ctype_pool_str627[sizeof("common")];
    char uniname2ctype_pool_str630[sizeof("cf")];
    char uniname2ctype_pool_str637[sizeof("inmiao")];
    char uniname2ctype_pool_str640[sizeof("so")];
    char uniname2ctype_pool_str650[sizeof("diacritic")];
    char uniname2ctype_pool_str658[sizeof("insundanesesupplement")];
    char uniname2ctype_pool_str672[sizeof("intifinagh")];
    char uniname2ctype_pool_str679[sizeof("tifinagh")];
    char uniname2ctype_pool_str696[sizeof("odi")];
    char uniname2ctype_pool_str699[sizeof("oidc")];
    char uniname2ctype_pool_str700[sizeof("modi")];
    char uniname2ctype_pool_str703[sizeof("decimalnumber")];
    char uniname2ctype_pool_str705[sizeof("letter")];
    char uniname2ctype_pool_str708[sizeof("dash")];
    char uniname2ctype_pool_str709[sizeof("insylotinagri")];
    char uniname2ctype_pool_str711[sizeof("inolditalic")];
    char uniname2ctype_pool_str713[sizeof("wspace")];
    char uniname2ctype_pool_str715[sizeof("dsrt")];
    char uniname2ctype_pool_str718[sizeof("ideo")];
    char uniname2ctype_pool_str722[sizeof("siddham")];
    char uniname2ctype_pool_str724[sizeof("perm")];
    char uniname2ctype_pool_str725[sizeof("oids")];
    char uniname2ctype_pool_str727[sizeof("inmahjongtiles")];
    char uniname2ctype_pool_str728[sizeof("lo")];
    char uniname2ctype_pool_str730[sizeof("lineseparator")];
    char uniname2ctype_pool_str731[sizeof("imperialaramaic")];
    char uniname2ctype_pool_str735[sizeof("idstart")];
    char uniname2ctype_pool_str736[sizeof("inlao")];
    char uniname2ctype_pool_str737[sizeof("sharada")];
    char uniname2ctype_pool_str742[sizeof("lao")];
    char uniname2ctype_pool_str743[sizeof("laoo")];
    char uniname2ctype_pool_str744[sizeof("mongolian")];
    char uniname2ctype_pool_str745[sizeof("oalpha")];
    char uniname2ctype_pool_str749[sizeof("inimperialaramaic")];
    char uniname2ctype_pool_str753[sizeof("nchar")];
    char uniname2ctype_pool_str758[sizeof("inlatin1supplement")];
    char uniname2ctype_pool_str761[sizeof("prti")];
    char uniname2ctype_pool_str763[sizeof("cprt")];
    char uniname2ctype_pool_str767[sizeof("nd")];
    char uniname2ctype_pool_str768[sizeof("deseret")];
    char uniname2ctype_pool_str772[sizeof("inoldturkic")];
    char uniname2ctype_pool_str773[sizeof("radical")];
    char uniname2ctype_pool_str777[sizeof("canadianaboriginal")];
    char uniname2ctype_pool_str779[sizeof("inmodifiertoneletters")];
    char uniname2ctype_pool_str783[sizeof("incaucasianalbanian")];
    char uniname2ctype_pool_str787[sizeof("coptic")];
    char uniname2ctype_pool_str796[sizeof("casedletter")];
    char uniname2ctype_pool_str798[sizeof("sd")];
    char uniname2ctype_pool_str803[sizeof("inphoenician")];
    char uniname2ctype_pool_str804[sizeof("sidd")];
    char uniname2ctype_pool_str805[sizeof("privateuse")];
    char uniname2ctype_pool_str813[sizeof("sundanese")];
    char uniname2ctype_pool_str815[sizeof("inancientgreekmusicalnotation")];
    char uniname2ctype_pool_str817[sizeof("insiddham")];
    char uniname2ctype_pool_str820[sizeof("cased")];
    char uniname2ctype_pool_str827[sizeof("print")];
    char uniname2ctype_pool_str830[sizeof("ininscriptionalparthian")];
    char uniname2ctype_pool_str832[sizeof("ininscriptionalpahlavi")];
    char uniname2ctype_pool_str834[sizeof("copt")];
    char uniname2ctype_pool_str838[sizeof("inancientgreeknumbers")];
    char uniname2ctype_pool_str845[sizeof("saurashtra")];
    char uniname2ctype_pool_str848[sizeof("mro")];
    char uniname2ctype_pool_str849[sizeof("mroo")];
    char uniname2ctype_pool_str850[sizeof("inalphabeticpresentationforms")];
    char uniname2ctype_pool_str858[sizeof("lowercase")];
    char uniname2ctype_pool_str861[sizeof("phli")];
    char uniname2ctype_pool_str864[sizeof("patternwhitespace")];
    char uniname2ctype_pool_str866[sizeof("inenclosedideographicsupplement")];
    char uniname2ctype_pool_str869[sizeof("spaceseparator")];
    char uniname2ctype_pool_str871[sizeof("inmathematicaloperators")];
    char uniname2ctype_pool_str882[sizeof("omath")];
    char uniname2ctype_pool_str892[sizeof("lisu")];
    char uniname2ctype_pool_str895[sizeof("inpsalterpahlavi")];
    char uniname2ctype_pool_str898[sizeof("olditalic")];
    char uniname2ctype_pool_str905[sizeof("hanunoo")];
    char uniname2ctype_pool_str909[sizeof("inherited")];
    char uniname2ctype_pool_str910[sizeof("lepcha")];
    char uniname2ctype_pool_str913[sizeof("p")];
    char uniname2ctype_pool_str916[sizeof("inmongolian")];
    char uniname2ctype_pool_str922[sizeof("zp")];
    char uniname2ctype_pool_str923[sizeof("finalpunctuation")];
    char uniname2ctype_pool_str925[sizeof("otheridcontinue")];
    char uniname2ctype_pool_str927[sizeof("shrd")];
    char uniname2ctype_pool_str932[sizeof("ingrantha")];
    char uniname2ctype_pool_str934[sizeof("talu")];
    char uniname2ctype_pool_str936[sizeof("otheralphabetic")];
    char uniname2ctype_pool_str938[sizeof("noncharactercodepoint")];
#ifdef USE_UNICODE_AGE_PROPERTIES
    char uniname2ctype_pool_str939[sizeof("age=1.1")];
    char uniname2ctype_pool_str940[sizeof("age=2.1")];
#endif /* USE_UNICODE_AGE_PROPERTIES */
    char uniname2ctype_pool_str941[sizeof("closepunctuation")];
    char uniname2ctype_pool_str943[sizeof("letternumber")];
#ifdef USE_UNICODE_AGE_PROPERTIES
    char uniname2ctype_pool_str944[sizeof("age=6.1")];
    char uniname2ctype_pool_str945[sizeof("age=6.2")];
#endif /* USE_UNICODE_AGE_PROPERTIES */
    char uniname2ctype_pool_str946[sizeof("telu")];
#ifdef USE_UNICODE_AGE_PROPERTIES
    char uniname2ctype_pool_str947[sizeof("age=3.1")];
    char uniname2ctype_pool_str948[sizeof("age=3.2")];
    char uniname2ctype_pool_str949[sizeof("age=5.1")];
    char uniname2ctype_pool_str950[sizeof("age=5.2")];
    char uniname2ctype_pool_str951[sizeof("age=2.0")];
    char uniname2ctype_pool_str952[sizeof("age=6.3")];
#endif /* USE_UNICODE_AGE_PROPERTIES */
    char uniname2ctype_pool_str953[sizeof("inshorthandformatcontrols")];
    char uniname2ctype_pool_str954[sizeof("inoldnortharabian")];
#ifdef USE_UNICODE_AGE_PROPERTIES
    char uniname2ctype_pool_str955[sizeof("age=6.0")];
    char uniname2ctype_pool_str956[sizeof("age=4.1")];
#endif /* USE_UNICODE_AGE_PROPERTIES */
    char uniname2ctype_pool_str957[sizeof("ingeneralpunctuation")];
#ifdef USE_UNICODE_AGE_PROPERTIES
    char uniname2ctype_pool_str958[sizeof("age=3.0")];
    char uniname2ctype_pool_str959[sizeof("age=7.0")];
    char uniname2ctype_pool_str960[sizeof("age=5.0")];
#endif /* USE_UNICODE_AGE_PROPERTIES */
    char uniname2ctype_pool_str962[sizeof("innabataean")];
#ifdef USE_UNICODE_AGE_PROPERTIES
    char uniname2ctype_pool_str967[sizeof("age=4.0")];
#endif /* USE_UNICODE_AGE_PROPERTIES */
    char uniname2ctype_pool_str970[sizeof("bamum")];
    char uniname2ctype_pool_str972[sizeof("control")];
    char uniname2ctype_pool_str974[sizeof("induployan")];
    char uniname2ctype_pool_str975[sizeof("inlatinextendedd")];
    char uniname2ctype_pool_str976[sizeof("inarabic")];
    char uniname2ctype_pool_str982[sizeof("runic")];
    char uniname2ctype_pool_str984[sizeof("inelbasan")];
    char uniname2ctype_pool_str985[sizeof("inoldsoutharabian")];
    char uniname2ctype_pool_str986[sizeof("inbasiclatin")];
    char uniname2ctype_pool_str995[sizeof("format")];
    char uniname2ctype_pool_str996[sizeof("innumberforms")];
    char uniname2ctype_pool_str998[sizeof("inugaritic")];
    char uniname2ctype_pool_str999[sizeof("separator")];
    char uniname2ctype_pool_str1000[sizeof("idsbinaryoperator")];
    char uniname2ctype_pool_str1004[sizeof("tagbanwa")];
    char uniname2ctype_pool_str1012[sizeof("bass")];
    char uniname2ctype_pool_str1013[sizeof("saur")];
    char uniname2ctype_pool_str1014[sizeof("nbat")];
    char uniname2ctype_pool_str1017[sizeof("intaixuanjingsymbols")];
    char uniname2ctype_pool_str1019[sizeof("joincontrol")];
    char uniname2ctype_pool_str1023[sizeof("otheridstart")];
    char uniname2ctype_pool_str1027[sizeof("inbyzantinemusicalsymbols")];
    char uniname2ctype_pool_str1031[sizeof("intags")];
    char uniname2ctype_pool_str1033[sizeof("nabataean")];
    char uniname2ctype_pool_str1034[sizeof("insuperscriptsandsubscripts")];
    char uniname2ctype_pool_str1036[sizeof("intibetan")];
    char uniname2ctype_pool_str1039[sizeof("insaurashtra")];
    char uniname2ctype_pool_str1040[sizeof("othersymbol")];
    char uniname2ctype_pool_str1041[sizeof("ext")];
    char uniname2ctype_pool_str1046[sizeof("inarabicpresentationformsa")];
    char uniname2ctype_pool_str1048[sizeof("inmiscellaneousmathematicalsymbolsb")];
    char uniname2ctype_pool_str1049[sizeof("otherlowercase")];
    char uniname2ctype_pool_str1052[sizeof("phoenician")];
    char uniname2ctype_pool_str1055[sizeof("lower")];
    char uniname2ctype_pool_str1060[sizeof("linb")];
    char uniname2ctype_pool_str1064[sizeof("po")];
    char uniname2ctype_pool_str1065[sizeof("inmyanmarextendedb")];
    char uniname2ctype_pool_str1066[sizeof("limb")];
    char uniname2ctype_pool_str1068[sizeof("inbraillepatterns")];
    char uniname2ctype_pool_str1069[sizeof("tibt")];
    char uniname2ctype_pool_str1070[sizeof("cuneiform")];
    char uniname2ctype_pool_str1072[sizeof("bali")];
    char uniname2ctype_pool_str1073[sizeof("oldpersian")];
    char uniname2ctype_pool_str1077[sizeof("oldpermic")];
    char uniname2ctype_pool_str1080[sizeof("pf")];
    char uniname2ctype_pool_str1084[sizeof("word")];
    char uniname2ctype_pool_str1086[sizeof("tibetan")];
    char uniname2ctype_pool_str1089[sizeof("incyrillicsupplement")];
    char uniname2ctype_pool_str1093[sizeof("elba")];
    char uniname2ctype_pool_str1094[sizeof("insupplementalmathematicaloperators")];
    char uniname2ctype_pool_str1095[sizeof("inbalinese")];
    char uniname2ctype_pool_str1101[sizeof("bengali")];
    char uniname2ctype_pool_str1104[sizeof("caseignorable")];
    char uniname2ctype_pool_str1107[sizeof("incountingrodnumerals")];
    char uniname2ctype_pool_str1114[sizeof("other")];
    char uniname2ctype_pool_str1118[sizeof("tirhuta")];
    char uniname2ctype_pool_str1121[sizeof("othernumber")];
    char uniname2ctype_pool_str1123[sizeof("balinese")];
    char uniname2ctype_pool_str1129[sizeof("elbasan")];
    char uniname2ctype_pool_str1134[sizeof("inunifiedcanadianaboriginalsyllabics")];
    char uniname2ctype_pool_str1136[sizeof("lowercaseletter")];
    char uniname2ctype_pool_str1140[sizeof("ethiopic")];
    char uniname2ctype_pool_str1141[sizeof("gran")];
    char uniname2ctype_pool_str1149[sizeof("ingurmukhi")];
    char uniname2ctype_pool_str1151[sizeof("sund")];
    char uniname2ctype_pool_str1153[sizeof("inethiopicsupplement")];
    char uniname2ctype_pool_str1160[sizeof("inoldpersian")];
    char uniname2ctype_pool_str1163[sizeof("inoldpermic")];
    char uniname2ctype_pool_str1170[sizeof("othermath")];
    char uniname2ctype_pool_str1174[sizeof("unassigned")];
    char uniname2ctype_pool_str1180[sizeof("hmng")];
    char uniname2ctype_pool_str1181[sizeof("narb")];
    char uniname2ctype_pool_str1184[sizeof("brai")];
    char uniname2ctype_pool_str1186[sizeof("hang")];
    char uniname2ctype_pool_str1187[sizeof("insorasompeng")];
    char uniname2ctype_pool_str1193[sizeof("arab")];
    char uniname2ctype_pool_str1194[sizeof("plrd")];
    char uniname2ctype_pool_str1195[sizeof("ingujarati")];
    char uniname2ctype_pool_str1197[sizeof("brahmi")];
    char uniname2ctype_pool_str1201[sizeof("runr")];
    char uniname2ctype_pool_str1202[sizeof("ahex")];
    char uniname2ctype_pool_str1206[sizeof("mong")];
    char uniname2ctype_pool_str1211[sizeof("pauc")];
    char uniname2ctype_pool_str1212[sizeof("sarb")];
    char uniname2ctype_pool_str1218[sizeof("ogam")];
    char uniname2ctype_pool_str1221[sizeof("olower")];
    char uniname2ctype_pool_str1222[sizeof("pd")];
    char uniname2ctype_pool_str1235[sizeof("number")];
    char uniname2ctype_pool_str1238[sizeof("inbrahmi")];
    char uniname2ctype_pool_str1240[sizeof("otherletter")];
    char uniname2ctype_pool_str1252[sizeof("ingothic")];
    char uniname2ctype_pool_str1254[sizeof("phagspa")];
    char uniname2ctype_pool_str1262[sizeof("inletterlikesymbols")];
    char uniname2ctype_pool_str1265[sizeof("yi")];
    char uniname2ctype_pool_str1269[sizeof("hangul")];
    char uniname2ctype_pool_str1271[sizeof("yiii")];
    char uniname2ctype_pool_str1272[sizeof("tfng")];
    char uniname2ctype_pool_str1273[sizeof("insupplementalarrowsc")];
    char uniname2ctype_pool_str1277[sizeof("ingreekandcoptic")];
    char uniname2ctype_pool_str1279[sizeof("xidc")];
    char uniname2ctype_pool_str1280[sizeof("insupplementalarrowsa")];
    char uniname2ctype_pool_str1281[sizeof("gothic")];
    char uniname2ctype_pool_str1283[sizeof("grext")];
    char uniname2ctype_pool_str1285[sizeof("incombininghalfmarks")];
    char uniname2ctype_pool_str1286[sizeof("deprecated")];
    char uniname2ctype_pool_str1287[sizeof("inbassavah")];
    char uniname2ctype_pool_str1305[sizeof("xids")];
    char uniname2ctype_pool_str1308[sizeof("linearb")];
    char uniname2ctype_pool_str1312[sizeof("ingeometricshapes")];
    char uniname2ctype_pool_str1313[sizeof("phlp")];
    char uniname2ctype_pool_str1314[sizeof("warangciti")];
    char uniname2ctype_pool_str1317[sizeof("inblockelements")];
    char uniname2ctype_pool_str1318[sizeof("modifierletter")];
    char uniname2ctype_pool_str1321[sizeof("indingbats")];
    char uniname2ctype_pool_str1322[sizeof("dep")];
    char uniname2ctype_pool_str1324[sizeof("punct")];
    char uniname2ctype_pool_str1327[sizeof("inhanunoo")];
    char uniname2ctype_pool_str1334[sizeof("bidic")];
    char uniname2ctype_pool_str1344[sizeof("ingreekextended")];
    char uniname2ctype_pool_str1353[sizeof("idsb")];
    char uniname2ctype_pool_str1359[sizeof("assigned")];
    char uniname2ctype_pool_str1364[sizeof("otherpunctuation")];
    char uniname2ctype_pool_str1368[sizeof("inhangulsyllables")];
    char uniname2ctype_pool_str1373[sizeof("inarabicmathematicalalphabeticsymbols")];
    char uniname2ctype_pool_str1385[sizeof("inornamentaldingbats")];
    char uniname2ctype_pool_str1387[sizeof("inphagspa")];
    char uniname2ctype_pool_str1389[sizeof("lyci")];
    char uniname2ctype_pool_str1393[sizeof("mlym")];
    char uniname2ctype_pool_str1399[sizeof("inarabicextendeda")];
    char uniname2ctype_pool_str1400[sizeof("rjng")];
    char uniname2ctype_pool_str1402[sizeof("lycian")];
    char uniname2ctype_pool_str1403[sizeof("inalchemicalsymbols")];
    char uniname2ctype_pool_str1409[sizeof("xdigit")];
    char uniname2ctype_pool_str1412[sizeof("digit")];
    char uniname2ctype_pool_str1420[sizeof("xidstart")];
    char uniname2ctype_pool_str1421[sizeof("inrejang")];
    char uniname2ctype_pool_str1424[sizeof("malayalam")];
    char uniname2ctype_pool_str1425[sizeof("idstrinaryoperator")];
    char uniname2ctype_pool_str1429[sizeof("invai")];
    char uniname2ctype_pool_str1435[sizeof("vai")];
    char uniname2ctype_pool_str1436[sizeof("vaii")];
    char uniname2ctype_pool_str1438[sizeof("hiragana")];
    char uniname2ctype_pool_str1442[sizeof("ingeorgian")];
    char uniname2ctype_pool_str1448[sizeof("braille")];
    char uniname2ctype_pool_str1455[sizeof("geor")];
    char uniname2ctype_pool_str1457[sizeof("brah")];
    char uniname2ctype_pool_str1463[sizeof("glagolitic")];
    char uniname2ctype_pool_str1465[sizeof("inkannada")];
    char uniname2ctype_pool_str1466[sizeof("cakm")];
    char uniname2ctype_pool_str1467[sizeof("kana")];
    char uniname2ctype_pool_str1469[sizeof("hebr")];
    char uniname2ctype_pool_str1471[sizeof("inshavian")];
    char uniname2ctype_pool_str1477[sizeof("vs")];
    char uniname2ctype_pool_str1481[sizeof("inchakma")];
    char uniname2ctype_pool_str1490[sizeof("ogham")];
    char uniname2ctype_pool_str1491[sizeof("sylotinagri")];
    char uniname2ctype_pool_str1492[sizeof("inunifiedcanadianaboriginalsyllabicsextended")];
    char uniname2ctype_pool_str1495[sizeof("inmeroitichieroglyphs")];
    char uniname2ctype_pool_str1498[sizeof("grantha")];
    char uniname2ctype_pool_str1500[sizeof("graphemebase")];
    char uniname2ctype_pool_str1502[sizeof("mathsymbol")];
    char uniname2ctype_pool_str1505[sizeof("mymr")];
    char uniname2ctype_pool_str1513[sizeof("insupplementaryprivateuseareaa")];
    char uniname2ctype_pool_str1514[sizeof("mendekikakui")];
    char uniname2ctype_pool_str1516[sizeof("incjkcompatibilityforms")];
    char uniname2ctype_pool_str1518[sizeof("inhalfwidthandfullwidthforms")];
    char uniname2ctype_pool_str1521[sizeof("incjkcompatibilityideographs")];
    char uniname2ctype_pool_str1522[sizeof("inkaithi")];
    char uniname2ctype_pool_str1525[sizeof("avst")];
    char uniname2ctype_pool_str1526[sizeof("inarabicsupplement")];
    char uniname2ctype_pool_str1527[sizeof("takri")];
    char uniname2ctype_pool_str1529[sizeof("syrc")];
    char uniname2ctype_pool_str1533[sizeof("meeteimayek")];
    char uniname2ctype_pool_str1534[sizeof("myanmar")];
    char uniname2ctype_pool_str1535[sizeof("avestan")];
    char uniname2ctype_pool_str1536[sizeof("inhanguljamoextendeda")];
    char uniname2ctype_pool_str1540[sizeof("goth")];
    char uniname2ctype_pool_str1542[sizeof("inkatakana")];
    char uniname2ctype_pool_str1544[sizeof("incyrillicextendeda")];
    char uniname2ctype_pool_str1549[sizeof("alphabetic")];
    char uniname2ctype_pool_str1550[sizeof("syriac")];
    char uniname2ctype_pool_str1551[sizeof("ideographic")];
    char uniname2ctype_pool_str1555[sizeof("incjkstrokes")];
    char uniname2ctype_pool_str1557[sizeof("inlinearbsyllabary")];
    char uniname2ctype_pool_str1558[sizeof("tavt")];
    char uniname2ctype_pool_str1559[sizeof("intaiviet")];
    char uniname2ctype_pool_str1564[sizeof("incjkcompatibilityideographssupplement")];
    char uniname2ctype_pool_str1576[sizeof("inmeeteimayek")];
    char uniname2ctype_pool_str1577[sizeof("kali")];
    char uniname2ctype_pool_str1581[sizeof("inyiradicals")];
    char uniname2ctype_pool_str1586[sizeof("lu")];
    char uniname2ctype_pool_str1587[sizeof("inoriya")];
    char uniname2ctype_pool_str1590[sizeof("hebrew")];
    char uniname2ctype_pool_str1596[sizeof("extender")];
    char uniname2ctype_pool_str1598[sizeof("inhighprivateusesurrogates")];
    char uniname2ctype_pool_str1600[sizeof("limbu")];
    char uniname2ctype_pool_str1606[sizeof("inbuhid")];
    char uniname2ctype_pool_str1608[sizeof("inethiopicextendeda")];
    char uniname2ctype_pool_str1609[sizeof("xidcontinue")];
    char uniname2ctype_pool_str1611[sizeof("inyijinghexagramsymbols")];
    char uniname2ctype_pool_str1612[sizeof("logicalorderexception")];
    char uniname2ctype_pool_str1616[sizeof("inhebrew")];
    char uniname2ctype_pool_str1617[sizeof("cyrl")];
    char uniname2ctype_pool_str1618[sizeof("osmanya")];
    char uniname2ctype_pool_str1621[sizeof("phnx")];
    char uniname2ctype_pool_str1622[sizeof("incombiningdiacriticalmarks")];
    char uniname2ctype_pool_str1626[sizeof("inkanasupplement")];
    char uniname2ctype_pool_str1627[sizeof("inlisu")];
    char uniname2ctype_pool_str1628[sizeof("changeswhencasemapped")];
    char uniname2ctype_pool_str1632[sizeof("incombiningdiacriticalmarksforsymbols")];
    char uniname2ctype_pool_str1636[sizeof("cwu")];
    char uniname2ctype_pool_str1641[sizeof("phag")];
    char uniname2ctype_pool_str1645[sizeof("insmallformvariants")];
    char uniname2ctype_pool_str1656[sizeof("inpahawhhmong")];
    char uniname2ctype_pool_str1661[sizeof("otheruppercase")];
    char uniname2ctype_pool_str1662[sizeof("intelugu")];
    char uniname2ctype_pool_str1665[sizeof("incombiningdiacriticalmarkssupplement")];
    char uniname2ctype_pool_str1670[sizeof("ingeometricshapesextended")];
    char uniname2ctype_pool_str1671[sizeof("xpeo")];
    char uniname2ctype_pool_str1687[sizeof("bamu")];
    char uniname2ctype_pool_str1689[sizeof("inbamum")];
    char uniname2ctype_pool_str1692[sizeof("mark")];
    char uniname2ctype_pool_str1694[sizeof("dupl")];
    char uniname2ctype_pool_str1695[sizeof("graph")];
    char uniname2ctype_pool_str1696[sizeof("dashpunctuation")];
    char uniname2ctype_pool_str1700[sizeof("patternsyntax")];
    char uniname2ctype_pool_str1705[sizeof("changeswhentitlecased")];
    char uniname2ctype_pool_str1706[sizeof("inkharoshthi")];
    char uniname2ctype_pool_str1712[sizeof("inkhmer")];
    char uniname2ctype_pool_str1713[sizeof("java")];
    char uniname2ctype_pool_str1714[sizeof("sylo")];
    char uniname2ctype_pool_str1719[sizeof("ugaritic")];
    char uniname2ctype_pool_str1722[sizeof("otherdefaultignorablecodepoint")];
    char uniname2ctype_pool_str1723[sizeof("softdotted")];
    char uniname2ctype_pool_str1729[sizeof("uideo")];
    char uniname2ctype_pool_str1732[sizeof("inphoneticextensions")];
    char uniname2ctype_pool_str1736[sizeof("injavanese")];
    char uniname2ctype_pool_str1742[sizeof("invariationselectors")];
    char uniname2ctype_pool_str1744[sizeof("kaithi")];
    char uniname2ctype_pool_str1747[sizeof("cyrillic")];
    char uniname2ctype_pool_str1749[sizeof("intakri")];
    char uniname2ctype_pool_str1750[sizeof("takr")];
    char uniname2ctype_pool_str1755[sizeof("javanese")];
    char uniname2ctype_pool_str1757[sizeof("bidicontrol")];
    char uniname2ctype_pool_str1758[sizeof("caucasianalbanian")];
    char uniname2ctype_pool_str1765[sizeof("lydi")];
    char uniname2ctype_pool_str1772[sizeof("insupplementalpunctuation")];
    char uniname2ctype_pool_str1775[sizeof("inphoneticextensionssupplement")];
    char uniname2ctype_pool_str1778[sizeof("lydian")];
    char uniname2ctype_pool_str1784[sizeof("oldturkic")];
    char uniname2ctype_pool_str1785[sizeof("invariationselectorssupplement")];
    char uniname2ctype_pool_str1786[sizeof("kthi")];
    char uniname2ctype_pool_str1792[sizeof("inhanguljamo")];
    char uniname2ctype_pool_str1797[sizeof("patsyn")];
    char uniname2ctype_pool_str1802[sizeof("inlimbu")];
    char uniname2ctype_pool_str1804[sizeof("sorasompeng")];
    char uniname2ctype_pool_str1807[sizeof("orya")];
    char uniname2ctype_pool_str1822[sizeof("inkhmersymbols")];
    char uniname2ctype_pool_str1824[sizeof("inglagolitic")];
    char uniname2ctype_pool_str1831[sizeof("indevanagari")];
    char uniname2ctype_pool_str1835[sizeof("deva")];
    char uniname2ctype_pool_str1836[sizeof("knda")];
    char uniname2ctype_pool_str1841[sizeof("inbengali")];
    char uniname2ctype_pool_str1843[sizeof("symbol")];
    char uniname2ctype_pool_str1846[sizeof("devanagari")];
    char uniname2ctype_pool_str1849[sizeof("inmendekikakui")];
    char uniname2ctype_pool_str1852[sizeof("beng")];
    char uniname2ctype_pool_str1853[sizeof("invedicextensions")];
    char uniname2ctype_pool_str1859[sizeof("graphemeextend")];
    char uniname2ctype_pool_str1865[sizeof("kannada")];
    char uniname2ctype_pool_str1866[sizeof("inbuginese")];
    char uniname2ctype_pool_str1869[sizeof("olck")];
    char uniname2ctype_pool_str1871[sizeof("meroitichieroglyphs")];
    char uniname2ctype_pool_str1872[sizeof("ugar")];
    char uniname2ctype_pool_str1874[sizeof("intagalog")];
    char uniname2ctype_pool_str1878[sizeof("inbamumsupplement")];
    char uniname2ctype_pool_str1880[sizeof("olchiki")];
    char uniname2ctype_pool_str1899[sizeof("incurrencysymbols")];
    char uniname2ctype_pool_str1904[sizeof("tagb")];
    char uniname2ctype_pool_str1912[sizeof("inaegeannumbers")];
    char uniname2ctype_pool_str1915[sizeof("intagbanwa")];
    char uniname2ctype_pool_str1916[sizeof("uppercase")];
    char uniname2ctype_pool_str1917[sizeof("defaultignorablecodepoint")];
    char uniname2ctype_pool_str1919[sizeof("glag")];
    char uniname2ctype_pool_str1921[sizeof("inkatakanaphoneticextensions")];
    char uniname2ctype_pool_str1932[sizeof("changeswhencasefolded")];
    char uniname2ctype_pool_str1942[sizeof("inpaucinhau")];
    char uniname2ctype_pool_str1943[sizeof("inprivateusearea")];
    char uniname2ctype_pool_str1947[sizeof("paucinhau")];
    char uniname2ctype_pool_str1953[sizeof("spacingmark")];
    char uniname2ctype_pool_str1956[sizeof("khmr")];
    char uniname2ctype_pool_str1962[sizeof("khar")];
    char uniname2ctype_pool_str1964[sizeof("inarabicpresentationformsb")];
    char uniname2ctype_pool_str1967[sizeof("changeswhenlowercased")];
    char uniname2ctype_pool_str1971[sizeof("tglg")];
    char uniname2ctype_pool_str1976[sizeof("inethiopicextended")];
    char uniname2ctype_pool_str1980[sizeof("incombiningdiacriticalmarksextended")];
    char uniname2ctype_pool_str1986[sizeof("oupper")];
    char uniname2ctype_pool_str1994[sizeof("incjksymbolsandpunctuation")];
    char uniname2ctype_pool_str1997[sizeof("bopo")];
    char uniname2ctype_pool_str1998[sizeof("punctuation")];
    char uniname2ctype_pool_str2002[sizeof("combiningmark")];
    char uniname2ctype_pool_str2007[sizeof("inplayingcards")];
    char uniname2ctype_pool_str2008[sizeof("inbopomofo")];
    char uniname2ctype_pool_str2021[sizeof("hyphen")];
    char uniname2ctype_pool_str2028[sizeof("inkhojki")];
    char uniname2ctype_pool_str2046[sizeof("nko")];
    char uniname2ctype_pool_str2047[sizeof("nkoo")];
    char uniname2ctype_pool_str2048[sizeof("enclosingmark")];
    char uniname2ctype_pool_str2053[sizeof("openpunctuation")];
    char uniname2ctype_pool_str2061[sizeof("currencysymbol")];
    char uniname2ctype_pool_str2063[sizeof("inverticalforms")];
    char uniname2ctype_pool_str2071[sizeof("hex")];
    char uniname2ctype_pool_str2072[sizeof("modifiersymbol")];
    char uniname2ctype_pool_str2073[sizeof("inlatinextendedb")];
    char uniname2ctype_pool_str2075[sizeof("kharoshthi")];
    char uniname2ctype_pool_str2080[sizeof("cherokee")];
    char uniname2ctype_pool_str2088[sizeof("pahawhhmong")];
    char uniname2ctype_pool_str2096[sizeof("cypriot")];
    char uniname2ctype_pool_str2105[sizeof("incypriotsyllabary")];
    char uniname2ctype_pool_str2110[sizeof("palmyrene")];
    char uniname2ctype_pool_str2113[sizeof("upper")];
    char uniname2ctype_pool_str2116[sizeof("aghb")];
    char uniname2ctype_pool_str2123[sizeof("georgian")];
    char uniname2ctype_pool_str2131[sizeof("gujr")];
    char uniname2ctype_pool_str2142[sizeof("grbase")];
    char uniname2ctype_pool_str2152[sizeof("gujarati")];
    char uniname2ctype_pool_str2153[sizeof("hexdigit")];
    char uniname2ctype_pool_str2189[sizeof("khmer")];
    char uniname2ctype_pool_str2194[sizeof("uppercaseletter")];
    char uniname2ctype_pool_str2198[sizeof("insupplementalarrowsb")];
    char uniname2ctype_pool_str2224[sizeof("surrogate")];
    char uniname2ctype_pool_str2227[sizeof("unifiedideograph")];
    char uniname2ctype_pool_str2237[sizeof("nonspacingmark")];
    char uniname2ctype_pool_str2241[sizeof("othergraphemeextend")];
    char uniname2ctype_pool_str2242[sizeof("indevanagariextended")];
    char uniname2ctype_pool_str2252[sizeof("orkh")];
    char uniname2ctype_pool_str2273[sizeof("ingeorgiansupplement")];
    char uniname2ctype_pool_str2287[sizeof("oldnortharabian")];
    char uniname2ctype_pool_str2290[sizeof("tagalog")];
    char uniname2ctype_pool_str2292[sizeof("khoj")];
    char uniname2ctype_pool_str2311[sizeof("bopomofo")];
    char uniname2ctype_pool_str2318[sizeof("rejang")];
    char uniname2ctype_pool_str2326[sizeof("buhd")];
    char uniname2ctype_pool_str2343[sizeof("incjkradicalssupplement")];
    char uniname2ctype_pool_str2382[sizeof("inkanbun")];
    char uniname2ctype_pool_str2406[sizeof("variationselector")];
    char uniname2ctype_pool_str2417[sizeof("inkangxiradicals")];
    char uniname2ctype_pool_str2421[sizeof("inhighsurrogates")];
    char uniname2ctype_pool_str2431[sizeof("insupplementaryprivateuseareab")];
    char uniname2ctype_pool_str2445[sizeof("ogrext")];
    char uniname2ctype_pool_str2449[sizeof("batk")];
    char uniname2ctype_pool_str2454[sizeof("inhanguljamoextendedb")];
    char uniname2ctype_pool_str2457[sizeof("inbatak")];
    char uniname2ctype_pool_str2462[sizeof("incyrillicextendedb")];
    char uniname2ctype_pool_str2502[sizeof("innoblock")];
    char uniname2ctype_pool_str2527[sizeof("any")];
    char uniname2ctype_pool_str2534[sizeof("xsux")];
    char uniname2ctype_pool_str2562[sizeof("bugi")];
    char uniname2ctype_pool_str2570[sizeof("inkhudawadi")];
    char uniname2ctype_pool_str2571[sizeof("telugu")];
    char uniname2ctype_pool_str2579[sizeof("changeswhenuppercased")];
    char uniname2ctype_pool_str2588[sizeof("grek")];
    char uniname2ctype_pool_str2591[sizeof("guru")];
    char uniname2ctype_pool_str2595[sizeof("paragraphseparator")];
    char uniname2ctype_pool_str2613[sizeof("buginese")];
    char uniname2ctype_pool_str2617[sizeof("inyisyllables")];
    char uniname2ctype_pool_str2631[sizeof("egyp")];
    char uniname2ctype_pool_str2634[sizeof("khudawadi")];
    char uniname2ctype_pool_str2643[sizeof("unknown")];
    char uniname2ctype_pool_str2685[sizeof("bassavah")];
    char uniname2ctype_pool_str2689[sizeof("inegyptianhieroglyphs")];
    char uniname2ctype_pool_str2709[sizeof("buhid")];
    char uniname2ctype_pool_str2722[sizeof("inkayahli")];
    char uniname2ctype_pool_str2732[sizeof("inmeroiticcursive")];
    char uniname2ctype_pool_str2734[sizeof("incjkcompatibility")];
    char uniname2ctype_pool_str2787[sizeof("oldsoutharabian")];
    char uniname2ctype_pool_str2795[sizeof("quotationmark")];
    char uniname2ctype_pool_str2889[sizeof("inhangulcompatibilityjamo")];
    char uniname2ctype_pool_str2898[sizeof("qmark")];
    char uniname2ctype_pool_str2902[sizeof("incjkunifiedideographsextensionc")];
    char uniname2ctype_pool_str2906[sizeof("sk")];
    char uniname2ctype_pool_str2909[sizeof("incjkunifiedideographsextensiona")];
    char uniname2ctype_pool_str2918[sizeof("incjkunifiedideographs")];
    char uniname2ctype_pool_str2984[sizeof("katakana")];
    char uniname2ctype_pool_str3112[sizeof("kayahli")];
    char uniname2ctype_pool_str3137[sizeof("duployan")];
    char uniname2ctype_pool_str3278[sizeof("incjkunifiedideographsextensiond")];
    char uniname2ctype_pool_str3360[sizeof("inbopomofoextended")];
    char uniname2ctype_pool_str3466[sizeof("khojki")];
    char uniname2ctype_pool_str3777[sizeof("zyyy")];
    char uniname2ctype_pool_str3778[sizeof("egyptianhieroglyphs")];
    char uniname2ctype_pool_str3827[sizeof("incjkunifiedideographsextensionb")];
    char uniname2ctype_pool_str3886[sizeof("batak")];
    char uniname2ctype_pool_str3941[sizeof("blank")];
    char uniname2ctype_pool_str3995[sizeof("inboxdrawing")];
    char uniname2ctype_pool_str4025[sizeof("greek")];
    char uniname2ctype_pool_str4035[sizeof("gurmukhi")];
    char uniname2ctype_pool_str4122[sizeof("grlink")];
    char uniname2ctype_pool_str4322[sizeof("graphemelink")];
#endif /* USE_UNICODE_PROPERTIES */
  };
static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
  {
#ifndef USE_UNICODE_PROPERTIES
    "word",
    "print",
    "punct",
    "alpha",
    "alnum",
    "xdigit",
    "upper",
#else /* USE_UNICODE_PROPERTIES */
    "n",
    "cn",
    "mn",
    "c",
    "m",
    "ci",
    "z",
    "cc",
    "mc",
    "mani",
    "inmanichaean",
    "qaai",
    "zzzz",
    "qaac",
    "incham",
    "sc",
    "sm",
    "mandaic",
    "incuneiform",
    "cans",
    "me",
    "inarmenian",
#endif /* USE_UNICODE_PROPERTIES */
    "ascii",
#ifdef USE_UNICODE_PROPERTIES
    "s",
    "insamaritan",
    "cs",
    "zs",
    "inavestan",
    "incommonindicnumberforms",
    "incuneiformnumbersandpunctuation",
    "inthai",
    "inipaextensions",
    "mtei",
    "inspecials",
    "initialpunctuation",
    "inancientsymbols",
    "inthaana",
    "inmiscellaneousmathematicalsymbolsa",
    "lc",
    "inmusicalsymbols",
    "lm",
    "taile",
    "sterm",
    "lina",
    "inlycian",
    "inmyanmarextendeda",
    "lana",
    "alnum",
    "intaitham",
    "incontrolpictures",
    "inmiscellaneoussymbols",
    "inmalayalam",
    "intransportandmapsymbols",
    "inmiscellaneoussymbolsandarrows",
    "inlineara",
    "inmiscellaneoussymbolsandpictographs",
    "taiviet",
    "cwcm",
    "sinhala",
    "latn",
    "latin",
    "ital",
    "intamil",
    "taml",
    "inlatinextendedc",
    "intaile",
    "tale",
    "inlatinextendeda",
    "inlinearbideograms",
    "newtailue",
    "l",
    "nl",
    "inmeeteimayekextensions",
    "zl",
    "lt",
    "inrunic",
    "incarian",
    "armn",
    "cari",
    "armi",
    "inlatinextendede",
    "incyrillic",
    "armenian",
    "inmyanmar",
    "innewtailue",
    "carian",
    "merc",
    "arabic",
    "inmiscellaneoustechnical",
    "insyriac",
    "samr",
    "zinh",
    "han",
    "samaritan",
    "hani",
    "cwt",
    "incherokee",
    "insharada",
    "cham",
    "manichaean",
    "inmahajani",
#endif /* USE_UNICODE_PROPERTIES */
    "cntrl",
#ifdef USE_UNICODE_PROPERTIES
    "sinh",
    "inruminumeralsymbols",
    "inethiopic",
    "tamil",
    "miao",
    "inenclosedalphanumerics",
    "term",
    "chakma",
    "insinhala",
    "shavian",
    "inosmanya",
    "inlatinextendedadditional",
    "osma",
    "ll",
    "thai",
    "math",
    "thaa",
    "inenclosedalphanumericsupplement",
    "ethi",
    "connectorpunctuation",
    "inlowsurrogates",
    "insinhalaarchaicnumbers",
    "taitham",
    "thaana",
    "lineara",
    "di",
    "idc",
    "meroiticcursive",
    "mand",
    "inmodi",
    "inmandaic",
    "cwl",
    "asciihexdigit",
    "dia",
    "terminalpunctuation",
    "mend",
    "sind",
    "wara",
    "inwarangciti",
    "inideographicdescriptioncharacters",
    "inemoticons",
    "ids",
    "insundanese",
    "pi",
    "indominotiles",
    "pc",
    "loe",
    "titlecaseletter",
    "inopticalcharacterrecognition",
    "idst",
    "shaw",
    "cwcf",
    "idcontinue",
    "inphaistosdisc",
    "pe",
    "indeseret",
    "inspacingmodifierletters",
    "inlydian",
    "ps",
    "hira",
    "whitespace",
    "inscriptionalparthian",
    "cher",
    "inmathematicalalphanumericsymbols",
    "incoptic",
    "inhiragana",
    "inenclosedcjklettersandmonths",
#endif /* USE_UNICODE_PROPERTIES */
    "space",
#ifdef USE_UNICODE_PROPERTIES
    "oriya",
    "mero",
    "mahj",
    "tirh",
    "sora",
    "inscriptionalpahlavi",
    "inarrows",
    "mahajani",
    "joinc",
    "incopticepactnumbers",
    "hano",
    "palm",
    "intirhuta",
    "patws",
    "inolchiki",
    "inlepcha",
    "no",
    "lepc",
    "inogham",
    "co",
    "innko",
    "alpha",
    "psalterpahlavi",
    "inmro",
    "inpalmyrene",
    "common",
    "cf",
    "inmiao",
    "so",
    "diacritic",
    "insundanesesupplement",
    "intifinagh",
    "tifinagh",
    "odi",
    "oidc",
    "modi",
    "decimalnumber",
    "letter",
    "dash",
    "insylotinagri",
    "inolditalic",
    "wspace",
    "dsrt",
    "ideo",
    "siddham",
    "perm",
    "oids",
    "inmahjongtiles",
    "lo",
    "lineseparator",
    "imperialaramaic",
    "idstart",
    "inlao",
    "sharada",
    "lao",
    "laoo",
    "mongolian",
    "oalpha",
    "inimperialaramaic",
    "nchar",
    "inlatin1supplement",
    "prti",
    "cprt",
    "nd",
    "deseret",
    "inoldturkic",
    "radical",
    "canadianaboriginal",
    "inmodifiertoneletters",
    "incaucasianalbanian",
    "coptic",
    "casedletter",
    "sd",
    "inphoenician",
    "sidd",
    "privateuse",
    "sundanese",
    "inancientgreekmusicalnotation",
    "insiddham",
    "cased",
    "print",
    "ininscriptionalparthian",
    "ininscriptionalpahlavi",
    "copt",
    "inancientgreeknumbers",
    "saurashtra",
    "mro",
    "mroo",
    "inalphabeticpresentationforms",
    "lowercase",
    "phli",
    "patternwhitespace",
    "inenclosedideographicsupplement",
    "spaceseparator",
    "inmathematicaloperators",
    "omath",
    "lisu",
    "inpsalterpahlavi",
    "olditalic",
    "hanunoo",
    "inherited",
    "lepcha",
    "p",
    "inmongolian",
    "zp",
    "finalpunctuation",
    "otheridcontinue",
    "shrd",
    "ingrantha",
    "talu",
    "otheralphabetic",
    "noncharactercodepoint",
#ifdef USE_UNICODE_AGE_PROPERTIES
    "age=1.1",
    "age=2.1",
#endif /* USE_UNICODE_AGE_PROPERTIES */
    "closepunctuation",
    "letternumber",
#ifdef USE_UNICODE_AGE_PROPERTIES
    "age=6.1",
    "age=6.2",
#endif /* USE_UNICODE_AGE_PROPERTIES */
    "telu",
#ifdef USE_UNICODE_AGE_PROPERTIES
    "age=3.1",
    "age=3.2",
    "age=5.1",
    "age=5.2",
    "age=2.0",
    "age=6.3",
#endif /* USE_UNICODE_AGE_PROPERTIES */
    "inshorthandformatcontrols",
    "inoldnortharabian",
#ifdef USE_UNICODE_AGE_PROPERTIES
    "age=6.0",
    "age=4.1",
#endif /* USE_UNICODE_AGE_PROPERTIES */
    "ingeneralpunctuation",
#ifdef USE_UNICODE_AGE_PROPERTIES
    "age=3.0",
    "age=7.0",
    "age=5.0",
#endif /* USE_UNICODE_AGE_PROPERTIES */
    "innabataean",
#ifdef USE_UNICODE_AGE_PROPERTIES
    "age=4.0",
#endif /* USE_UNICODE_AGE_PROPERTIES */
    "bamum",
    "control",
    "induployan",
    "inlatinextendedd",
    "inarabic",
    "runic",
    "inelbasan",
    "inoldsoutharabian",
    "inbasiclatin",
    "format",
    "innumberforms",
    "inugaritic",
    "separator",
    "idsbinaryoperator",
    "tagbanwa",
    "bass",
    "saur",
    "nbat",
    "intaixuanjingsymbols",
    "joincontrol",
    "otheridstart",
    "inbyzantinemusicalsymbols",
    "intags",
    "nabataean",
    "insuperscriptsandsubscripts",
    "intibetan",
    "insaurashtra",
    "othersymbol",
    "ext",
    "inarabicpresentationformsa",
    "inmiscellaneousmathematicalsymbolsb",
    "otherlowercase",
    "phoenician",
#endif /* USE_UNICODE_PROPERTIES */
    "lower",
#ifndef USE_UNICODE_PROPERTIES
    "graph",
#else /* USE_UNICODE_PROPERTIES */
    "linb",
    "po",
    "inmyanmarextendedb",
    "limb",
    "inbraillepatterns",
    "tibt",
    "cuneiform",
    "bali",
    "oldpersian",
    "oldpermic",
    "pf",
    "word",
    "tibetan",
    "incyrillicsupplement",
    "elba",
    "insupplementalmathematicaloperators",
    "inbalinese",
    "bengali",
    "caseignorable",
    "incountingrodnumerals",
    "other",
    "tirhuta",
    "othernumber",
    "balinese",
    "elbasan",
    "inunifiedcanadianaboriginalsyllabics",
    "lowercaseletter",
    "ethiopic",
    "gran",
    "ingurmukhi",
    "sund",
    "inethiopicsupplement",
    "inoldpersian",
    "inoldpermic",
    "othermath",
    "unassigned",
    "hmng",
    "narb",
    "brai",
    "hang",
    "insorasompeng",
    "arab",
    "plrd",
    "ingujarati",
    "brahmi",
    "runr",
    "ahex",
    "mong",
    "pauc",
    "sarb",
    "ogam",
    "olower",
    "pd",
    "number",
    "inbrahmi",
    "otherletter",
    "ingothic",
    "phagspa",
    "inletterlikesymbols",
    "yi",
    "hangul",
    "yiii",
    "tfng",
    "insupplementalarrowsc",
    "ingreekandcoptic",
    "xidc",
    "insupplementalarrowsa",
    "gothic",
    "grext",
    "incombininghalfmarks",
    "deprecated",
    "inbassavah",
    "xids",
    "linearb",
    "ingeometricshapes",
    "phlp",
    "warangciti",
    "inblockelements",
    "modifierletter",
    "indingbats",
    "dep",
    "punct",
    "inhanunoo",
    "bidic",
    "ingreekextended",
    "idsb",
    "assigned",
    "otherpunctuation",
    "inhangulsyllables",
    "inarabicmathematicalalphabeticsymbols",
    "inornamentaldingbats",
    "inphagspa",
    "lyci",
    "mlym",
    "inarabicextendeda",
    "rjng",
    "lycian",
    "inalchemicalsymbols",
    "xdigit",
#endif /* USE_UNICODE_PROPERTIES */
    "digit",
#ifndef USE_UNICODE_PROPERTIES
    "blank"
#else /* USE_UNICODE_PROPERTIES */
    "xidstart",
    "inrejang",
    "malayalam",
    "idstrinaryoperator",
    "invai",
    "vai",
    "vaii",
    "hiragana",
    "ingeorgian",
    "braille",
    "geor",
    "brah",
    "glagolitic",
    "inkannada",
    "cakm",
    "kana",
    "hebr",
    "inshavian",
    "vs",
    "inchakma",
    "ogham",
    "sylotinagri",
    "inunifiedcanadianaboriginalsyllabicsextended",
    "inmeroitichieroglyphs",
    "grantha",
    "graphemebase",
    "mathsymbol",
    "mymr",
    "insupplementaryprivateuseareaa",
    "mendekikakui",
    "incjkcompatibilityforms",
    "inhalfwidthandfullwidthforms",
    "incjkcompatibilityideographs",
    "inkaithi",
    "avst",
    "inarabicsupplement",
    "takri",
    "syrc",
    "meeteimayek",
    "myanmar",
    "avestan",
    "inhanguljamoextendeda",
    "goth",
    "inkatakana",
    "incyrillicextendeda",
    "alphabetic",
    "syriac",
    "ideographic",
    "incjkstrokes",
    "inlinearbsyllabary",
    "tavt",
    "intaiviet",
    "incjkcompatibilityideographssupplement",
    "inmeeteimayek",
    "kali",
    "inyiradicals",
    "lu",
    "inoriya",
    "hebrew",
    "extender",
    "inhighprivateusesurrogates",
    "limbu",
    "inbuhid",
    "inethiopicextendeda",
    "xidcontinue",
    "inyijinghexagramsymbols",
    "logicalorderexception",
    "inhebrew",
    "cyrl",
    "osmanya",
    "phnx",
    "incombiningdiacriticalmarks",
    "inkanasupplement",
    "inlisu",
    "changeswhencasemapped",
    "incombiningdiacriticalmarksforsymbols",
    "cwu",
    "phag",
    "insmallformvariants",
    "inpahawhhmong",
    "otheruppercase",
    "intelugu",
    "incombiningdiacriticalmarkssupplement",
    "ingeometricshapesextended",
    "xpeo",
    "bamu",
    "inbamum",
    "mark",
    "dupl",
    "graph",
    "dashpunctuation",
    "patternsyntax",
    "changeswhentitlecased",
    "inkharoshthi",
    "inkhmer",
    "java",
    "sylo",
    "ugaritic",
    "otherdefaultignorablecodepoint",
    "softdotted",
    "uideo",
    "inphoneticextensions",
    "injavanese",
    "invariationselectors",
    "kaithi",
    "cyrillic",
    "intakri",
    "takr",
    "javanese",
    "bidicontrol",
    "caucasianalbanian",
    "lydi",
    "insupplementalpunctuation",
    "inphoneticextensionssupplement",
    "lydian",
    "oldturkic",
    "invariationselectorssupplement",
    "kthi",
    "inhanguljamo",
    "patsyn",
    "inlimbu",
    "sorasompeng",
    "orya",
    "inkhmersymbols",
    "inglagolitic",
    "indevanagari",
    "deva",
    "knda",
    "inbengali",
    "symbol",
    "devanagari",
    "inmendekikakui",
    "beng",
    "invedicextensions",
    "graphemeextend",
    "kannada",
    "inbuginese",
    "olck",
    "meroitichieroglyphs",
    "ugar",
    "intagalog",
    "inbamumsupplement",
    "olchiki",
    "incurrencysymbols",
    "tagb",
    "inaegeannumbers",
    "intagbanwa",
    "uppercase",
    "defaultignorablecodepoint",
    "glag",
    "inkatakanaphoneticextensions",
    "changeswhencasefolded",
    "inpaucinhau",
    "inprivateusearea",
    "paucinhau",
    "spacingmark",
    "khmr",
    "khar",
    "inarabicpresentationformsb",
    "changeswhenlowercased",
    "tglg",
    "inethiopicextended",
    "incombiningdiacriticalmarksextended",
    "oupper",
    "incjksymbolsandpunctuation",
    "bopo",
    "punctuation",
    "combiningmark",
    "inplayingcards",
    "inbopomofo",
    "hyphen",
    "inkhojki",
    "nko",
    "nkoo",
    "enclosingmark",
    "openpunctuation",
    "currencysymbol",
    "inverticalforms",
    "hex",
    "modifiersymbol",
    "inlatinextendedb",
    "kharoshthi",
    "cherokee",
    "pahawhhmong",
    "cypriot",
    "incypriotsyllabary",
    "palmyrene",
    "upper",
    "aghb",
    "georgian",
    "gujr",
    "grbase",
    "gujarati",
    "hexdigit",
    "khmer",
    "uppercaseletter",
    "insupplementalarrowsb",
    "surrogate",
    "unifiedideograph",
    "nonspacingmark",
    "othergraphemeextend",
    "indevanagariextended",
    "orkh",
    "ingeorgiansupplement",
    "oldnortharabian",
    "tagalog",
    "khoj",
    "bopomofo",
    "rejang",
    "buhd",
    "incjkradicalssupplement",
    "inkanbun",
    "variationselector",
    "inkangxiradicals",
    "inhighsurrogates",
    "insupplementaryprivateuseareab",
    "ogrext",
    "batk",
    "inhanguljamoextendedb",
    "inbatak",
    "incyrillicextendedb",
    "innoblock",
    "any",
    "xsux",
    "bugi",
    "inkhudawadi",
    "telugu",
    "changeswhenuppercased",
    "grek",
    "guru",
    "paragraphseparator",
    "buginese",
    "inyisyllables",
    "egyp",
    "khudawadi",
    "unknown",
    "bassavah",
    "inegyptianhieroglyphs",
    "buhid",
    "inkayahli",
    "inmeroiticcursive",
    "incjkcompatibility",
    "oldsoutharabian",
    "quotationmark",
    "inhangulcompatibilityjamo",
    "qmark",
    "incjkunifiedideographsextensionc",
    "sk",
    "incjkunifiedideographsextensiona",
    "incjkunifiedideographs",
    "katakana",
    "kayahli",
    "duployan",
    "incjkunifiedideographsextensiond",
    "inbopomofoextended",
    "khojki",
    "zyyy",
    "egyptianhieroglyphs",
    "incjkunifiedideographsextensionb",
    "batak",
    "blank",
    "inboxdrawing",
    "greek",
    "gurmukhi",
    "grlink",
    "graphemelink"
#endif /* USE_UNICODE_PROPERTIES */
  };
#define uniname2ctype_pool ((const char *) &uniname2ctype_pool_contents)
#ifdef __GNUC__
__inline
#ifdef __GNUC_STDC_INLINE__
__attribute__ ((__gnu_inline__))
#endif
#endif
const struct uniname2ctype_struct *
uniname2ctype_p (str, len)
     register const char *str;
     register unsigned int len;
{
  static const struct uniname2ctype_struct wordlist[] =
    {
#ifdef USE_UNICODE_PROPERTIES
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3,                                        34},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str10,                                       20},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str11,                                       33},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str13,                                        17},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str15,                                        30},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str16,                                       60},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str17,                                        51},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str20,                                       18},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str21,                                       31},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str29,                                    185},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str31,                            438},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str35,                                    114},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str36,                                    231},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str37,                                    128},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str44,                                  383},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str46,                                       47},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str48,                                       49},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str51,                                 168},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str55,                             461},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str56,                                    101},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str59,                                       32},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str61,                              258},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str64,                                    14},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str65,                                        46},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str69,                             265},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str72,                                       22},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str74,                                       54},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str85,                               439},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str92,                374},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str96,        462},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str97,                                  278},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str98,                         252},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str105,                                    159},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str110,                              406},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str114,                       43},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str115,                        411},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str117,                                263},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str130,     333},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str134,                                       24},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str135,                        473},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str136,                                       26},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str137,                                   120},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str141,                                   227},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str142,                                    183},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str144,                                413},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str147,                      384},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str151,                                    151},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str153,                                    13},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str155,                               302},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str157,                       325},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str161,                  331},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str163,                             276},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str166,                488},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str170,         339},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str173,                               426},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str175,    485},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str183,                                 152},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str186,                                     65},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str190,                                  92},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str203,                                     75},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str205,                                    75},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str206,                                    111},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str208,                                 273},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str209,                                     88},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str223,                        341},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str226,                                 298},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str227,                                    120},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str237,                        250},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str239,                      408},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str240,                               129},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str241,                                        23},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str243,                                       36},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str247,                 386},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str250,                                       52},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str252,                                       28},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str255,                                 289},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str256,                                414},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str257,                                     78},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str259,                                    148},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str260,                                    160},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str261,                        388},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str263,                              256},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str266,                                 78},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str267,                               281},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str270,                             299},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str272,                                  148},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str274,                                    170},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str280,                                   80},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str284,                324},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str287,                                261},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str288,                                    155},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str294,                                    114},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str295,                                     109},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str298,                               155},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str299,                                    109},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str302,                                      63},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str303,                              286},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str304,                               450},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str307,                                    150},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str315,                              185},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str316,                              449},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str317,                                     3},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str318,                                     92},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str320,                    444},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str327,                              284},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str330,                                    88},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str331,                                    172},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str332,                 327},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str333,                                    205},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str335,                                  169},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str337,                               277},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str347,                                 123},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str350,                               423},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str353,               314},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str359,                                    124},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str362,                                       25},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str363,                                     93},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str366,                                     55},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str372,                                     82},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str374,        483},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str375,                                     99},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str376,                     39},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str380,                         394},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str382,                 451},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str386,                                 151},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str388,                                   82},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str390,                                 183},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str392,                                       70},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str401,                                      67},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str405,                         170},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str407,                                    168},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str408,                                  457},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str410,                               266},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str412,                                      61},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str414,                           208},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str415,                                     211},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str418,                     205},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str419,                                    186},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str423,                                    196},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str425,                                    198},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str433,                            459},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str439,      350},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str441,                             486},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str453,                                      66},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str456,                             305},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str466,                                       43},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str468,                           481},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str470,                                       39},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str476,                                     224},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str477,                          28},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str485,           326},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str487,                                    218},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str489,                                    123},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str490,                                     64},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str493,                               67},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str502,                          412},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str508,                                       41},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str518,                               421},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str519,                253},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str520,                                432},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str522,                                       45},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str530,                                    106},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str536,                              199},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str540,                   162},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str544,                                    100},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str545,       477},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str546,                                342},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str550,                              352},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str554,           360},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str556,                                     9},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str570,                                    87},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str571,                                    171},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str573,                                    184},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str582,                                    197},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str584,                                    174},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str587,                    163},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str593,                                322},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str594,                                184},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str596,                                   201},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str597,                    415},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str598,                                    116},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str600,                                    191},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str601,                               455},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str603,                                   229},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str604,                               308},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str608,                                307},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str609,                                       37},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str611,                                    141},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str612,                                 288},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str614,                                       21},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str617,                                   264},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str620,                                     1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str622,                          194},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str623,                                   465},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str624,                             429},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str627,                                   74},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str630,                                       19},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str637,                                  468},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str640,                                       50},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str650,                               211},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str658,                   309},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str672,                              344},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str679,                                131},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str696,                                     221},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str699,                                    226},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str700,                                    187},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str703,                            35},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str705,                                   23},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str708,                                    202},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str709,                           373},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str711,                             416},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str713,                                  199},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str715,                                    113},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str718,                                    210},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str722,                                 195},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str724,                                    193},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str725,                                    225},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str727,                          480},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str728,                                       27},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str730,                            52},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str731,                         160},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str735,                                  66},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str736,                                   279},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str737,                                 173},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str742,                                      94},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str743,                                     94},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str744,                               105},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str745,                                  209},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str749,                       428},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str753,                                   215},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str758,                      249},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str761,                                    162},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str763,                                    125},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str767,                                       35},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str768,                                 113},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str772,                             443},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str773,                                 219},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str777,                      101},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str779,                   371},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str783,                     425},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str787,                                  128},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str796,                              24},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str798,                                      223},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str803,                            431},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str804,                                    195},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str805,                               21},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str813,                               140},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str815,           474},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str817,                               456},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str820,                                    59},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str827,                                     7},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str830,                 440},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str832,                  441},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str834,                                    128},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str838,                   410},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str845,                              144},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str848,                                     188},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str849,                                    188},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str850,           397},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str858,                                57},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str861,                                    163},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str864,                       229},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str866,         484},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str869,                           54},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str871,                 323},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str882,                                   206},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str892,                                    156},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str895,                        442},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str898,                               111},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str905,                                 116},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str909,                               114},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str910,                                  141},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str913,                                        38},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str916,                             295},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str922,                                       53},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str923,                         42},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str925,                         226},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str927,                                    173},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str932,                               454},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str934,                                    129},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str936,                         209},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str938,                   215},
#ifndef USE_UNICODE_AGE_PROPERTIES
      {-1}, {-1},
#else /* USE_UNICODE_AGE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str939,                                 232},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str940,                                 234},
#endif /* USE_UNICODE_AGE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str941,                         41},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str943,                             36},
#ifndef USE_UNICODE_AGE_PROPERTIES
      {-1}, {-1},
#else /* USE_UNICODE_AGE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str944,                                 244},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str945,                                 245},
#endif /* USE_UNICODE_AGE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str946,                                     89},
#ifndef USE_UNICODE_AGE_PROPERTIES
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
#else /* USE_UNICODE_AGE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str947,                                 236},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str948,                                 237},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str949,                                 241},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str950,                                 242},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str951,                                 233},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str952,                                 246},
#endif /* USE_UNICODE_AGE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str953,               471},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str954,                       437},
#ifndef USE_UNICODE_AGE_PROPERTIES
      {-1}, {-1},
#else /* USE_UNICODE_AGE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str955,                                 243},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str956,                                 239},
#endif /* USE_UNICODE_AGE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str957,                    316},
#ifndef USE_UNICODE_AGE_PROPERTIES
      {-1}, {-1}, {-1}, {-1},
#else /* USE_UNICODE_AGE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str958,                                 235},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str959,                                 247},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str960,                                 240},
      {-1},
#endif /* USE_UNICODE_AGE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str962,                             430},
#ifndef USE_UNICODE_AGE_PROPERTIES
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
#else /* USE_UNICODE_AGE_PROPERTIES */
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str967,                                 238},
      {-1}, {-1},
#endif /* USE_UNICODE_AGE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str970,                                   157},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str972,                                  18},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str974,                              470},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str975,                        372},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str976,                                260},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str982,                                   103},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str984,                               424},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str985,                       436},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str986,                            248},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str995,                                   19},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str996,                           321},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str998,                              419},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str999,                                51},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1000,                       217},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1004,                                118},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1012,                                    177},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1013,                                    144},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1014,                                    190},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1017,                    475},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1019,                             201},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1023,                            225},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1027,               472},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1031,                                  496},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1033,                               190},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1034,             317},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1036,                               280},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1039,                            376},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1040,                              50},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1041,                                     212},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1046,              398},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1048,     337},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1049,                          213},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1052,                              137},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1055,                                     6},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1060,                                    121},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1064,                                       44},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1065,                      382},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1066,                                    119},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1068,                       335},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1069,                                     95},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1070,                               136},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1072,                                    135},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1073,                              133},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1077,                               193},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1080,                                       42},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1084,                                     12},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1086,                                  95},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1089,                    257},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1093,                                    179},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1094,     338},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1095,                              304},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1101,                                  84},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1104,                            60},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1107,                   476},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1114,                                    17},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1118,                                 197},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1121,                              37},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1123,                                135},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1129,                                 179},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1134,    287},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1136,                          25},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1140,                                 99},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1141,                                    180},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1149,                              270},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1151,                                    140},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1153,                    285},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1160,                            420},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1163,                             418},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1170,                               206},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1174,                               20},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1180,                                    181},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1181,                                    189},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1184,                                    126},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1186,                                     98},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1187,                           447},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1193,                                     80},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1194,                                    172},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1195,                              271},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1197,                                  167},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1201,                                    103},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1202,                                    208},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1206,                                    105},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1211,                                    192},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1212,                                    161},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1218,                                    102},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1221,                                  213},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1222,                                       40},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1235,                                   34},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1238,                                445},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1240,                              27},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1252,                                417},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1254,                                 138},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1262,                     320},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1265,                                      110},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1269,                                   98},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1271,                                    110},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1272,                                    131},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1273,                   491},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1277,                        255},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1279,                                     69},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1280,                   334},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1281,                                  112},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1283,                                    71},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1285,                    401},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1286,                              222},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1287,                              466},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1305,                                     68},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1308,                                 121},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1312,                       330},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1313,                                    194},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1314,                              198},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1317,                         329},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1318,                           26},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1321,                              332},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1322,                                     222},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1324,                                     8},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1327,                               291},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1334,                                   200},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1344,                         315},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1353,                                    217},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1359,                                 16},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1364,                         44},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1368,                       390},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1373,   479},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1385,                    487},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1387,                               375},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1389,                                    147},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1393,                                     91},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1399,                       267},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1400,                                    146},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1402,                                  147},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1403,                     489},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1409,                                   11},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1412,                                     4},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1420,                                 68},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1421,                                379},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1424,                                91},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1425,                      218},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1429,                                   368},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1435,                                     143},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1436,                                    143},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1438,                                106},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1442,                              282},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1448,                                 126},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1455,                                     97},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1457,                                    167},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1463,                              130},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1465,                               275},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1466,                                    169},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1467,                                    107},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1469,                                     79},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1471,                               422},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1477,                                      228},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1481,                                448},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1490,                                   102},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1491,                             132},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1492, 296},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1495,                   433},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1498,                                 180},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1500,                             72},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1502,                               49},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1505,                                     96},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1513,          498},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1514,                            186},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1516,                 402},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1518,            405},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1521,            396},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1522,                                446},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1525,                                    153},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1526,                      262},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1527,                                   175},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1529,                                     81},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1533,                             159},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1534,                                  96},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1535,                                 153},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1536,                   380},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1540,                                    112},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1542,                              353},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1544,                     346},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1549,                               56},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1550,                                   81},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1551,                             210},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1555,                            358},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1557,                      407},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1558,                                    152},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1559,                               385},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1564,  495},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1576,                           389},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1577,                                    145},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1581,                            366},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1586,                                       29},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1587,                                 272},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1590,                                   79},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1596,                                212},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1598,              393},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1600,                                   119},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1606,                                 292},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1608,                     387},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1609,                              69},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1611,                 363},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1612,                   224},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1616,                                259},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1617,                                     77},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1618,                                 124},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1621,                                    137},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1622,             254},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1626,                        469},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1627,                                  367},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1628,                    65},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1632,   319},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1636,                                      62},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1641,                                    138},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1645,                     403},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1656,                           467},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1661,                          214},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1662,                                274},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1665,   313},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1670,               490},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1671,                                    133},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1687,                                    157},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1689,                                 370},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1692,                                     30},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1694,                                    178},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1695,                                     5},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1696,                          40},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1700,                           230},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1705,                    63},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1706,                            435},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1712,                                 294},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1713,                                    158},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1714,                                    132},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1719,                                122},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1722,          221},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1723,                              223},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1729,                                   220},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1732,                    311},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1736,                              381},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1742,                    399},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1744,                                  165},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1747,                                 77},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1749,                                 458},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1750,                                    175},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1755,                                158},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1757,                             200},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1758,                       176},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1765,                                    149},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1772,               347},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1775,          312},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1778,                                  149},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1784,                               164},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1785,          497},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1786,                                    165},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1792,                            283},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1797,                                  230},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1802,                                 297},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1804,                             174},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1807,                                     87},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1822,                          300},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1824,                            340},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1831,                            268},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1835,                                     83},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1836,                                     90},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1841,                               269},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1843,                                   46},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1846,                               83},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1849,                          478},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1852,                                     84},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1853,                       310},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1859,                           71},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1865,                                  90},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1866,                              301},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1869,                                    142},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1871,                     171},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1872,                                    122},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1874,                               290},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1878,                       464},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1880,                                 142},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1899,                       318},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1904,                                    118},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1912,                         409},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1915,                              293},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1916,                                58},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1917,                70},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1919,                                    130},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1921,            359},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1932,                    64},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1942,                             460},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1943,                        395},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1947,                               192},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1953,                              31},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1956,                                    104},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1962,                                    134},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1964,              404},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1967,                    61},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1971,                                    115},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1976,                      345},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1980,     303},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1986,                                  214},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1994,              351},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1997,                                    108},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1998,                              38},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2002,                            30},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2007,                          482},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2008,                              354},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2021,                                  203},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2028,                                452},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2046,                                     139},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2047,                                    139},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2048,                            32},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2053,                          45},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2061,                           47},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2063,                         400},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2071,                                     207},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2072,                           48},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2073,                        251},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2075,                              134},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2080,                                100},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2088,                             181},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2096,                                 125},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2105,                      427},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2110,                               191},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2113,                                    10},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2116,                                    176},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2123,                                 97},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2131,                                     86},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2142,                                   72},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2152,                                 86},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2153,                                207},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2189,                                   104},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2194,                          29},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2198,                   336},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2224,                                22},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2227,                        220},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2237,                           33},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2241,                     216},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2242,                    377},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2252,                                    164},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2273,                    343},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2287,                         189},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2290,                                 115},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2292,                                    182},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2311,                                108},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2318,                                  146},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2326,                                    117},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2343,                 348},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2382,                                356},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2406,                       228},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2417,                        349},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2421,                        392},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2431,          499},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2445,                                  216},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2449,                                    166},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2454,                   391},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2457,                                 306},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2462,                     369},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2502,                               500},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2527,                                      15},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2534,                                    136},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2562,                                    127},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2570,                             453},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2571,                                   89},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2579,                    62},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2588,                                     76},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2591,                                     85},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2595,                       53},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2613,                                127},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2617,                           365},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2631,                                    154},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2634,                               196},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2643,                                 231},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2685,                                177},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2689,                   463},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2709,                                   117},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2722,                               378},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2732,                       434},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2734,                      361},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2787,                         161},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2795,                           204},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2889,               355},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2898,                                   204},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2902,        493},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2906,                                       48},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2909,        362},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2918,                  364},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2984,                                107},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3112,                                 145},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3137,                                178},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3278,        494},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3360,                      357},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
#endif /* USE_UNICODE_PROPERTIES */
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
#ifndef USE_UNICODE_PROPERTIES
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str6,                                     12},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str7,                                     7},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str8,                                     8},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str9,                                     1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str10,                                    13},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str11,                                   11},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str12,                                    10},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str13,                                    14},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str14,                                     3},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str15,                                     9},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str16,                                     6},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str17,                                     5},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str18,                                     4},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str19,                                     2}
#else /* USE_UNICODE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3466,                                  182},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3777,                                     74},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3778,                     154},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3827,        492},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3886,                                   166},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3941,                                     2},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3995,                            328},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str4025,                                    76},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str4035,                                 85},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str4122,                                   73},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str4322,                             73}
#endif /* USE_UNICODE_PROPERTIES */
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      register int key = uniname2ctype_hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= 0)
        {
          register int o = wordlist[key].name;
          if (o >= 0)
            {
              register const char *s = o + uniname2ctype_pool;

              if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
                return &wordlist[key];
            }
        }
    }
  return 0;
}

static int
uniname2ctype(const UChar *name, unsigned int len)
{
  const struct uniname2ctype_struct *p = uniname2ctype_p((const char *)name, len);
  if (p) return p->ctype;
  return -1;
}
