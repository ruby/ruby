%# -*- C -*-
%# Copyright (c) 2018 Urabe, Shyouhei.  All rights reserved.
%#
%# This file is a part of  the programming language Ruby.  Permission is hereby
%# granted, to either  redistribute and/or modify this file,  provided that the
%# conditions mentioned  in the  file COPYING  are met.   Consult the  file for
%# details.
%;
#line <%= __LINE__ + 1 %> <%=cstr __FILE__ %>

static rb_snum_t
sp_inc_of_sendish(const struct rb_call_info *ci)
{
    /* Send-ish instructions will:
     *
     * 1. If there is a block arg, pop it from the stack.
     * 2. Pop other arguments from the stack.
     * 3. Pop receiver from the stack.
     * 4. (The actual evaluation goes here...)
     * 5. Then, push the return value onto the stack.
     * 6. Optionally, immediately pop that value if desired.
     */
    const int argb = (ci->flag & VM_CALL_ARGS_BLOCKARG) ? 1 : 0;
    const int argc = ci->orig_argc;
    const int recv = 1;
    const int retn = 1;
    const int popn = (ci->flag & VM_CALL_POPIT) ? 1 : 0;

    /*         1.     2.     3.     5.     6.    */
    return 0 - argb - argc - recv + retn - popn;
}

static rb_snum_t
sp_inc_of_invokeblock(const struct rb_call_info *ci)
{
    /* sp_inc of invokeblock is almost identical to that of sendish
     * instructions, except that it does not pop receiver. */
    return sp_inc_of_sendish(ci) + 1;
}
#pragma RubyVM reset source
