# Running tests of RBS gem may fail because of various reasons.
# You can skip tests of RBS gem using this file, instead of pushing a new commit to `ruby/rbs` repository.
#
# The most frequently seen reason is the incompatibilities introduced to the unreleased version, including
#
# * Strict argument type check is introduced
# * A required method parameter is added
# * A method/class is removed
#
# Feel free to skip the tests with this file for that case.
#
# Syntax:
#
#   $(test-case-name) ` ` $(optional comment)    # Skipping single test case
#   $(test-class-name) ` ` $(optional comment)   # Skipping a test class
#

test_replicate(EncodingTest) the method was removed in 3.3

test_collection_install(RBS::CliTest) running tests without Bundler
test_collection_install_frozen(RBS::CliTest) running tests without Bundler
test_collection_install_gemspec(RBS::CliTest) running tests without Bundler
test_collection_update(RBS::CliTest) running tests without Bundler

test_defs(RBS::RbPrototypeTest)
test_defs_return_type(RBS::RbPrototypeTest)
test_defs_return_type_with_block(RBS::RbPrototypeTest)
test_defs_return_type_with_if(RBS::RbPrototypeTest)
test_endless_method_definition(RBS::RbPrototypeTest)
test_literal_to_type(RBS::RbPrototypeTest)
test_literal_types(RBS::RbPrototypeTest)

test_TOPDIR(RbConfigSingletonTest) `TOPDIR` is `nil` during CI while RBS type is declared as `String`

test_aref(FiberSingletonTest) the method should not accept String keys

NetSingletonTest depending on external resources
NetInstanceTest depending on external resources
TestHTTPRequest depending on external resources
TestSingletonNetHTTPResponse depending on external resources
TestInstanceNetHTTPResponse depending on external resources
