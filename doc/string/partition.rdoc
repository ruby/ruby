Returns a 3-element array of substrings
that form a partition of +self+

Matches <tt>pattern</tt> against +self+, scanning from the beginning.
Converts <tt>pattern</tt> a Regexp if it not already one.

If the pattern is matched, returns pre-matched, first-matched, post-matched substrings:

  'hello'.partition('l')      # => ["he", "l", "lo"]
  'hello'.partition('ll')     # => ["he", "ll", "o"]
  'hello'.partition('h')      # => ["", "h", "ello"]
  'hello'.partition('o')      # => ["hell", "o", ""]
  'hello'.partition(/l+/)     #=> ["he", "ll", "o"]
  'hello'.partition('')       # => ["", "", "hello"]
  'тест'.partition('т')       # => ["", "т", "ест"]
  'こんにちは'.partition('に')  # => ["こん", "に", "ちは"]

If the pattern is not matched, returns a copy of +self+ and two empty strings:

  'hello'.partition('x') # => ["hello", "", ""]

Related: see {Converting to Non-String}[rdoc-ref:String@Converting+to+Non--5CString].
