@ ProgramNode (location: (1,0)-(25,3))
├── locals: [:foo, :a]
└── statements:
    @ StatementsNode (location: (1,0)-(25,3))
    └── body: (length: 7)
        ├── @ UntilNode (location: (1,0)-(1,13))
        │   ├── flags: ∅
        │   ├── keyword_loc: (1,2)-(1,7) = "until"
        │   ├── closing_loc: ∅
        │   ├── predicate:
        │   │   @ CallNode (location: (1,8)-(1,13))
        │   │   ├── flags: ∅
        │   │   ├── receiver: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :b?
        │   │   ├── message_loc: (1,8)-(1,10) = "b?"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block:
        │   │       @ BlockNode (location: (1,11)-(1,13))
        │   │       ├── locals: []
        │   │       ├── locals_body_index: 0
        │   │       ├── parameters: ∅
        │   │       ├── body: ∅
        │   │       ├── opening_loc: (1,11)-(1,12) = "{"
        │   │       └── closing_loc: (1,12)-(1,13) = "}"
        │   └── statements:
        │       @ StatementsNode (location: (1,0)-(1,1))
        │       └── body: (length: 1)
        │           └── @ CallNode (location: (1,0)-(1,1))
        │               ├── flags: variable_call
        │               ├── receiver: ∅
        │               ├── call_operator_loc: ∅
        │               ├── name: :a
        │               ├── message_loc: (1,0)-(1,1) = "a"
        │               ├── opening_loc: ∅
        │               ├── arguments: ∅
        │               ├── closing_loc: ∅
        │               └── block: ∅
        ├── @ UntilNode (location: (3,0)-(5,3))
        │   ├── flags: ∅
        │   ├── keyword_loc: (3,0)-(3,5) = "until"
        │   ├── closing_loc: (5,0)-(5,3) = "end"
        │   ├── predicate:
        │   │   @ CallNode (location: (3,6)-(3,11))
        │   │   ├── flags: ∅
        │   │   ├── receiver: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :b?
        │   │   ├── message_loc: (3,6)-(3,8) = "b?"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block:
        │   │       @ BlockNode (location: (3,9)-(3,11))
        │   │       ├── locals: []
        │   │       ├── locals_body_index: 0
        │   │       ├── parameters: ∅
        │   │       ├── body: ∅
        │   │       ├── opening_loc: (3,9)-(3,10) = "{"
        │   │       └── closing_loc: (3,10)-(3,11) = "}"
        │   └── statements:
        │       @ StatementsNode (location: (4,2)-(4,3))
        │       └── body: (length: 1)
        │           └── @ CallNode (location: (4,2)-(4,3))
        │               ├── flags: variable_call
        │               ├── receiver: ∅
        │               ├── call_operator_loc: ∅
        │               ├── name: :a
        │               ├── message_loc: (4,2)-(4,3) = "a"
        │               ├── opening_loc: ∅
        │               ├── arguments: ∅
        │               ├── closing_loc: ∅
        │               └── block: ∅
        ├── @ WhileNode (location: (7,0)-(7,19))
        │   ├── flags: ∅
        │   ├── keyword_loc: (7,10)-(7,15) = "while"
        │   ├── closing_loc: ∅
        │   ├── predicate:
        │   │   @ LocalVariableReadNode (location: (7,16)-(7,19))
        │   │   ├── name: :foo
        │   │   └── depth: 0
        │   └── statements:
        │       @ StatementsNode (location: (7,0)-(7,9))
        │       └── body: (length: 1)
        │           └── @ LocalVariableWriteNode (location: (7,0)-(7,9))
        │               ├── name: :foo
        │               ├── depth: 0
        │               ├── name_loc: (7,0)-(7,3) = "foo"
        │               ├── value:
        │               │   @ CallNode (location: (7,6)-(7,9))
        │               │   ├── flags: variable_call
        │               │   ├── receiver: ∅
        │               │   ├── call_operator_loc: ∅
        │               │   ├── name: :bar
        │               │   ├── message_loc: (7,6)-(7,9) = "bar"
        │               │   ├── opening_loc: ∅
        │               │   ├── arguments: ∅
        │               │   ├── closing_loc: ∅
        │               │   └── block: ∅
        │               └── operator_loc: (7,4)-(7,5) = "="
        ├── @ UntilNode (location: (9,0)-(9,18))
        │   ├── flags: ∅
        │   ├── keyword_loc: (9,2)-(9,7) = "until"
        │   ├── closing_loc: ∅
        │   ├── predicate:
        │   │   @ AndNode (location: (9,8)-(9,18))
        │   │   ├── left:
        │   │   │   @ CallNode (location: (9,8)-(9,9))
        │   │   │   ├── flags: variable_call
        │   │   │   ├── receiver: ∅
        │   │   │   ├── call_operator_loc: ∅
        │   │   │   ├── name: :b
        │   │   │   ├── message_loc: (9,8)-(9,9) = "b"
        │   │   │   ├── opening_loc: ∅
        │   │   │   ├── arguments: ∅
        │   │   │   ├── closing_loc: ∅
        │   │   │   └── block: ∅
        │   │   ├── right:
        │   │   │   @ CallNode (location: (9,13)-(9,18))
        │   │   │   ├── flags: ∅
        │   │   │   ├── receiver: ∅
        │   │   │   ├── call_operator_loc: ∅
        │   │   │   ├── name: :a
        │   │   │   ├── message_loc: (9,13)-(9,14) = "a"
        │   │   │   ├── opening_loc: ∅
        │   │   │   ├── arguments: ∅
        │   │   │   ├── closing_loc: ∅
        │   │   │   └── block:
        │   │   │       @ BlockNode (location: (9,15)-(9,18))
        │   │   │       ├── locals: []
        │   │   │       ├── locals_body_index: 0
        │   │   │       ├── parameters: ∅
        │   │   │       ├── body: ∅
        │   │   │       ├── opening_loc: (9,15)-(9,16) = "{"
        │   │   │       └── closing_loc: (9,17)-(9,18) = "}"
        │   │   └── operator_loc: (9,10)-(9,12) = "&&"
        │   └── statements:
        │       @ StatementsNode (location: (9,0)-(9,1))
        │       └── body: (length: 1)
        │           └── @ CallNode (location: (9,0)-(9,1))
        │               ├── flags: variable_call
        │               ├── receiver: ∅
        │               ├── call_operator_loc: ∅
        │               ├── name: :a
        │               ├── message_loc: (9,0)-(9,1) = "a"
        │               ├── opening_loc: ∅
        │               ├── arguments: ∅
        │               ├── closing_loc: ∅
        │               └── block: ∅
        ├── @ WhileNode (location: (11,0)-(13,3))
        │   ├── flags: ∅
        │   ├── keyword_loc: (11,0)-(11,5) = "while"
        │   ├── closing_loc: (13,0)-(13,3) = "end"
        │   ├── predicate:
        │   │   @ LocalVariableWriteNode (location: (11,6)-(11,11))
        │   │   ├── name: :a
        │   │   ├── depth: 0
        │   │   ├── name_loc: (11,6)-(11,7) = "a"
        │   │   ├── value:
        │   │   │   @ CallNode (location: (11,10)-(11,11))
        │   │   │   ├── flags: variable_call
        │   │   │   ├── receiver: ∅
        │   │   │   ├── call_operator_loc: ∅
        │   │   │   ├── name: :b
        │   │   │   ├── message_loc: (11,10)-(11,11) = "b"
        │   │   │   ├── opening_loc: ∅
        │   │   │   ├── arguments: ∅
        │   │   │   ├── closing_loc: ∅
        │   │   │   └── block: ∅
        │   │   └── operator_loc: (11,8)-(11,9) = "="
        │   └── statements:
        │       @ StatementsNode (location: (12,2)-(12,3))
        │       └── body: (length: 1)
        │           └── @ LocalVariableReadNode (location: (12,2)-(12,3))
        │               ├── name: :a
        │               └── depth: 0
        ├── @ UntilNode (location: (15,0)-(18,3))
        │   ├── flags: ∅
        │   ├── keyword_loc: (15,2)-(15,7) = "until"
        │   ├── closing_loc: ∅
        │   ├── predicate:
        │   │   @ CallNode (location: (15,8)-(18,3))
        │   │   ├── flags: ∅
        │   │   ├── receiver: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :b
        │   │   ├── message_loc: (15,8)-(15,9) = "b"
        │   │   ├── opening_loc: (15,9)-(15,10) = "("
        │   │   ├── arguments:
        │   │   │   @ ArgumentsNode (location: (15,10)-(15,16))
        │   │   │   ├── flags: ∅
        │   │   │   └── arguments: (length: 1)
        │   │   │       └── @ StringNode (location: (15,10)-(15,16))
        │   │   │           ├── flags: ∅
        │   │   │           ├── opening_loc: (15,10)-(15,16) = "<<-FOO"
        │   │   │           ├── content_loc: (16,0)-(16,0) = ""
        │   │   │           ├── closing_loc: (16,0)-(17,0) = "FOO\n"
        │   │   │           └── unescaped: ""
        │   │   ├── closing_loc: (15,16)-(15,17) = ")"
        │   │   └── block:
        │   │       @ BlockNode (location: (15,18)-(18,3))
        │   │       ├── locals: []
        │   │       ├── locals_body_index: 0
        │   │       ├── parameters: ∅
        │   │       ├── body:
        │   │       │   @ StatementsNode (location: (17,2)-(17,3))
        │   │       │   └── body: (length: 1)
        │   │       │       └── @ CallNode (location: (17,2)-(17,3))
        │   │       │           ├── flags: variable_call
        │   │       │           ├── receiver: ∅
        │   │       │           ├── call_operator_loc: ∅
        │   │       │           ├── name: :c
        │   │       │           ├── message_loc: (17,2)-(17,3) = "c"
        │   │       │           ├── opening_loc: ∅
        │   │       │           ├── arguments: ∅
        │   │       │           ├── closing_loc: ∅
        │   │       │           └── block: ∅
        │   │       ├── opening_loc: (15,18)-(15,20) = "do"
        │   │       └── closing_loc: (18,0)-(18,3) = "end"
        │   └── statements:
        │       @ StatementsNode (location: (15,0)-(15,1))
        │       └── body: (length: 1)
        │           └── @ LocalVariableReadNode (location: (15,0)-(15,1))
        │               ├── name: :a
        │               └── depth: 0
        └── @ ModuleNode (location: (20,0)-(25,3))
            ├── locals: [:foo]
            ├── module_keyword_loc: (20,0)-(20,6) = "module"
            ├── constant_path:
            │   @ ConstantReadNode (location: (20,7)-(20,8))
            │   └── name: :A
            ├── body:
            │   @ StatementsNode (location: (21,2)-(24,5))
            │   └── body: (length: 2)
            │       ├── @ LocalVariableWriteNode (location: (21,2)-(21,11))
            │       │   ├── name: :foo
            │       │   ├── depth: 0
            │       │   ├── name_loc: (21,2)-(21,5) = "foo"
            │       │   ├── value:
            │       │   │   @ CallNode (location: (21,8)-(21,11))
            │       │   │   ├── flags: variable_call
            │       │   │   ├── receiver: ∅
            │       │   │   ├── call_operator_loc: ∅
            │       │   │   ├── name: :exp
            │       │   │   ├── message_loc: (21,8)-(21,11) = "exp"
            │       │   │   ├── opening_loc: ∅
            │       │   │   ├── arguments: ∅
            │       │   │   ├── closing_loc: ∅
            │       │   │   └── block: ∅
            │       │   └── operator_loc: (21,6)-(21,7) = "="
            │       └── @ WhileNode (location: (22,2)-(24,5))
            │           ├── flags: ∅
            │           ├── keyword_loc: (22,2)-(22,7) = "while"
            │           ├── closing_loc: (24,2)-(24,5) = "end"
            │           ├── predicate:
            │           │   @ LocalVariableReadNode (location: (22,8)-(22,11))
            │           │   ├── name: :foo
            │           │   └── depth: 0
            │           └── statements:
            │               @ StatementsNode (location: (23,4)-(23,13))
            │               └── body: (length: 1)
            │                   └── @ LocalVariableWriteNode (location: (23,4)-(23,13))
            │                       ├── name: :foo
            │                       ├── depth: 0
            │                       ├── name_loc: (23,4)-(23,7) = "foo"
            │                       ├── value:
            │                       │   @ CallNode (location: (23,10)-(23,13))
            │                       │   ├── flags: variable_call
            │                       │   ├── receiver: ∅
            │                       │   ├── call_operator_loc: ∅
            │                       │   ├── name: :bar
            │                       │   ├── message_loc: (23,10)-(23,13) = "bar"
            │                       │   ├── opening_loc: ∅
            │                       │   ├── arguments: ∅
            │                       │   ├── closing_loc: ∅
            │                       │   └── block: ∅
            │                       └── operator_loc: (23,8)-(23,9) = "="
            ├── end_keyword_loc: (25,0)-(25,3) = "end"
            └── name: :A
