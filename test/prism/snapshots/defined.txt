@ ProgramNode (location: (1,0)-(10,1))
├── locals: [:x]
└── statements:
    @ StatementsNode (location: (1,0)-(10,1))
    └── body: (length: 5)
        ├── @ AndNode (location: (1,0)-(1,25))
        │   ├── left:
        │   │   @ DefinedNode (location: (1,0)-(1,10))
        │   │   ├── lparen_loc: ∅
        │   │   ├── value:
        │   │   │   @ IntegerNode (location: (1,9)-(1,10))
        │   │   │   └── flags: decimal
        │   │   ├── rparen_loc: ∅
        │   │   └── keyword_loc: (1,0)-(1,8) = "defined?"
        │   ├── right:
        │   │   @ DefinedNode (location: (1,15)-(1,25))
        │   │   ├── lparen_loc: ∅
        │   │   ├── value:
        │   │   │   @ IntegerNode (location: (1,24)-(1,25))
        │   │   │   └── flags: decimal
        │   │   ├── rparen_loc: ∅
        │   │   └── keyword_loc: (1,15)-(1,23) = "defined?"
        │   └── operator_loc: (1,11)-(1,14) = "and"
        ├── @ DefinedNode (location: (3,0)-(3,16))
        │   ├── lparen_loc: (3,8)-(3,9) = "("
        │   ├── value:
        │   │   @ LocalVariableOperatorWriteNode (location: (3,9)-(3,15))
        │   │   ├── name_loc: (3,9)-(3,10) = "x"
        │   │   ├── operator_loc: (3,11)-(3,13) = "%="
        │   │   ├── value:
        │   │   │   @ IntegerNode (location: (3,14)-(3,15))
        │   │   │   └── flags: decimal
        │   │   ├── name: :x
        │   │   ├── operator: :%
        │   │   └── depth: 0
        │   ├── rparen_loc: (3,15)-(3,16) = ")"
        │   └── keyword_loc: (3,0)-(3,8) = "defined?"
        ├── @ DefinedNode (location: (5,0)-(5,21))
        │   ├── lparen_loc: (5,8)-(5,9) = "("
        │   ├── value:
        │   │   @ AndNode (location: (5,9)-(5,20))
        │   │   ├── left:
        │   │   │   @ CallNode (location: (5,9)-(5,12))
        │   │   │   ├── flags: variable_call
        │   │   │   ├── receiver: ∅
        │   │   │   ├── call_operator_loc: ∅
        │   │   │   ├── name: :foo
        │   │   │   ├── message_loc: (5,9)-(5,12) = "foo"
        │   │   │   ├── opening_loc: ∅
        │   │   │   ├── arguments: ∅
        │   │   │   ├── closing_loc: ∅
        │   │   │   └── block: ∅
        │   │   ├── right:
        │   │   │   @ CallNode (location: (5,17)-(5,20))
        │   │   │   ├── flags: variable_call
        │   │   │   ├── receiver: ∅
        │   │   │   ├── call_operator_loc: ∅
        │   │   │   ├── name: :bar
        │   │   │   ├── message_loc: (5,17)-(5,20) = "bar"
        │   │   │   ├── opening_loc: ∅
        │   │   │   ├── arguments: ∅
        │   │   │   ├── closing_loc: ∅
        │   │   │   └── block: ∅
        │   │   └── operator_loc: (5,13)-(5,16) = "and"
        │   ├── rparen_loc: (5,20)-(5,21) = ")"
        │   └── keyword_loc: (5,0)-(5,8) = "defined?"
        ├── @ DefinedNode (location: (7,0)-(7,10))
        │   ├── lparen_loc: ∅
        │   ├── value:
        │   │   @ IntegerNode (location: (7,9)-(7,10))
        │   │   └── flags: decimal
        │   ├── rparen_loc: ∅
        │   └── keyword_loc: (7,0)-(7,8) = "defined?"
        └── @ DefinedNode (location: (9,0)-(10,1))
            ├── lparen_loc: (9,8)-(9,9) = "("
            ├── value:
            │   @ StringNode (location: (9,9)-(9,14))
            │   ├── flags: ∅
            │   ├── opening_loc: (9,9)-(9,10) = "\""
            │   ├── content_loc: (9,10)-(9,13) = "foo"
            │   ├── closing_loc: (9,13)-(9,14) = "\""
            │   └── unescaped: "foo"
            ├── rparen_loc: (10,0)-(10,1) = ")"
            └── keyword_loc: (9,0)-(9,8) = "defined?"
