@ ProgramNode (location: (1,0)-(1,23))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,23))
    └── body: (length: 1)
        └── @ LambdaNode (location: (1,0)-(1,23))
            ├── locals: [:b, :c, :d, :e, :f]
            ├── locals_body_index: 5
            ├── operator_loc: (1,0)-(1,2) = "->"
            ├── opening_loc: (1,21)-(1,22) = "{"
            ├── closing_loc: (1,22)-(1,23) = "}"
            ├── parameters:
            │   @ BlockParametersNode (location: (1,2)-(1,21))
            │   ├── parameters:
            │   │   @ ParametersNode (location: (1,3)-(1,20))
            │   │   ├── requireds: (length: 1)
            │   │   │   └── @ RequiredParameterNode (location: (1,3)-(1,4))
            │   │   │       └── name: :b
            │   │   ├── optionals: (length: 1)
            │   │   │   └── @ OptionalParameterNode (location: (1,6)-(1,9))
            │   │   │       ├── name: :c
            │   │   │       ├── name_loc: (1,6)-(1,7) = "c"
            │   │   │       ├── operator_loc: (1,7)-(1,8) = "="
            │   │   │       └── value:
            │   │   │           @ IntegerNode (location: (1,8)-(1,9))
            │   │   │           └── flags: decimal
            │   │   ├── rest:
            │   │   │   @ RestParameterNode (location: (1,11)-(1,13))
            │   │   │   ├── name: :d
            │   │   │   ├── name_loc: (1,12)-(1,13) = "d"
            │   │   │   └── operator_loc: (1,11)-(1,12) = "*"
            │   │   ├── posts: (length: 1)
            │   │   │   └── @ RequiredParameterNode (location: (1,15)-(1,16))
            │   │   │       └── name: :e
            │   │   ├── keywords: (length: 0)
            │   │   ├── keyword_rest: ∅
            │   │   └── block:
            │   │       @ BlockParameterNode (location: (1,18)-(1,20))
            │   │       ├── name: :f
            │   │       ├── name_loc: (1,19)-(1,20) = "f"
            │   │       └── operator_loc: (1,18)-(1,19) = "&"
            │   ├── locals: (length: 0)
            │   ├── opening_loc: (1,2)-(1,3) = "("
            │   └── closing_loc: (1,20)-(1,21) = ")"
            └── body: ∅
