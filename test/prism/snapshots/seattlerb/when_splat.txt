@ ProgramNode (location: (1,0)-(1,25))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,25))
    └── body: (length: 1)
        └── @ CaseNode (location: (1,0)-(1,25))
            ├── predicate:
            │   @ CallNode (location: (1,5)-(1,6))
            │   ├── flags: variable_call
            │   ├── receiver: ∅
            │   ├── call_operator_loc: ∅
            │   ├── name: :a
            │   ├── message_loc: (1,5)-(1,6) = "a"
            │   ├── opening_loc: ∅
            │   ├── arguments: ∅
            │   ├── closing_loc: ∅
            │   └── block: ∅
            ├── conditions: (length: 1)
            │   └── @ WhenNode (location: (1,8)-(1,15))
            │       ├── keyword_loc: (1,8)-(1,12) = "when"
            │       ├── conditions: (length: 1)
            │       │   └── @ SplatNode (location: (1,13)-(1,15))
            │       │       ├── operator_loc: (1,13)-(1,14) = "*"
            │       │       └── expression:
            │       │           @ CallNode (location: (1,14)-(1,15))
            │       │           ├── flags: variable_call
            │       │           ├── receiver: ∅
            │       │           ├── call_operator_loc: ∅
            │       │           ├── name: :b
            │       │           ├── message_loc: (1,14)-(1,15) = "b"
            │       │           ├── opening_loc: ∅
            │       │           ├── arguments: ∅
            │       │           ├── closing_loc: ∅
            │       │           └── block: ∅
            │       └── statements: ∅
            ├── consequent: ∅
            ├── case_keyword_loc: (1,0)-(1,4) = "case"
            └── end_keyword_loc: (1,22)-(1,25) = "end"
