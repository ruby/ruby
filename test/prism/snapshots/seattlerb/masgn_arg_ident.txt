@ ProgramNode (location: (1,0)-(1,10))
├── locals: [:a]
└── statements:
    @ StatementsNode (location: (1,0)-(1,10))
    └── body: (length: 1)
        └── @ MultiWriteNode (location: (1,0)-(1,10))
            ├── lefts: (length: 2)
            │   ├── @ LocalVariableTargetNode (location: (1,0)-(1,1))
            │   │   ├── name: :a
            │   │   └── depth: 0
            │   └── @ CallTargetNode (location: (1,3)-(1,6))
            │       ├── flags: ∅
            │       ├── receiver:
            │       │   @ CallNode (location: (1,3)-(1,4))
            │       │   ├── flags: variable_call
            │       │   ├── receiver: ∅
            │       │   ├── call_operator_loc: ∅
            │       │   ├── name: :b
            │       │   ├── message_loc: (1,3)-(1,4) = "b"
            │       │   ├── opening_loc: ∅
            │       │   ├── arguments: ∅
            │       │   ├── closing_loc: ∅
            │       │   └── block: ∅
            │       ├── call_operator_loc: (1,4)-(1,5) = "."
            │       ├── name: :C=
            │       └── message_loc: (1,5)-(1,6) = "C"
            ├── rest: ∅
            ├── rights: (length: 0)
            ├── lparen_loc: ∅
            ├── rparen_loc: ∅
            ├── operator_loc: (1,7)-(1,8) = "="
            └── value:
                @ CallNode (location: (1,9)-(1,10))
                ├── flags: variable_call
                ├── receiver: ∅
                ├── call_operator_loc: ∅
                ├── name: :d
                ├── message_loc: (1,9)-(1,10) = "d"
                ├── opening_loc: ∅
                ├── arguments: ∅
                ├── closing_loc: ∅
                └── block: ∅
