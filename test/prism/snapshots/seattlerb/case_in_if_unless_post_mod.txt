@ ProgramNode (location: (1,0)-(6,3))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(6,3))
    └── body: (length: 1)
        └── @ CaseMatchNode (location: (1,0)-(6,3))
            ├── predicate:
            │   @ SymbolNode (location: (1,5)-(1,7))
            │   ├── flags: ∅
            │   ├── opening_loc: (1,5)-(1,6) = ":"
            │   ├── value_loc: (1,6)-(1,7) = "a"
            │   ├── closing_loc: ∅
            │   └── unescaped: "a"
            ├── conditions: (length: 2)
            │   ├── @ InNode (location: (2,0)-(3,4))
            │   │   ├── pattern:
            │   │   │   @ IfNode (location: (2,3)-(2,12))
            │   │   │   ├── if_keyword_loc: (2,5)-(2,7) = "if"
            │   │   │   ├── predicate:
            │   │   │   │   @ TrueNode (location: (2,8)-(2,12))
            │   │   │   ├── then_keyword_loc: ∅
            │   │   │   ├── statements:
            │   │   │   │   @ StatementsNode (location: (2,3)-(2,4))
            │   │   │   │   └── body: (length: 1)
            │   │   │   │       └── @ ConstantReadNode (location: (2,3)-(2,4))
            │   │   │   │           └── name: :A
            │   │   │   ├── consequent: ∅
            │   │   │   └── end_keyword_loc: ∅
            │   │   ├── statements:
            │   │   │   @ StatementsNode (location: (3,2)-(3,4))
            │   │   │   └── body: (length: 1)
            │   │   │       └── @ SymbolNode (location: (3,2)-(3,4))
            │   │   │           ├── flags: ∅
            │   │   │           ├── opening_loc: (3,2)-(3,3) = ":"
            │   │   │           ├── value_loc: (3,3)-(3,4) = "C"
            │   │   │           ├── closing_loc: ∅
            │   │   │           └── unescaped: "C"
            │   │   ├── in_loc: (2,0)-(2,2) = "in"
            │   │   └── then_loc: ∅
            │   └── @ InNode (location: (4,0)-(5,4))
            │       ├── pattern:
            │       │   @ UnlessNode (location: (4,3)-(4,17))
            │       │   ├── keyword_loc: (4,5)-(4,11) = "unless"
            │       │   ├── predicate:
            │       │   │   @ FalseNode (location: (4,12)-(4,17))
            │       │   ├── then_keyword_loc: ∅
            │       │   ├── statements:
            │       │   │   @ StatementsNode (location: (4,3)-(4,4))
            │       │   │   └── body: (length: 1)
            │       │   │       └── @ ConstantReadNode (location: (4,3)-(4,4))
            │       │   │           └── name: :D
            │       │   ├── consequent: ∅
            │       │   └── end_keyword_loc: ∅
            │       ├── statements:
            │       │   @ StatementsNode (location: (5,2)-(5,4))
            │       │   └── body: (length: 1)
            │       │       └── @ SymbolNode (location: (5,2)-(5,4))
            │       │           ├── flags: ∅
            │       │           ├── opening_loc: (5,2)-(5,3) = ":"
            │       │           ├── value_loc: (5,3)-(5,4) = "E"
            │       │           ├── closing_loc: ∅
            │       │           └── unescaped: "E"
            │       ├── in_loc: (4,0)-(4,2) = "in"
            │       └── then_loc: ∅
            ├── consequent: ∅
            ├── case_keyword_loc: (1,0)-(1,4) = "case"
            └── end_keyword_loc: (6,0)-(6,3) = "end"
