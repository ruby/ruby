@ ProgramNode (location: (1,0)-(4,28))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(4,28))
    └── body: (length: 1)
        └── @ CallNode (location: (1,0)-(4,28))
            ├── flags: ∅
            ├── receiver: ∅
            ├── call_operator_loc: ∅
            ├── name: :mount
            ├── message_loc: (1,0)-(1,5) = "mount"
            ├── opening_loc: ∅
            ├── arguments:
            │   @ ArgumentsNode (location: (1,6)-(4,28))
            │   ├── flags: ∅
            │   └── arguments: (length: 2)
            │       ├── @ CallNode (location: (1,6)-(4,9))
            │       │   ├── flags: ∅
            │       │   ├── receiver:
            │       │   │   @ ParenthesesNode (location: (1,6)-(4,5))
            │       │   │   ├── body:
            │       │   │   │   @ StatementsNode (location: (1,7)-(4,4))
            │       │   │   │   └── body: (length: 1)
            │       │   │   │       └── @ CallNode (location: (1,7)-(4,4))
            │       │   │   │           ├── flags: ∅
            │       │   │   │           ├── receiver:
            │       │   │   │           │   @ ConstantReadNode (location: (1,7)-(1,12))
            │       │   │   │           │   └── name: :Class
            │       │   │   │           ├── call_operator_loc: (1,12)-(1,13) = "."
            │       │   │   │           ├── name: :new
            │       │   │   │           ├── message_loc: (1,13)-(1,16) = "new"
            │       │   │   │           ├── opening_loc: ∅
            │       │   │   │           ├── arguments: ∅
            │       │   │   │           ├── closing_loc: ∅
            │       │   │   │           └── block:
            │       │   │   │               @ BlockNode (location: (1,17)-(4,4))
            │       │   │   │               ├── locals: []
            │       │   │   │               ├── locals_body_index: 0
            │       │   │   │               ├── parameters: ∅
            │       │   │   │               ├── body:
            │       │   │   │               │   @ StatementsNode (location: (2,0)-(3,3))
            │       │   │   │               │   └── body: (length: 1)
            │       │   │   │               │       └── @ DefNode (location: (2,0)-(3,3))
            │       │   │   │               │           ├── name: :initialize
            │       │   │   │               │           ├── name_loc: (2,4)-(2,14) = "initialize"
            │       │   │   │               │           ├── receiver: ∅
            │       │   │   │               │           ├── parameters: ∅
            │       │   │   │               │           ├── body: ∅
            │       │   │   │               │           ├── locals: []
            │       │   │   │               │           ├── locals_body_index: 0
            │       │   │   │               │           ├── def_keyword_loc: (2,0)-(2,3) = "def"
            │       │   │   │               │           ├── operator_loc: ∅
            │       │   │   │               │           ├── lparen_loc: ∅
            │       │   │   │               │           ├── rparen_loc: ∅
            │       │   │   │               │           ├── equal_loc: ∅
            │       │   │   │               │           └── end_keyword_loc: (3,0)-(3,3) = "end"
            │       │   │   │               ├── opening_loc: (1,17)-(1,19) = "do"
            │       │   │   │               └── closing_loc: (4,1)-(4,4) = "end"
            │       │   │   ├── opening_loc: (1,6)-(1,7) = "("
            │       │   │   └── closing_loc: (4,4)-(4,5) = ")"
            │       │   ├── call_operator_loc: (4,5)-(4,6) = "."
            │       │   ├── name: :new
            │       │   ├── message_loc: (4,6)-(4,9) = "new"
            │       │   ├── opening_loc: ∅
            │       │   ├── arguments: ∅
            │       │   ├── closing_loc: ∅
            │       │   └── block: ∅
            │       └── @ KeywordHashNode (location: (4,11)-(4,28))
            │           └── elements: (length: 1)
            │               └── @ AssocNode (location: (4,11)-(4,28))
            │                   ├── key:
            │                   │   @ SymbolNode (location: (4,11)-(4,14))
            │                   │   ├── flags: ∅
            │                   │   ├── opening_loc: (4,11)-(4,12) = ":"
            │                   │   ├── value_loc: (4,12)-(4,14) = "at"
            │                   │   ├── closing_loc: ∅
            │                   │   └── unescaped: "at"
            │                   ├── value:
            │                   │   @ StringNode (location: (4,18)-(4,28))
            │                   │   ├── flags: ∅
            │                   │   ├── opening_loc: (4,18)-(4,19) = "'"
            │                   │   ├── content_loc: (4,19)-(4,27) = "endpoint"
            │                   │   ├── closing_loc: (4,27)-(4,28) = "'"
            │                   │   └── unescaped: "endpoint"
            │                   └── operator_loc: (4,15)-(4,17) = "=>"
            ├── closing_loc: ∅
            └── block: ∅
