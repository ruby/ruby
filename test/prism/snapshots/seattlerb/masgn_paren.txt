@ ProgramNode (location: (1,0)-(1,12))
├── flags: ∅
├── locals: [:a, :b]
└── statements:
    @ StatementsNode (location: (1,0)-(1,12))
    ├── flags: ∅
    └── body: (length: 1)
        └── @ MultiWriteNode (location: (1,0)-(1,12))
            ├── flags: newline
            ├── lefts: (length: 2)
            │   ├── @ LocalVariableTargetNode (location: (1,1)-(1,2))
            │   │   ├── flags: ∅
            │   │   ├── name: :a
            │   │   └── depth: 0
            │   └── @ LocalVariableTargetNode (location: (1,4)-(1,5))
            │       ├── flags: ∅
            │       ├── name: :b
            │       └── depth: 0
            ├── rest: ∅
            ├── rights: (length: 0)
            ├── lparen_loc: (1,0)-(1,1) = "("
            ├── rparen_loc: (1,5)-(1,6) = ")"
            ├── operator_loc: (1,7)-(1,8) = "="
            └── value:
                @ CallNode (location: (1,9)-(1,12))
                ├── flags: ∅
                ├── receiver:
                │   @ CallNode (location: (1,9)-(1,10))
                │   ├── flags: variable_call, ignore_visibility
                │   ├── receiver: ∅
                │   ├── call_operator_loc: ∅
                │   ├── name: :c
                │   ├── message_loc: (1,9)-(1,10) = "c"
                │   ├── opening_loc: ∅
                │   ├── arguments: ∅
                │   ├── closing_loc: ∅
                │   └── block: ∅
                ├── call_operator_loc: (1,10)-(1,11) = "."
                ├── name: :d
                ├── message_loc: (1,11)-(1,12) = "d"
                ├── opening_loc: ∅
                ├── arguments: ∅
                ├── closing_loc: ∅
                └── block: ∅
