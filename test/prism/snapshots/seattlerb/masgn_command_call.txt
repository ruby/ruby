@ ProgramNode (location: (1,0)-(1,10))
├── flags: ∅
├── locals: [:a]
└── statements:
    @ StatementsNode (location: (1,0)-(1,10))
    ├── flags: ∅
    └── body: (length: 1)
        └── @ MultiWriteNode (location: (1,0)-(1,10))
            ├── flags: newline
            ├── lefts: (length: 1)
            │   └── @ LocalVariableTargetNode (location: (1,0)-(1,1))
            │       ├── flags: ∅
            │       ├── name: :a
            │       └── depth: 0
            ├── rest:
            │   @ ImplicitRestNode (location: (1,1)-(1,2))
            │   └── flags: ∅
            ├── rights: (length: 0)
            ├── lparen_loc: ∅
            ├── rparen_loc: ∅
            ├── operator_loc: (1,3)-(1,4) = "="
            └── value:
                @ CallNode (location: (1,5)-(1,10))
                ├── flags: ∅
                ├── receiver:
                │   @ CallNode (location: (1,5)-(1,6))
                │   ├── flags: variable_call, ignore_visibility
                │   ├── receiver: ∅
                │   ├── call_operator_loc: ∅
                │   ├── name: :b
                │   ├── message_loc: (1,5)-(1,6) = "b"
                │   ├── opening_loc: ∅
                │   ├── arguments: ∅
                │   ├── closing_loc: ∅
                │   └── block: ∅
                ├── call_operator_loc: (1,6)-(1,7) = "."
                ├── name: :c
                ├── message_loc: (1,7)-(1,8) = "c"
                ├── opening_loc: ∅
                ├── arguments:
                │   @ ArgumentsNode (location: (1,9)-(1,10))
                │   ├── flags: ∅
                │   └── arguments: (length: 1)
                │       └── @ IntegerNode (location: (1,9)-(1,10))
                │           ├── flags: static_literal, decimal
                │           └── value: 1
                ├── closing_loc: ∅
                └── block: ∅
