@ ProgramNode (location: (1,0)-(1,10))
├── locals: [:a]
└── statements:
    @ StatementsNode (location: (1,0)-(1,10))
    └── body: (length: 1)
        └── @ MultiWriteNode (location: (1,0)-(1,10))
            ├── targets: (length: 2)
            │   ├── @ LocalVariableTargetNode (location: (1,0)-(1,1))
            │   │   ├── name: :a
            │   │   └── depth: 0
            │   └── @ SplatNode (location: (1,1)-(1,2))
            │       ├── operator_loc: (1,1)-(1,2) = ","
            │       └── expression: ∅
            ├── lparen_loc: ∅
            ├── rparen_loc: ∅
            ├── operator_loc: (1,3)-(1,4) = "="
            └── value:
                @ CallNode (location: (1,5)-(1,10))
                ├── receiver:
                │   @ CallNode (location: (1,5)-(1,6))
                │   ├── receiver: ∅
                │   ├── call_operator_loc: ∅
                │   ├── message_loc: (1,5)-(1,6) = "b"
                │   ├── opening_loc: ∅
                │   ├── arguments: ∅
                │   ├── closing_loc: ∅
                │   ├── block: ∅
                │   ├── flags: variable_call
                │   └── name: :b
                ├── call_operator_loc: (1,6)-(1,7) = "."
                ├── message_loc: (1,7)-(1,8) = "c"
                ├── opening_loc: ∅
                ├── arguments:
                │   @ ArgumentsNode (location: (1,9)-(1,10))
                │   └── arguments: (length: 1)
                │       └── @ IntegerNode (location: (1,9)-(1,10))
                │           └── flags: decimal
                ├── closing_loc: ∅
                ├── block: ∅
                ├── flags: ∅
                └── name: :c
