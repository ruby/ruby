@ ProgramNode (location: (1,0)-(4,3))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(4,3))
    └── body: (length: 1)
        └── @ CallNode (location: (1,0)-(4,3))
            ├── receiver: ∅
            ├── call_operator_loc: ∅
            ├── name: :blah
            ├── message_loc: (1,0)-(1,4) = "blah"
            ├── opening_loc: ∅
            ├── arguments: ∅
            ├── closing_loc: ∅
            ├── block:
            │   @ BlockNode (location: (1,5)-(4,3))
            │   ├── locals: []
            │   ├── parameters: ∅
            │   ├── body:
            │   │   @ BeginNode (location: (2,0)-(4,3))
            │   │   ├── begin_keyword_loc: ∅
            │   │   ├── statements: ∅
            │   │   ├── rescue_clause:
            │   │   │   @ RescueNode (location: (2,0)-(3,7))
            │   │   │   ├── keyword_loc: (2,0)-(2,6) = "rescue"
            │   │   │   ├── exceptions: (length: 0)
            │   │   │   ├── operator_loc: ∅
            │   │   │   ├── reference: ∅
            │   │   │   ├── statements:
            │   │   │   │   @ StatementsNode (location: (3,2)-(3,7))
            │   │   │   │   └── body: (length: 1)
            │   │   │   │       └── @ CallNode (location: (3,2)-(3,7))
            │   │   │   │           ├── receiver: ∅
            │   │   │   │           ├── call_operator_loc: ∅
            │   │   │   │           ├── name: :stuff
            │   │   │   │           ├── message_loc: (3,2)-(3,7) = "stuff"
            │   │   │   │           ├── opening_loc: ∅
            │   │   │   │           ├── arguments: ∅
            │   │   │   │           ├── closing_loc: ∅
            │   │   │   │           ├── block: ∅
            │   │   │   │           └── flags: variable_call
            │   │   │   └── consequent: ∅
            │   │   ├── else_clause: ∅
            │   │   ├── ensure_clause: ∅
            │   │   └── end_keyword_loc: (4,0)-(4,3) = "end"
            │   ├── opening_loc: (1,5)-(1,7) = "do"
            │   └── closing_loc: (4,0)-(4,3) = "end"
            └── flags: ∅
