@ ProgramNode (location: (1,0)-(1,23))
├── locals: [:a, :b, :c, :x, :y, :z]
└── statements:
    @ StatementsNode (location: (1,0)-(1,23))
    └── body: (length: 1)
        └── @ MultiWriteNode (location: (1,0)-(1,23))
            ├── lefts: (length: 3)
            │   ├── @ LocalVariableTargetNode (location: (1,0)-(1,1))
            │   │   ├── name: :a
            │   │   └── depth: 0
            │   ├── @ LocalVariableTargetNode (location: (1,3)-(1,4))
            │   │   ├── name: :b
            │   │   └── depth: 0
            │   └── @ LocalVariableTargetNode (location: (1,6)-(1,7))
            │       ├── name: :c
            │       └── depth: 0
            ├── rest:
            │   @ SplatNode (location: (1,9)-(1,10))
            │   ├── operator_loc: (1,9)-(1,10) = "*"
            │   └── expression: ∅
            ├── rights: (length: 3)
            │   ├── @ LocalVariableTargetNode (location: (1,12)-(1,13))
            │   │   ├── name: :x
            │   │   └── depth: 0
            │   ├── @ LocalVariableTargetNode (location: (1,15)-(1,16))
            │   │   ├── name: :y
            │   │   └── depth: 0
            │   └── @ LocalVariableTargetNode (location: (1,18)-(1,19))
            │       ├── name: :z
            │       └── depth: 0
            ├── lparen_loc: ∅
            ├── rparen_loc: ∅
            ├── operator_loc: (1,20)-(1,21) = "="
            └── value:
                @ CallNode (location: (1,22)-(1,23))
                ├── flags: variable_call
                ├── receiver: ∅
                ├── call_operator_loc: ∅
                ├── name: :f
                ├── message_loc: (1,22)-(1,23) = "f"
                ├── opening_loc: ∅
                ├── arguments: ∅
                ├── closing_loc: ∅
                └── block: ∅
