@ ProgramNode (location: (1,0)-(4,3))
├── locals: [:c]
└── statements:
    @ StatementsNode (location: (1,0)-(4,3))
    └── body: (length: 1)
        └── @ CaseMatchNode (location: (1,0)-(4,3))
            ├── predicate:
            │   @ SymbolNode (location: (1,5)-(1,7))
            │   ├── flags: ∅
            │   ├── opening_loc: (1,5)-(1,6) = ":"
            │   ├── value_loc: (1,6)-(1,7) = "a"
            │   ├── closing_loc: ∅
            │   └── unescaped: "a"
            ├── conditions: (length: 1)
            │   └── @ InNode (location: (2,0)-(3,4))
            │       ├── pattern:
            │       │   @ ArrayPatternNode (location: (2,3)-(2,11))
            │       │   ├── constant: ∅
            │       │   ├── requireds: (length: 1)
            │       │   │   └── @ SymbolNode (location: (2,4)-(2,6))
            │       │   │       ├── flags: ∅
            │       │   │       ├── opening_loc: (2,4)-(2,5) = ":"
            │       │   │       ├── value_loc: (2,5)-(2,6) = "b"
            │       │   │       ├── closing_loc: ∅
            │       │   │       └── unescaped: "b"
            │       │   ├── rest:
            │       │   │   @ SplatNode (location: (2,8)-(2,10))
            │       │   │   ├── operator_loc: (2,8)-(2,9) = "*"
            │       │   │   └── expression:
            │       │   │       @ LocalVariableTargetNode (location: (2,9)-(2,10))
            │       │   │       ├── name: :c
            │       │   │       └── depth: 0
            │       │   ├── posts: (length: 0)
            │       │   ├── opening_loc: (2,3)-(2,4) = "["
            │       │   └── closing_loc: (2,10)-(2,11) = "]"
            │       ├── statements:
            │       │   @ StatementsNode (location: (3,2)-(3,4))
            │       │   └── body: (length: 1)
            │       │       └── @ SymbolNode (location: (3,2)-(3,4))
            │       │           ├── flags: ∅
            │       │           ├── opening_loc: (3,2)-(3,3) = ":"
            │       │           ├── value_loc: (3,3)-(3,4) = "d"
            │       │           ├── closing_loc: ∅
            │       │           └── unescaped: "d"
            │       ├── in_loc: (2,0)-(2,2) = "in"
            │       └── then_loc: ∅
            ├── consequent: ∅
            ├── case_keyword_loc: (1,0)-(1,4) = "case"
            └── end_keyword_loc: (4,0)-(4,3) = "end"
