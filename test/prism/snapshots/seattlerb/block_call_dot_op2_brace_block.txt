@ ProgramNode (location: (1,0)-(1,31))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,31))
    └── body: (length: 1)
        └── @ CallNode (location: (1,0)-(1,31))
            ├── receiver:
            │   @ CallNode (location: (1,0)-(1,16))
            │   ├── receiver:
            │   │   @ CallNode (location: (1,0)-(1,1))
            │   │   ├── receiver: ∅
            │   │   ├── call_operator_loc: ∅
            │   │   ├── message_loc: (1,0)-(1,1) = "a"
            │   │   ├── opening_loc: ∅
            │   │   ├── arguments: ∅
            │   │   ├── closing_loc: ∅
            │   │   ├── block: ∅
            │   │   ├── flags: variable_call
            │   │   └── name: :a
            │   ├── call_operator_loc: (1,1)-(1,2) = "."
            │   ├── message_loc: (1,2)-(1,3) = "b"
            │   ├── opening_loc: ∅
            │   ├── arguments:
            │   │   @ ArgumentsNode (location: (1,4)-(1,7))
            │   │   ├── arguments: (length: 1)
            │   │   │   └── @ CallNode (location: (1,4)-(1,7))
            │   │   │       ├── receiver: ∅
            │   │   │       ├── call_operator_loc: ∅
            │   │   │       ├── message_loc: (1,4)-(1,5) = "c"
            │   │   │       ├── opening_loc: (1,5)-(1,6) = "("
            │   │   │       ├── arguments: ∅
            │   │   │       ├── closing_loc: (1,6)-(1,7) = ")"
            │   │   │       ├── block: ∅
            │   │   │       ├── flags: ∅
            │   │   │       └── name: :c
            │   │   └── flags: ∅
            │   ├── closing_loc: ∅
            │   ├── block:
            │   │   @ BlockNode (location: (1,8)-(1,16))
            │   │   ├── locals: []
            │   │   ├── parameters: ∅
            │   │   ├── body:
            │   │   │   @ StatementsNode (location: (1,11)-(1,12))
            │   │   │   └── body: (length: 1)
            │   │   │       └── @ CallNode (location: (1,11)-(1,12))
            │   │   │           ├── receiver: ∅
            │   │   │           ├── call_operator_loc: ∅
            │   │   │           ├── message_loc: (1,11)-(1,12) = "d"
            │   │   │           ├── opening_loc: ∅
            │   │   │           ├── arguments: ∅
            │   │   │           ├── closing_loc: ∅
            │   │   │           ├── block: ∅
            │   │   │           ├── flags: variable_call
            │   │   │           └── name: :d
            │   │   ├── opening_loc: (1,8)-(1,10) = "do"
            │   │   └── closing_loc: (1,13)-(1,16) = "end"
            │   ├── flags: ∅
            │   └── name: :b
            ├── call_operator_loc: (1,16)-(1,17) = "."
            ├── message_loc: (1,17)-(1,18) = "e"
            ├── opening_loc: ∅
            ├── arguments: ∅
            ├── closing_loc: ∅
            ├── block:
            │   @ BlockNode (location: (1,19)-(1,31))
            │   ├── locals: [:f]
            │   ├── parameters:
            │   │   @ BlockParametersNode (location: (1,22)-(1,25))
            │   │   ├── parameters:
            │   │   │   @ ParametersNode (location: (1,23)-(1,24))
            │   │   │   ├── requireds: (length: 1)
            │   │   │   │   └── @ RequiredParameterNode (location: (1,23)-(1,24))
            │   │   │   │       └── name: :f
            │   │   │   ├── optionals: (length: 0)
            │   │   │   ├── rest: ∅
            │   │   │   ├── posts: (length: 0)
            │   │   │   ├── keywords: (length: 0)
            │   │   │   ├── keyword_rest: ∅
            │   │   │   └── block: ∅
            │   │   ├── locals: (length: 0)
            │   │   ├── opening_loc: (1,22)-(1,23) = "|"
            │   │   └── closing_loc: (1,24)-(1,25) = "|"
            │   ├── body:
            │   │   @ StatementsNode (location: (1,26)-(1,27))
            │   │   └── body: (length: 1)
            │   │       └── @ CallNode (location: (1,26)-(1,27))
            │   │           ├── receiver: ∅
            │   │           ├── call_operator_loc: ∅
            │   │           ├── message_loc: (1,26)-(1,27) = "g"
            │   │           ├── opening_loc: ∅
            │   │           ├── arguments: ∅
            │   │           ├── closing_loc: ∅
            │   │           ├── block: ∅
            │   │           ├── flags: variable_call
            │   │           └── name: :g
            │   ├── opening_loc: (1,19)-(1,21) = "do"
            │   └── closing_loc: (1,28)-(1,31) = "end"
            ├── flags: ∅
            └── name: :e
