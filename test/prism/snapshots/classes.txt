@ ProgramNode (location: (1,0)-(35,3))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(35,3))
    └── body: (length: 14)
        ├── @ ClassNode (location: (1,0)-(1,17))
        │   ├── locals: [:a]
        │   ├── class_keyword_loc: (1,0)-(1,5) = "class"
        │   ├── constant_path:
        │   │   @ ConstantReadNode (location: (1,6)-(1,7))
        │   │   └── name: :A
        │   ├── inheritance_operator_loc: ∅
        │   ├── superclass: ∅
        │   ├── body:
        │   │   @ StatementsNode (location: (1,8)-(1,13))
        │   │   └── body: (length: 1)
        │   │       └── @ LocalVariableWriteNode (location: (1,8)-(1,13))
        │   │           ├── name: :a
        │   │           ├── depth: 0
        │   │           ├── name_loc: (1,8)-(1,9) = "a"
        │   │           ├── value:
        │   │           │   @ IntegerNode (location: (1,12)-(1,13))
        │   │           │   └── flags: decimal
        │   │           └── operator_loc: (1,10)-(1,11) = "="
        │   ├── end_keyword_loc: (1,14)-(1,17) = "end"
        │   └── name: :A
        ├── @ ClassNode (location: (3,0)-(3,20))
        │   ├── locals: []
        │   ├── class_keyword_loc: (3,0)-(3,5) = "class"
        │   ├── constant_path:
        │   │   @ ConstantReadNode (location: (3,6)-(3,7))
        │   │   └── name: :A
        │   ├── inheritance_operator_loc: ∅
        │   ├── superclass: ∅
        │   ├── body:
        │   │   @ BeginNode (location: (3,9)-(3,20))
        │   │   ├── begin_keyword_loc: ∅
        │   │   ├── statements: ∅
        │   │   ├── rescue_clause: ∅
        │   │   ├── else_clause: ∅
        │   │   ├── ensure_clause:
        │   │   │   @ EnsureNode (location: (3,9)-(3,20))
        │   │   │   ├── ensure_keyword_loc: (3,9)-(3,15) = "ensure"
        │   │   │   ├── statements: ∅
        │   │   │   └── end_keyword_loc: (3,17)-(3,20) = "end"
        │   │   └── end_keyword_loc: (3,17)-(3,20) = "end"
        │   ├── end_keyword_loc: (3,17)-(3,20) = "end"
        │   └── name: :A
        ├── @ ClassNode (location: (5,0)-(5,34))
        │   ├── locals: []
        │   ├── class_keyword_loc: (5,0)-(5,5) = "class"
        │   ├── constant_path:
        │   │   @ ConstantReadNode (location: (5,6)-(5,7))
        │   │   └── name: :A
        │   ├── inheritance_operator_loc: ∅
        │   ├── superclass: ∅
        │   ├── body:
        │   │   @ BeginNode (location: (5,9)-(5,34))
        │   │   ├── begin_keyword_loc: ∅
        │   │   ├── statements: ∅
        │   │   ├── rescue_clause:
        │   │   │   @ RescueNode (location: (5,9)-(5,15))
        │   │   │   ├── keyword_loc: (5,9)-(5,15) = "rescue"
        │   │   │   ├── exceptions: (length: 0)
        │   │   │   ├── operator_loc: ∅
        │   │   │   ├── reference: ∅
        │   │   │   ├── statements: ∅
        │   │   │   └── consequent: ∅
        │   │   ├── else_clause:
        │   │   │   @ ElseNode (location: (5,17)-(5,29))
        │   │   │   ├── else_keyword_loc: (5,17)-(5,21) = "else"
        │   │   │   ├── statements: ∅
        │   │   │   └── end_keyword_loc: (5,23)-(5,29) = "ensure"
        │   │   ├── ensure_clause:
        │   │   │   @ EnsureNode (location: (5,23)-(5,34))
        │   │   │   ├── ensure_keyword_loc: (5,23)-(5,29) = "ensure"
        │   │   │   ├── statements: ∅
        │   │   │   └── end_keyword_loc: (5,31)-(5,34) = "end"
        │   │   └── end_keyword_loc: (5,31)-(5,34) = "end"
        │   ├── end_keyword_loc: (5,31)-(5,34) = "end"
        │   └── name: :A
        ├── @ ClassNode (location: (7,0)-(9,3))
        │   ├── locals: [:a]
        │   ├── class_keyword_loc: (7,0)-(7,5) = "class"
        │   ├── constant_path:
        │   │   @ ConstantReadNode (location: (7,6)-(7,7))
        │   │   └── name: :A
        │   ├── inheritance_operator_loc: (7,8)-(7,9) = "<"
        │   ├── superclass:
        │   │   @ ConstantReadNode (location: (7,10)-(7,11))
        │   │   └── name: :B
        │   ├── body:
        │   │   @ StatementsNode (location: (8,0)-(8,5))
        │   │   └── body: (length: 1)
        │   │       └── @ LocalVariableWriteNode (location: (8,0)-(8,5))
        │   │           ├── name: :a
        │   │           ├── depth: 0
        │   │           ├── name_loc: (8,0)-(8,1) = "a"
        │   │           ├── value:
        │   │           │   @ IntegerNode (location: (8,4)-(8,5))
        │   │           │   └── flags: decimal
        │   │           └── operator_loc: (8,2)-(8,3) = "="
        │   ├── end_keyword_loc: (9,0)-(9,3) = "end"
        │   └── name: :A
        ├── @ SingletonClassNode (location: (11,0)-(12,3))
        │   ├── locals: []
        │   ├── class_keyword_loc: (11,0)-(11,5) = "class"
        │   ├── operator_loc: (11,6)-(11,8) = "<<"
        │   ├── expression:
        │   │   @ CallNode (location: (11,9)-(11,16))
        │   │   ├── flags: ∅
        │   │   ├── receiver:
        │   │   │   @ CallNode (location: (11,13)-(11,16))
        │   │   │   ├── flags: variable_call
        │   │   │   ├── receiver: ∅
        │   │   │   ├── call_operator_loc: ∅
        │   │   │   ├── name: :foo
        │   │   │   ├── message_loc: (11,13)-(11,16) = "foo"
        │   │   │   ├── opening_loc: ∅
        │   │   │   ├── arguments: ∅
        │   │   │   ├── closing_loc: ∅
        │   │   │   └── block: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :!
        │   │   ├── message_loc: (11,9)-(11,12) = "not"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   ├── body: ∅
        │   └── end_keyword_loc: (12,0)-(12,3) = "end"
        ├── @ ClassNode (location: (14,0)-(14,40))
        │   ├── locals: []
        │   ├── class_keyword_loc: (14,0)-(14,5) = "class"
        │   ├── constant_path:
        │   │   @ ConstantReadNode (location: (14,6)-(14,7))
        │   │   └── name: :A
        │   ├── inheritance_operator_loc: ∅
        │   ├── superclass: ∅
        │   ├── body:
        │   │   @ StatementsNode (location: (14,9)-(14,35))
        │   │   └── body: (length: 1)
        │   │       └── @ SingletonClassNode (location: (14,9)-(14,35))
        │   │           ├── locals: []
        │   │           ├── class_keyword_loc: (14,9)-(14,14) = "class"
        │   │           ├── operator_loc: (14,15)-(14,17) = "<<"
        │   │           ├── expression:
        │   │           │   @ SelfNode (location: (14,18)-(14,22))
        │   │           ├── body:
        │   │           │   @ BeginNode (location: (14,24)-(14,35))
        │   │           │   ├── begin_keyword_loc: ∅
        │   │           │   ├── statements: ∅
        │   │           │   ├── rescue_clause: ∅
        │   │           │   ├── else_clause: ∅
        │   │           │   ├── ensure_clause:
        │   │           │   │   @ EnsureNode (location: (14,24)-(14,35))
        │   │           │   │   ├── ensure_keyword_loc: (14,24)-(14,30) = "ensure"
        │   │           │   │   ├── statements: ∅
        │   │           │   │   └── end_keyword_loc: (14,32)-(14,35) = "end"
        │   │           │   └── end_keyword_loc: (14,32)-(14,35) = "end"
        │   │           └── end_keyword_loc: (14,32)-(14,35) = "end"
        │   ├── end_keyword_loc: (14,37)-(14,40) = "end"
        │   └── name: :A
        ├── @ ClassNode (location: (16,0)-(16,54))
        │   ├── locals: []
        │   ├── class_keyword_loc: (16,0)-(16,5) = "class"
        │   ├── constant_path:
        │   │   @ ConstantReadNode (location: (16,6)-(16,7))
        │   │   └── name: :A
        │   ├── inheritance_operator_loc: ∅
        │   ├── superclass: ∅
        │   ├── body:
        │   │   @ StatementsNode (location: (16,9)-(16,49))
        │   │   └── body: (length: 1)
        │   │       └── @ SingletonClassNode (location: (16,9)-(16,49))
        │   │           ├── locals: []
        │   │           ├── class_keyword_loc: (16,9)-(16,14) = "class"
        │   │           ├── operator_loc: (16,15)-(16,17) = "<<"
        │   │           ├── expression:
        │   │           │   @ SelfNode (location: (16,18)-(16,22))
        │   │           ├── body:
        │   │           │   @ BeginNode (location: (16,24)-(16,49))
        │   │           │   ├── begin_keyword_loc: ∅
        │   │           │   ├── statements: ∅
        │   │           │   ├── rescue_clause:
        │   │           │   │   @ RescueNode (location: (16,24)-(16,30))
        │   │           │   │   ├── keyword_loc: (16,24)-(16,30) = "rescue"
        │   │           │   │   ├── exceptions: (length: 0)
        │   │           │   │   ├── operator_loc: ∅
        │   │           │   │   ├── reference: ∅
        │   │           │   │   ├── statements: ∅
        │   │           │   │   └── consequent: ∅
        │   │           │   ├── else_clause:
        │   │           │   │   @ ElseNode (location: (16,32)-(16,44))
        │   │           │   │   ├── else_keyword_loc: (16,32)-(16,36) = "else"
        │   │           │   │   ├── statements: ∅
        │   │           │   │   └── end_keyword_loc: (16,38)-(16,44) = "ensure"
        │   │           │   ├── ensure_clause:
        │   │           │   │   @ EnsureNode (location: (16,38)-(16,49))
        │   │           │   │   ├── ensure_keyword_loc: (16,38)-(16,44) = "ensure"
        │   │           │   │   ├── statements: ∅
        │   │           │   │   └── end_keyword_loc: (16,46)-(16,49) = "end"
        │   │           │   └── end_keyword_loc: (16,46)-(16,49) = "end"
        │   │           └── end_keyword_loc: (16,46)-(16,49) = "end"
        │   ├── end_keyword_loc: (16,51)-(16,54) = "end"
        │   └── name: :A
        ├── @ SingletonClassNode (location: (18,0)-(19,3))
        │   ├── locals: []
        │   ├── class_keyword_loc: (18,0)-(18,5) = "class"
        │   ├── operator_loc: (18,6)-(18,8) = "<<"
        │   ├── expression:
        │   │   @ CallNode (location: (18,9)-(18,16))
        │   │   ├── flags: ∅
        │   │   ├── receiver:
        │   │   │   @ CallNode (location: (18,9)-(18,12))
        │   │   │   ├── flags: variable_call
        │   │   │   ├── receiver: ∅
        │   │   │   ├── call_operator_loc: ∅
        │   │   │   ├── name: :foo
        │   │   │   ├── message_loc: (18,9)-(18,12) = "foo"
        │   │   │   ├── opening_loc: ∅
        │   │   │   ├── arguments: ∅
        │   │   │   ├── closing_loc: ∅
        │   │   │   └── block: ∅
        │   │   ├── call_operator_loc: (18,12)-(18,13) = "."
        │   │   ├── name: :bar
        │   │   ├── message_loc: (18,13)-(18,16) = "bar"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   ├── body: ∅
        │   └── end_keyword_loc: (19,0)-(19,3) = "end"
        ├── @ SingletonClassNode (location: (21,0)-(21,20))
        │   ├── locals: []
        │   ├── class_keyword_loc: (21,0)-(21,5) = "class"
        │   ├── operator_loc: (21,6)-(21,8) = "<<"
        │   ├── expression:
        │   │   @ CallNode (location: (21,9)-(21,16))
        │   │   ├── flags: ∅
        │   │   ├── receiver:
        │   │   │   @ CallNode (location: (21,9)-(21,12))
        │   │   │   ├── flags: variable_call
        │   │   │   ├── receiver: ∅
        │   │   │   ├── call_operator_loc: ∅
        │   │   │   ├── name: :foo
        │   │   │   ├── message_loc: (21,9)-(21,12) = "foo"
        │   │   │   ├── opening_loc: ∅
        │   │   │   ├── arguments: ∅
        │   │   │   ├── closing_loc: ∅
        │   │   │   └── block: ∅
        │   │   ├── call_operator_loc: (21,12)-(21,13) = "."
        │   │   ├── name: :bar
        │   │   ├── message_loc: (21,13)-(21,16) = "bar"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   ├── body: ∅
        │   └── end_keyword_loc: (21,17)-(21,20) = "end"
        ├── @ SingletonClassNode (location: (23,0)-(24,3))
        │   ├── locals: []
        │   ├── class_keyword_loc: (23,0)-(23,5) = "class"
        │   ├── operator_loc: (23,6)-(23,8) = "<<"
        │   ├── expression:
        │   │   @ SelfNode (location: (23,9)-(23,13))
        │   ├── body: ∅
        │   └── end_keyword_loc: (24,0)-(24,3) = "end"
        ├── @ SingletonClassNode (location: (26,0)-(26,17))
        │   ├── locals: []
        │   ├── class_keyword_loc: (26,0)-(26,5) = "class"
        │   ├── operator_loc: (26,6)-(26,8) = "<<"
        │   ├── expression:
        │   │   @ SelfNode (location: (26,9)-(26,13))
        │   ├── body: ∅
        │   └── end_keyword_loc: (26,14)-(26,17) = "end"
        ├── @ SingletonClassNode (location: (28,0)-(30,3))
        │   ├── locals: []
        │   ├── class_keyword_loc: (28,0)-(28,5) = "class"
        │   ├── operator_loc: (28,6)-(28,8) = "<<"
        │   ├── expression:
        │   │   @ SelfNode (location: (28,9)-(28,13))
        │   ├── body:
        │   │   @ StatementsNode (location: (29,0)-(29,5))
        │   │   └── body: (length: 1)
        │   │       └── @ CallNode (location: (29,0)-(29,5))
        │   │           ├── flags: ∅
        │   │           ├── receiver:
        │   │           │   @ IntegerNode (location: (29,0)-(29,1))
        │   │           │   └── flags: decimal
        │   │           ├── call_operator_loc: ∅
        │   │           ├── name: :+
        │   │           ├── message_loc: (29,2)-(29,3) = "+"
        │   │           ├── opening_loc: ∅
        │   │           ├── arguments:
        │   │           │   @ ArgumentsNode (location: (29,4)-(29,5))
        │   │           │   ├── flags: ∅
        │   │           │   └── arguments: (length: 1)
        │   │           │       └── @ IntegerNode (location: (29,4)-(29,5))
        │   │           │           └── flags: decimal
        │   │           ├── closing_loc: ∅
        │   │           └── block: ∅
        │   └── end_keyword_loc: (30,0)-(30,3) = "end"
        ├── @ SingletonClassNode (location: (32,0)-(32,23))
        │   ├── locals: []
        │   ├── class_keyword_loc: (32,0)-(32,5) = "class"
        │   ├── operator_loc: (32,6)-(32,8) = "<<"
        │   ├── expression:
        │   │   @ SelfNode (location: (32,9)-(32,13))
        │   ├── body:
        │   │   @ StatementsNode (location: (32,14)-(32,19))
        │   │   └── body: (length: 1)
        │   │       └── @ CallNode (location: (32,14)-(32,19))
        │   │           ├── flags: ∅
        │   │           ├── receiver:
        │   │           │   @ IntegerNode (location: (32,14)-(32,15))
        │   │           │   └── flags: decimal
        │   │           ├── call_operator_loc: ∅
        │   │           ├── name: :+
        │   │           ├── message_loc: (32,16)-(32,17) = "+"
        │   │           ├── opening_loc: ∅
        │   │           ├── arguments:
        │   │           │   @ ArgumentsNode (location: (32,18)-(32,19))
        │   │           │   ├── flags: ∅
        │   │           │   └── arguments: (length: 1)
        │   │           │       └── @ IntegerNode (location: (32,18)-(32,19))
        │   │           │           └── flags: decimal
        │   │           ├── closing_loc: ∅
        │   │           └── block: ∅
        │   └── end_keyword_loc: (32,20)-(32,23) = "end"
        └── @ ClassNode (location: (34,0)-(35,3))
            ├── locals: []
            ├── class_keyword_loc: (34,0)-(34,5) = "class"
            ├── constant_path:
            │   @ ConstantReadNode (location: (34,6)-(34,7))
            │   └── name: :A
            ├── inheritance_operator_loc: (34,8)-(34,9) = "<"
            ├── superclass:
            │   @ CallNode (location: (34,10)-(34,14))
            │   ├── flags: ∅
            │   ├── receiver:
            │   │   @ ConstantReadNode (location: (34,10)-(34,11))
            │   │   └── name: :B
            │   ├── call_operator_loc: ∅
            │   ├── name: :[]
            │   ├── message_loc: (34,11)-(34,14) = "[1]"
            │   ├── opening_loc: (34,11)-(34,12) = "["
            │   ├── arguments:
            │   │   @ ArgumentsNode (location: (34,12)-(34,13))
            │   │   ├── flags: ∅
            │   │   └── arguments: (length: 1)
            │   │       └── @ IntegerNode (location: (34,12)-(34,13))
            │   │           └── flags: decimal
            │   ├── closing_loc: (34,13)-(34,14) = "]"
            │   └── block: ∅
            ├── body: ∅
            ├── end_keyword_loc: (35,0)-(35,3) = "end"
            └── name: :A
