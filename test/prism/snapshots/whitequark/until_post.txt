@ ProgramNode (location: (1,0)-(1,24))
├── flags: ∅
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,24))
    ├── flags: ∅
    └── body: (length: 1)
        └── @ UntilNode (location: (1,0)-(1,24))
            ├── flags: newline, begin_modifier
            ├── keyword_loc: (1,15)-(1,20) = "until"
            ├── closing_loc: ∅
            ├── predicate:
            │   @ CallNode (location: (1,21)-(1,24))
            │   ├── flags: variable_call, ignore_visibility
            │   ├── receiver: ∅
            │   ├── call_operator_loc: ∅
            │   ├── name: :foo
            │   ├── message_loc: (1,21)-(1,24) = "foo"
            │   ├── opening_loc: ∅
            │   ├── arguments: ∅
            │   ├── closing_loc: ∅
            │   └── block: ∅
            └── statements:
                @ StatementsNode (location: (1,0)-(1,14))
                ├── flags: ∅
                └── body: (length: 1)
                    └── @ BeginNode (location: (1,0)-(1,14))
                        ├── flags: newline
                        ├── begin_keyword_loc: (1,0)-(1,5) = "begin"
                        ├── statements:
                        │   @ StatementsNode (location: (1,6)-(1,10))
                        │   ├── flags: ∅
                        │   └── body: (length: 1)
                        │       └── @ CallNode (location: (1,6)-(1,10))
                        │           ├── flags: newline, variable_call, ignore_visibility
                        │           ├── receiver: ∅
                        │           ├── call_operator_loc: ∅
                        │           ├── name: :meth
                        │           ├── message_loc: (1,6)-(1,10) = "meth"
                        │           ├── opening_loc: ∅
                        │           ├── arguments: ∅
                        │           ├── closing_loc: ∅
                        │           └── block: ∅
                        ├── rescue_clause: ∅
                        ├── else_clause: ∅
                        ├── ensure_clause: ∅
                        └── end_keyword_loc: (1,11)-(1,14) = "end"
