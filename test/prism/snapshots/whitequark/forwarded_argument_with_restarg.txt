@ ProgramNode (location: (1,0)-(1,43))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,43))
    └── body: (length: 1)
        └── @ DefNode (location: (1,0)-(1,43))
            ├── name: :foo
            ├── name_loc: (1,4)-(1,7) = "foo"
            ├── receiver: ∅
            ├── parameters:
            │   @ ParametersNode (location: (1,8)-(1,19))
            │   ├── requireds: (length: 1)
            │   │   └── @ RequiredParameterNode (location: (1,8)-(1,16))
            │   │       └── name: :argument
            │   ├── optionals: (length: 0)
            │   ├── rest:
            │   │   @ RestParameterNode (location: (1,18)-(1,19))
            │   │   ├── name: ∅
            │   │   ├── name_loc: ∅
            │   │   └── operator_loc: (1,18)-(1,19) = "*"
            │   ├── posts: (length: 0)
            │   ├── keywords: (length: 0)
            │   ├── keyword_rest: ∅
            │   └── block: ∅
            ├── body:
            │   @ StatementsNode (location: (1,22)-(1,38))
            │   └── body: (length: 1)
            │       └── @ CallNode (location: (1,22)-(1,38))
            │           ├── flags: ∅
            │           ├── receiver: ∅
            │           ├── call_operator_loc: ∅
            │           ├── name: :bar
            │           ├── message_loc: (1,22)-(1,25) = "bar"
            │           ├── opening_loc: (1,25)-(1,26) = "("
            │           ├── arguments:
            │           │   @ ArgumentsNode (location: (1,26)-(1,37))
            │           │   ├── flags: ∅
            │           │   └── arguments: (length: 2)
            │           │       ├── @ LocalVariableReadNode (location: (1,26)-(1,34))
            │           │       │   ├── name: :argument
            │           │       │   └── depth: 0
            │           │       └── @ SplatNode (location: (1,36)-(1,37))
            │           │           ├── operator_loc: (1,36)-(1,37) = "*"
            │           │           └── expression: ∅
            │           ├── closing_loc: (1,37)-(1,38) = ")"
            │           └── block: ∅
            ├── locals: [:argument, :*]
            ├── locals_body_index: 2
            ├── def_keyword_loc: (1,0)-(1,3) = "def"
            ├── operator_loc: ∅
            ├── lparen_loc: (1,7)-(1,8) = "("
            ├── rparen_loc: (1,19)-(1,20) = ")"
            ├── equal_loc: ∅
            └── end_keyword_loc: (1,40)-(1,43) = "end"
