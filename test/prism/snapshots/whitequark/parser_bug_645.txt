@ ProgramNode (location: (1,0)-(1,14))
├── flags: ∅
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,14))
    ├── flags: ∅
    └── body: (length: 1)
        └── @ LambdaNode (location: (1,0)-(1,14))
            ├── flags: newline
            ├── locals: [:arg]
            ├── operator_loc: (1,0)-(1,2) = "->"
            ├── opening_loc: (1,12)-(1,13) = "{"
            ├── closing_loc: (1,13)-(1,14) = "}"
            ├── parameters:
            │   @ BlockParametersNode (location: (1,3)-(1,11))
            │   ├── flags: ∅
            │   ├── parameters:
            │   │   @ ParametersNode (location: (1,4)-(1,10))
            │   │   ├── flags: ∅
            │   │   ├── requireds: (length: 0)
            │   │   ├── optionals: (length: 1)
            │   │   │   └── @ OptionalParameterNode (location: (1,4)-(1,10))
            │   │   │       ├── flags: ∅
            │   │   │       ├── name: :arg
            │   │   │       ├── name_loc: (1,4)-(1,7) = "arg"
            │   │   │       ├── operator_loc: (1,7)-(1,8) = "="
            │   │   │       └── value:
            │   │   │           @ HashNode (location: (1,8)-(1,10))
            │   │   │           ├── flags: static_literal
            │   │   │           ├── opening_loc: (1,8)-(1,9) = "{"
            │   │   │           ├── elements: (length: 0)
            │   │   │           └── closing_loc: (1,9)-(1,10) = "}"
            │   │   ├── rest: ∅
            │   │   ├── posts: (length: 0)
            │   │   ├── keywords: (length: 0)
            │   │   ├── keyword_rest: ∅
            │   │   └── block: ∅
            │   ├── locals: (length: 0)
            │   ├── opening_loc: (1,3)-(1,4) = "("
            │   └── closing_loc: (1,10)-(1,11) = ")"
            └── body: ∅
