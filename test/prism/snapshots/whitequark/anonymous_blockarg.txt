@ ProgramNode (location: (1,0)-(1,23))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,23))
    └── body: (length: 1)
        └── @ DefNode (location: (1,0)-(1,23))
            ├── name: :foo
            ├── name_loc: (1,4)-(1,7) = "foo"
            ├── receiver: ∅
            ├── parameters:
            │   @ ParametersNode (location: (1,8)-(1,9))
            │   ├── requireds: (length: 0)
            │   ├── optionals: (length: 0)
            │   ├── rest: ∅
            │   ├── posts: (length: 0)
            │   ├── keywords: (length: 0)
            │   ├── keyword_rest: ∅
            │   └── block:
            │       @ BlockParameterNode (location: (1,8)-(1,9))
            │       ├── name: ∅
            │       ├── name_loc: ∅
            │       └── operator_loc: (1,8)-(1,9) = "&"
            ├── body:
            │   @ StatementsNode (location: (1,12)-(1,17))
            │   └── body: (length: 1)
            │       └── @ CallNode (location: (1,12)-(1,17))
            │           ├── flags: ∅
            │           ├── receiver: ∅
            │           ├── call_operator_loc: ∅
            │           ├── name: :bar
            │           ├── message_loc: (1,12)-(1,15) = "bar"
            │           ├── opening_loc: (1,15)-(1,16) = "("
            │           ├── arguments: ∅
            │           ├── closing_loc: (1,17)-(1,18) = ")"
            │           └── block:
            │               @ BlockArgumentNode (location: (1,16)-(1,17))
            │               ├── expression: ∅
            │               └── operator_loc: (1,16)-(1,17) = "&"
            ├── locals: [:&]
            ├── locals_body_index: 1
            ├── def_keyword_loc: (1,0)-(1,3) = "def"
            ├── operator_loc: ∅
            ├── lparen_loc: (1,7)-(1,8) = "("
            ├── rparen_loc: (1,9)-(1,10) = ")"
            ├── equal_loc: ∅
            └── end_keyword_loc: (1,20)-(1,23) = "end"
