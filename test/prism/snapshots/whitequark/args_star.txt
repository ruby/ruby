@ ProgramNode (location: (1,0)-(3,14))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(3,14))
    └── body: (length: 2)
        ├── @ CallNode (location: (1,0)-(1,9))
        │   ├── flags: ∅
        │   ├── receiver: ∅
        │   ├── call_operator_loc: ∅
        │   ├── name: :fun
        │   ├── message_loc: (1,0)-(1,3) = "fun"
        │   ├── opening_loc: (1,3)-(1,4) = "("
        │   ├── arguments:
        │   │   @ ArgumentsNode (location: (1,4)-(1,8))
        │   │   ├── flags: ∅
        │   │   └── arguments: (length: 1)
        │   │       └── @ SplatNode (location: (1,4)-(1,8))
        │   │           ├── operator_loc: (1,4)-(1,5) = "*"
        │   │           └── expression:
        │   │               @ CallNode (location: (1,5)-(1,8))
        │   │               ├── flags: variable_call
        │   │               ├── receiver: ∅
        │   │               ├── call_operator_loc: ∅
        │   │               ├── name: :bar
        │   │               ├── message_loc: (1,5)-(1,8) = "bar"
        │   │               ├── opening_loc: ∅
        │   │               ├── arguments: ∅
        │   │               ├── closing_loc: ∅
        │   │               └── block: ∅
        │   ├── closing_loc: (1,8)-(1,9) = ")"
        │   └── block: ∅
        └── @ CallNode (location: (3,0)-(3,14))
            ├── flags: ∅
            ├── receiver: ∅
            ├── call_operator_loc: ∅
            ├── name: :fun
            ├── message_loc: (3,0)-(3,3) = "fun"
            ├── opening_loc: (3,3)-(3,4) = "("
            ├── arguments:
            │   @ ArgumentsNode (location: (3,4)-(3,8))
            │   ├── flags: ∅
            │   └── arguments: (length: 1)
            │       └── @ SplatNode (location: (3,4)-(3,8))
            │           ├── operator_loc: (3,4)-(3,5) = "*"
            │           └── expression:
            │               @ CallNode (location: (3,5)-(3,8))
            │               ├── flags: variable_call
            │               ├── receiver: ∅
            │               ├── call_operator_loc: ∅
            │               ├── name: :bar
            │               ├── message_loc: (3,5)-(3,8) = "bar"
            │               ├── opening_loc: ∅
            │               ├── arguments: ∅
            │               ├── closing_loc: ∅
            │               └── block: ∅
            ├── closing_loc: (3,14)-(3,15) = ")"
            └── block:
                @ BlockArgumentNode (location: (3,10)-(3,14))
                ├── expression:
                │   @ CallNode (location: (3,11)-(3,14))
                │   ├── flags: variable_call
                │   ├── receiver: ∅
                │   ├── call_operator_loc: ∅
                │   ├── name: :baz
                │   ├── message_loc: (3,11)-(3,14) = "baz"
                │   ├── opening_loc: ∅
                │   ├── arguments: ∅
                │   ├── closing_loc: ∅
                │   └── block: ∅
                └── operator_loc: (3,10)-(3,11) = "&"
