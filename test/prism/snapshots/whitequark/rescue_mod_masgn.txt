@ ProgramNode (location: (1,0)-(1,29))
├── locals: [:foo, :bar]
└── statements:
    @ StatementsNode (location: (1,0)-(1,29))
    └── body: (length: 1)
        └── @ MultiWriteNode (location: (1,0)-(1,29))
            ├── lefts: (length: 2)
            │   ├── @ LocalVariableTargetNode (location: (1,0)-(1,3))
            │   │   ├── name: :foo
            │   │   └── depth: 0
            │   └── @ LocalVariableTargetNode (location: (1,5)-(1,8))
            │       ├── name: :bar
            │       └── depth: 0
            ├── rest: ∅
            ├── rights: (length: 0)
            ├── lparen_loc: ∅
            ├── rparen_loc: ∅
            ├── operator_loc: (1,9)-(1,10) = "="
            └── value:
                @ RescueModifierNode (location: (1,11)-(1,29))
                ├── expression:
                │   @ CallNode (location: (1,11)-(1,15))
                │   ├── flags: variable_call
                │   ├── receiver: ∅
                │   ├── call_operator_loc: ∅
                │   ├── name: :meth
                │   ├── message_loc: (1,11)-(1,15) = "meth"
                │   ├── opening_loc: ∅
                │   ├── arguments: ∅
                │   ├── closing_loc: ∅
                │   └── block: ∅
                ├── keyword_loc: (1,16)-(1,22) = "rescue"
                └── rescue_expression:
                    @ ArrayNode (location: (1,23)-(1,29))
                    ├── flags: ∅
                    ├── elements: (length: 2)
                    │   ├── @ IntegerNode (location: (1,24)-(1,25))
                    │   │   └── flags: decimal
                    │   └── @ IntegerNode (location: (1,27)-(1,28))
                    │       └── flags: decimal
                    ├── opening_loc: (1,23)-(1,24) = "["
                    └── closing_loc: (1,28)-(1,29) = "]"
