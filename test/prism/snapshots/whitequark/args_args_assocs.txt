@ ProgramNode (location: (1,0)-(3,24))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(3,24))
    └── body: (length: 2)
        ├── @ CallNode (location: (1,0)-(1,19))
        │   ├── flags: ∅
        │   ├── receiver: ∅
        │   ├── call_operator_loc: ∅
        │   ├── name: :fun
        │   ├── message_loc: (1,0)-(1,3) = "fun"
        │   ├── opening_loc: (1,3)-(1,4) = "("
        │   ├── arguments:
        │   │   @ ArgumentsNode (location: (1,4)-(1,18))
        │   │   ├── flags: ∅
        │   │   └── arguments: (length: 2)
        │   │       ├── @ CallNode (location: (1,4)-(1,7))
        │   │       │   ├── flags: variable_call
        │   │       │   ├── receiver: ∅
        │   │       │   ├── call_operator_loc: ∅
        │   │       │   ├── name: :foo
        │   │       │   ├── message_loc: (1,4)-(1,7) = "foo"
        │   │       │   ├── opening_loc: ∅
        │   │       │   ├── arguments: ∅
        │   │       │   ├── closing_loc: ∅
        │   │       │   └── block: ∅
        │   │       └── @ KeywordHashNode (location: (1,9)-(1,18))
        │   │           └── elements: (length: 1)
        │   │               └── @ AssocNode (location: (1,9)-(1,18))
        │   │                   ├── key:
        │   │                   │   @ SymbolNode (location: (1,9)-(1,13))
        │   │                   │   ├── flags: ∅
        │   │                   │   ├── opening_loc: (1,9)-(1,10) = ":"
        │   │                   │   ├── value_loc: (1,10)-(1,13) = "foo"
        │   │                   │   ├── closing_loc: ∅
        │   │                   │   └── unescaped: "foo"
        │   │                   ├── value:
        │   │                   │   @ IntegerNode (location: (1,17)-(1,18))
        │   │                   │   └── flags: decimal
        │   │                   └── operator_loc: (1,14)-(1,16) = "=>"
        │   ├── closing_loc: (1,18)-(1,19) = ")"
        │   └── block: ∅
        └── @ CallNode (location: (3,0)-(3,24))
            ├── flags: ∅
            ├── receiver: ∅
            ├── call_operator_loc: ∅
            ├── name: :fun
            ├── message_loc: (3,0)-(3,3) = "fun"
            ├── opening_loc: (3,3)-(3,4) = "("
            ├── arguments:
            │   @ ArgumentsNode (location: (3,4)-(3,18))
            │   ├── flags: ∅
            │   └── arguments: (length: 2)
            │       ├── @ CallNode (location: (3,4)-(3,7))
            │       │   ├── flags: variable_call
            │       │   ├── receiver: ∅
            │       │   ├── call_operator_loc: ∅
            │       │   ├── name: :foo
            │       │   ├── message_loc: (3,4)-(3,7) = "foo"
            │       │   ├── opening_loc: ∅
            │       │   ├── arguments: ∅
            │       │   ├── closing_loc: ∅
            │       │   └── block: ∅
            │       └── @ KeywordHashNode (location: (3,9)-(3,18))
            │           └── elements: (length: 1)
            │               └── @ AssocNode (location: (3,9)-(3,18))
            │                   ├── key:
            │                   │   @ SymbolNode (location: (3,9)-(3,13))
            │                   │   ├── flags: ∅
            │                   │   ├── opening_loc: (3,9)-(3,10) = ":"
            │                   │   ├── value_loc: (3,10)-(3,13) = "foo"
            │                   │   ├── closing_loc: ∅
            │                   │   └── unescaped: "foo"
            │                   ├── value:
            │                   │   @ IntegerNode (location: (3,17)-(3,18))
            │                   │   └── flags: decimal
            │                   └── operator_loc: (3,14)-(3,16) = "=>"
            ├── closing_loc: (3,24)-(3,25) = ")"
            └── block:
                @ BlockArgumentNode (location: (3,20)-(3,24))
                ├── expression:
                │   @ CallNode (location: (3,21)-(3,24))
                │   ├── flags: variable_call
                │   ├── receiver: ∅
                │   ├── call_operator_loc: ∅
                │   ├── name: :baz
                │   ├── message_loc: (3,21)-(3,24) = "baz"
                │   ├── opening_loc: ∅
                │   ├── arguments: ∅
                │   ├── closing_loc: ∅
                │   └── block: ∅
                └── operator_loc: (3,20)-(3,21) = "&"
