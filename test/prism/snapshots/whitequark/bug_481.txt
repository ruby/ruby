@ ProgramNode (location: (1,0)-(1,28))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,28))
    └── body: (length: 2)
        ├── @ CallNode (location: (1,0)-(1,14))
        │   ├── flags: ∅
        │   ├── receiver: ∅
        │   ├── call_operator_loc: ∅
        │   ├── name: :m
        │   ├── message_loc: (1,0)-(1,1) = "m"
        │   ├── opening_loc: ∅
        │   ├── arguments:
        │   │   @ ArgumentsNode (location: (1,2)-(1,14))
        │   │   ├── flags: ∅
        │   │   └── arguments: (length: 1)
        │   │       └── @ DefNode (location: (1,2)-(1,14))
        │   │           ├── name: :x
        │   │           ├── name_loc: (1,6)-(1,7) = "x"
        │   │           ├── receiver: ∅
        │   │           ├── parameters: ∅
        │   │           ├── body: ∅
        │   │           ├── locals: []
        │   │           ├── locals_body_index: 0
        │   │           ├── def_keyword_loc: (1,2)-(1,5) = "def"
        │   │           ├── operator_loc: ∅
        │   │           ├── lparen_loc: (1,7)-(1,8) = "("
        │   │           ├── rparen_loc: (1,8)-(1,9) = ")"
        │   │           ├── equal_loc: ∅
        │   │           └── end_keyword_loc: (1,11)-(1,14) = "end"
        │   ├── closing_loc: ∅
        │   └── block: ∅
        └── @ CallNode (location: (1,16)-(1,28))
            ├── flags: ∅
            ├── receiver:
            │   @ IntegerNode (location: (1,16)-(1,17))
            │   └── flags: decimal
            ├── call_operator_loc: (1,17)-(1,18) = "."
            ├── name: :tap
            ├── message_loc: (1,18)-(1,21) = "tap"
            ├── opening_loc: ∅
            ├── arguments: ∅
            ├── closing_loc: ∅
            └── block:
                @ BlockNode (location: (1,22)-(1,28))
                ├── locals: []
                ├── locals_body_index: 0
                ├── parameters: ∅
                ├── body: ∅
                ├── opening_loc: (1,22)-(1,24) = "do"
                └── closing_loc: (1,25)-(1,28) = "end"
