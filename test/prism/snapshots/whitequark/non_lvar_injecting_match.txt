@ ProgramNode (location: (1,0)-(1,28))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,28))
    └── body: (length: 1)
        └── @ CallNode (location: (1,0)-(1,28))
            ├── flags: ∅
            ├── receiver:
            │   @ InterpolatedRegularExpressionNode (location: (1,0)-(1,19))
            │   ├── flags: ∅
            │   ├── opening_loc: (1,0)-(1,1) = "/"
            │   ├── parts: (length: 2)
            │   │   ├── @ EmbeddedStatementsNode (location: (1,1)-(1,5))
            │   │   │   ├── opening_loc: (1,1)-(1,3) = "\#{"
            │   │   │   ├── statements:
            │   │   │   │   @ StatementsNode (location: (1,3)-(1,4))
            │   │   │   │   └── body: (length: 1)
            │   │   │   │       └── @ IntegerNode (location: (1,3)-(1,4))
            │   │   │   │           └── flags: decimal
            │   │   │   └── closing_loc: (1,4)-(1,5) = "}"
            │   │   └── @ StringNode (location: (1,5)-(1,18))
            │   │       ├── flags: ∅
            │   │       ├── opening_loc: ∅
            │   │       ├── content_loc: (1,5)-(1,18) = "(?<match>bar)"
            │   │       ├── closing_loc: ∅
            │   │       └── unescaped: "(?<match>bar)"
            │   └── closing_loc: (1,18)-(1,19) = "/"
            ├── call_operator_loc: ∅
            ├── name: :=~
            ├── message_loc: (1,20)-(1,22) = "=~"
            ├── opening_loc: ∅
            ├── arguments:
            │   @ ArgumentsNode (location: (1,23)-(1,28))
            │   ├── flags: ∅
            │   └── arguments: (length: 1)
            │       └── @ StringNode (location: (1,23)-(1,28))
            │           ├── flags: ∅
            │           ├── opening_loc: (1,23)-(1,24) = "'"
            │           ├── content_loc: (1,24)-(1,27) = "bar"
            │           ├── closing_loc: (1,27)-(1,28) = "'"
            │           └── unescaped: "bar"
            ├── closing_loc: ∅
            └── block: ∅
