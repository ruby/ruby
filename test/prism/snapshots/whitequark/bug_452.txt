@ ProgramNode (location: (1,0)-(1,37))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,37))
    └── body: (length: 2)
        ├── @ CallNode (location: (1,0)-(1,21))
        │   ├── flags: ∅
        │   ├── receiver: ∅
        │   ├── call_operator_loc: ∅
        │   ├── name: :td
        │   ├── message_loc: (1,0)-(1,2) = "td"
        │   ├── opening_loc: ∅
        │   ├── arguments:
        │   │   @ ArgumentsNode (location: (1,3)-(1,21))
        │   │   ├── flags: ∅
        │   │   └── arguments: (length: 1)
        │   │       └── @ CallNode (location: (1,3)-(1,21))
        │   │           ├── flags: ∅
        │   │           ├── receiver:
        │   │           │   @ ParenthesesNode (location: (1,3)-(1,10))
        │   │           │   ├── body:
        │   │           │   │   @ StatementsNode (location: (1,4)-(1,9))
        │   │           │   │   └── body: (length: 1)
        │   │           │   │       └── @ IntegerNode (location: (1,4)-(1,9))
        │   │           │   │           └── flags: decimal
        │   │           │   ├── opening_loc: (1,3)-(1,4) = "("
        │   │           │   └── closing_loc: (1,9)-(1,10) = ")"
        │   │           ├── call_operator_loc: (1,10)-(1,11) = "."
        │   │           ├── name: :toString
        │   │           ├── message_loc: (1,11)-(1,19) = "toString"
        │   │           ├── opening_loc: (1,19)-(1,20) = "("
        │   │           ├── arguments: ∅
        │   │           ├── closing_loc: (1,20)-(1,21) = ")"
        │   │           └── block: ∅
        │   ├── closing_loc: ∅
        │   └── block: ∅
        └── @ CallNode (location: (1,23)-(1,37))
            ├── flags: ∅
            ├── receiver:
            │   @ CallNode (location: (1,23)-(1,25))
            │   ├── flags: variable_call
            │   ├── receiver: ∅
            │   ├── call_operator_loc: ∅
            │   ├── name: :td
            │   ├── message_loc: (1,23)-(1,25) = "td"
            │   ├── opening_loc: ∅
            │   ├── arguments: ∅
            │   ├── closing_loc: ∅
            │   └── block: ∅
            ├── call_operator_loc: (1,25)-(1,26) = "."
            ├── name: :num
            ├── message_loc: (1,26)-(1,29) = "num"
            ├── opening_loc: ∅
            ├── arguments: ∅
            ├── closing_loc: ∅
            └── block:
                @ BlockNode (location: (1,30)-(1,37))
                ├── locals: []
                ├── locals_body_index: 0
                ├── parameters: ∅
                ├── body: ∅
                ├── opening_loc: (1,30)-(1,32) = "do"
                └── closing_loc: (1,34)-(1,37) = "end"
