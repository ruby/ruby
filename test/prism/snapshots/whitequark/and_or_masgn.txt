@ ProgramNode (location: (1,0)-(3,19))
├── locals: [:a, :b]
└── statements:
    @ StatementsNode (location: (1,0)-(3,19))
    └── body: (length: 2)
        ├── @ AndNode (location: (1,0)-(1,19))
        │   ├── left:
        │   │   @ CallNode (location: (1,0)-(1,3))
        │   │   ├── flags: variable_call
        │   │   ├── receiver: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :foo
        │   │   ├── message_loc: (1,0)-(1,3) = "foo"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   ├── right:
        │   │   @ ParenthesesNode (location: (1,7)-(1,19))
        │   │   ├── body:
        │   │   │   @ StatementsNode (location: (1,8)-(1,18))
        │   │   │   └── body: (length: 1)
        │   │   │       └── @ MultiWriteNode (location: (1,8)-(1,18))
        │   │   │           ├── lefts: (length: 2)
        │   │   │           │   ├── @ LocalVariableTargetNode (location: (1,8)-(1,9))
        │   │   │           │   │   ├── name: :a
        │   │   │           │   │   └── depth: 0
        │   │   │           │   └── @ LocalVariableTargetNode (location: (1,11)-(1,12))
        │   │   │           │       ├── name: :b
        │   │   │           │       └── depth: 0
        │   │   │           ├── rest: ∅
        │   │   │           ├── rights: (length: 0)
        │   │   │           ├── lparen_loc: ∅
        │   │   │           ├── rparen_loc: ∅
        │   │   │           ├── operator_loc: (1,13)-(1,14) = "="
        │   │   │           └── value:
        │   │   │               @ CallNode (location: (1,15)-(1,18))
        │   │   │               ├── flags: variable_call
        │   │   │               ├── receiver: ∅
        │   │   │               ├── call_operator_loc: ∅
        │   │   │               ├── name: :bar
        │   │   │               ├── message_loc: (1,15)-(1,18) = "bar"
        │   │   │               ├── opening_loc: ∅
        │   │   │               ├── arguments: ∅
        │   │   │               ├── closing_loc: ∅
        │   │   │               └── block: ∅
        │   │   ├── opening_loc: (1,7)-(1,8) = "("
        │   │   └── closing_loc: (1,18)-(1,19) = ")"
        │   └── operator_loc: (1,4)-(1,6) = "&&"
        └── @ OrNode (location: (3,0)-(3,19))
            ├── left:
            │   @ CallNode (location: (3,0)-(3,3))
            │   ├── flags: variable_call
            │   ├── receiver: ∅
            │   ├── call_operator_loc: ∅
            │   ├── name: :foo
            │   ├── message_loc: (3,0)-(3,3) = "foo"
            │   ├── opening_loc: ∅
            │   ├── arguments: ∅
            │   ├── closing_loc: ∅
            │   └── block: ∅
            ├── right:
            │   @ ParenthesesNode (location: (3,7)-(3,19))
            │   ├── body:
            │   │   @ StatementsNode (location: (3,8)-(3,18))
            │   │   └── body: (length: 1)
            │   │       └── @ MultiWriteNode (location: (3,8)-(3,18))
            │   │           ├── lefts: (length: 2)
            │   │           │   ├── @ LocalVariableTargetNode (location: (3,8)-(3,9))
            │   │           │   │   ├── name: :a
            │   │           │   │   └── depth: 0
            │   │           │   └── @ LocalVariableTargetNode (location: (3,11)-(3,12))
            │   │           │       ├── name: :b
            │   │           │       └── depth: 0
            │   │           ├── rest: ∅
            │   │           ├── rights: (length: 0)
            │   │           ├── lparen_loc: ∅
            │   │           ├── rparen_loc: ∅
            │   │           ├── operator_loc: (3,13)-(3,14) = "="
            │   │           └── value:
            │   │               @ CallNode (location: (3,15)-(3,18))
            │   │               ├── flags: variable_call
            │   │               ├── receiver: ∅
            │   │               ├── call_operator_loc: ∅
            │   │               ├── name: :bar
            │   │               ├── message_loc: (3,15)-(3,18) = "bar"
            │   │               ├── opening_loc: ∅
            │   │               ├── arguments: ∅
            │   │               ├── closing_loc: ∅
            │   │               └── block: ∅
            │   ├── opening_loc: (3,7)-(3,8) = "("
            │   └── closing_loc: (3,18)-(3,19) = ")"
            └── operator_loc: (3,4)-(3,6) = "||"
