@ ProgramNode (location: (1,0)-(3,35))
├── locals: [:ex]
└── statements:
    @ StatementsNode (location: (1,0)-(3,35))
    └── body: (length: 2)
        ├── @ BeginNode (location: (1,0)-(1,36))
        │   ├── begin_keyword_loc: (1,0)-(1,5) = "begin"
        │   ├── statements:
        │   │   @ StatementsNode (location: (1,7)-(1,11))
        │   │   └── body: (length: 1)
        │   │       └── @ CallNode (location: (1,7)-(1,11))
        │   │           ├── receiver: ∅
        │   │           ├── call_operator_loc: ∅
        │   │           ├── message_loc: (1,7)-(1,11) = "meth"
        │   │           ├── opening_loc: ∅
        │   │           ├── arguments: ∅
        │   │           ├── closing_loc: ∅
        │   │           ├── block: ∅
        │   │           ├── flags: variable_call
        │   │           └── name: :meth
        │   ├── rescue_clause:
        │   │   @ RescueNode (location: (1,13)-(1,31))
        │   │   ├── keyword_loc: (1,13)-(1,19) = "rescue"
        │   │   ├── exceptions: (length: 0)
        │   │   ├── operator_loc: (1,20)-(1,22) = "=>"
        │   │   ├── reference:
        │   │   │   @ InstanceVariableTargetNode (location: (1,23)-(1,26))
        │   │   │   └── name: :@ex
        │   │   ├── statements:
        │   │   │   @ StatementsNode (location: (1,28)-(1,31))
        │   │   │   └── body: (length: 1)
        │   │   │       └── @ CallNode (location: (1,28)-(1,31))
        │   │   │           ├── receiver: ∅
        │   │   │           ├── call_operator_loc: ∅
        │   │   │           ├── message_loc: (1,28)-(1,31) = "bar"
        │   │   │           ├── opening_loc: ∅
        │   │   │           ├── arguments: ∅
        │   │   │           ├── closing_loc: ∅
        │   │   │           ├── block: ∅
        │   │   │           ├── flags: variable_call
        │   │   │           └── name: :bar
        │   │   └── consequent: ∅
        │   ├── else_clause: ∅
        │   ├── ensure_clause: ∅
        │   └── end_keyword_loc: (1,33)-(1,36) = "end"
        └── @ BeginNode (location: (3,0)-(3,35))
            ├── begin_keyword_loc: (3,0)-(3,5) = "begin"
            ├── statements:
            │   @ StatementsNode (location: (3,7)-(3,11))
            │   └── body: (length: 1)
            │       └── @ CallNode (location: (3,7)-(3,11))
            │           ├── receiver: ∅
            │           ├── call_operator_loc: ∅
            │           ├── message_loc: (3,7)-(3,11) = "meth"
            │           ├── opening_loc: ∅
            │           ├── arguments: ∅
            │           ├── closing_loc: ∅
            │           ├── block: ∅
            │           ├── flags: variable_call
            │           └── name: :meth
            ├── rescue_clause:
            │   @ RescueNode (location: (3,13)-(3,30))
            │   ├── keyword_loc: (3,13)-(3,19) = "rescue"
            │   ├── exceptions: (length: 0)
            │   ├── operator_loc: (3,20)-(3,22) = "=>"
            │   ├── reference:
            │   │   @ LocalVariableTargetNode (location: (3,23)-(3,25))
            │   │   ├── name: :ex
            │   │   └── depth: 0
            │   ├── statements:
            │   │   @ StatementsNode (location: (3,27)-(3,30))
            │   │   └── body: (length: 1)
            │   │       └── @ CallNode (location: (3,27)-(3,30))
            │   │           ├── receiver: ∅
            │   │           ├── call_operator_loc: ∅
            │   │           ├── message_loc: (3,27)-(3,30) = "bar"
            │   │           ├── opening_loc: ∅
            │   │           ├── arguments: ∅
            │   │           ├── closing_loc: ∅
            │   │           ├── block: ∅
            │   │           ├── flags: variable_call
            │   │           └── name: :bar
            │   └── consequent: ∅
            ├── else_clause: ∅
            ├── ensure_clause: ∅
            └── end_keyword_loc: (3,32)-(3,35) = "end"
