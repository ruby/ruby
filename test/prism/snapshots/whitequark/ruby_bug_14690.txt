@ ProgramNode (location: (1,0)-(1,23))
├── flags: ∅
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,23))
    ├── flags: ∅
    └── body: (length: 1)
        └── @ CallNode (location: (1,0)-(1,23))
            ├── flags: newline, ignore_visibility
            ├── receiver: ∅
            ├── call_operator_loc: ∅
            ├── name: :let
            ├── message_loc: (1,0)-(1,3) = "let"
            ├── opening_loc: ∅
            ├── arguments:
            │   @ ArgumentsNode (location: (1,4)-(1,6))
            │   ├── flags: ∅
            │   └── arguments: (length: 1)
            │       └── @ ParenthesesNode (location: (1,4)-(1,6))
            │           ├── flags: ∅
            │           ├── body: ∅
            │           ├── opening_loc: (1,4)-(1,5) = "("
            │           └── closing_loc: (1,5)-(1,6) = ")"
            ├── closing_loc: ∅
            └── block:
                @ BlockNode (location: (1,7)-(1,23))
                ├── flags: ∅
                ├── locals: []
                ├── parameters: ∅
                ├── body:
                │   @ StatementsNode (location: (1,9)-(1,21))
                │   ├── flags: ∅
                │   └── body: (length: 1)
                │       └── @ CallNode (location: (1,9)-(1,21))
                │           ├── flags: newline, ignore_visibility
                │           ├── receiver: ∅
                │           ├── call_operator_loc: ∅
                │           ├── name: :m
                │           ├── message_loc: (1,9)-(1,10) = "m"
                │           ├── opening_loc: (1,10)-(1,11) = "("
                │           ├── arguments:
                │           │   @ ArgumentsNode (location: (1,11)-(1,12))
                │           │   ├── flags: ∅
                │           │   └── arguments: (length: 1)
                │           │       └── @ CallNode (location: (1,11)-(1,12))
                │           │           ├── flags: variable_call, ignore_visibility
                │           │           ├── receiver: ∅
                │           │           ├── call_operator_loc: ∅
                │           │           ├── name: :a
                │           │           ├── message_loc: (1,11)-(1,12) = "a"
                │           │           ├── opening_loc: ∅
                │           │           ├── arguments: ∅
                │           │           ├── closing_loc: ∅
                │           │           └── block: ∅
                │           ├── closing_loc: (1,12)-(1,13) = ")"
                │           └── block:
                │               @ BlockNode (location: (1,14)-(1,21))
                │               ├── flags: ∅
                │               ├── locals: []
                │               ├── parameters: ∅
                │               ├── body: ∅
                │               ├── opening_loc: (1,14)-(1,16) = "do"
                │               └── closing_loc: (1,18)-(1,21) = "end"
                ├── opening_loc: (1,7)-(1,8) = "{"
                └── closing_loc: (1,22)-(1,23) = "}"
