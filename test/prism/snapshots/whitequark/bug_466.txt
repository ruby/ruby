@ ProgramNode (location: (1,0)-(1,27))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,27))
    └── body: (length: 1)
        └── @ CallNode (location: (1,0)-(1,27))
            ├── flags: ∅
            ├── receiver: ∅
            ├── call_operator_loc: ∅
            ├── name: :foo
            ├── message_loc: (1,0)-(1,3) = "foo"
            ├── opening_loc: ∅
            ├── arguments:
            │   @ ArgumentsNode (location: (1,4)-(1,19))
            │   ├── flags: ∅
            │   └── arguments: (length: 1)
            │       └── @ InterpolatedStringNode (location: (1,4)-(1,19))
            │           ├── opening_loc: (1,4)-(1,5) = "\""
            │           ├── parts: (length: 1)
            │           │   └── @ EmbeddedStatementsNode (location: (1,5)-(1,18))
            │           │       ├── opening_loc: (1,5)-(1,7) = "\#{"
            │           │       ├── statements:
            │           │       │   @ StatementsNode (location: (1,7)-(1,17))
            │           │       │   └── body: (length: 1)
            │           │       │       └── @ CallNode (location: (1,7)-(1,17))
            │           │       │           ├── flags: ∅
            │           │       │           ├── receiver:
            │           │       │           │   @ ParenthesesNode (location: (1,7)-(1,12))
            │           │       │           │   ├── body:
            │           │       │           │   │   @ StatementsNode (location: (1,8)-(1,11))
            │           │       │           │   │   └── body: (length: 1)
            │           │       │           │   │       └── @ CallNode (location: (1,8)-(1,11))
            │           │       │           │   │           ├── flags: ∅
            │           │       │           │   │           ├── receiver:
            │           │       │           │   │           │   @ IntegerNode (location: (1,8)-(1,9))
            │           │       │           │   │           │   └── flags: decimal
            │           │       │           │   │           ├── call_operator_loc: ∅
            │           │       │           │   │           ├── name: :+
            │           │       │           │   │           ├── message_loc: (1,9)-(1,10) = "+"
            │           │       │           │   │           ├── opening_loc: ∅
            │           │       │           │   │           ├── arguments:
            │           │       │           │   │           │   @ ArgumentsNode (location: (1,10)-(1,11))
            │           │       │           │   │           │   ├── flags: ∅
            │           │       │           │   │           │   └── arguments: (length: 1)
            │           │       │           │   │           │       └── @ IntegerNode (location: (1,10)-(1,11))
            │           │       │           │   │           │           └── flags: decimal
            │           │       │           │   │           ├── closing_loc: ∅
            │           │       │           │   │           └── block: ∅
            │           │       │           │   ├── opening_loc: (1,7)-(1,8) = "("
            │           │       │           │   └── closing_loc: (1,11)-(1,12) = ")"
            │           │       │           ├── call_operator_loc: (1,12)-(1,13) = "."
            │           │       │           ├── name: :to_i
            │           │       │           ├── message_loc: (1,13)-(1,17) = "to_i"
            │           │       │           ├── opening_loc: ∅
            │           │       │           ├── arguments: ∅
            │           │       │           ├── closing_loc: ∅
            │           │       │           └── block: ∅
            │           │       └── closing_loc: (1,17)-(1,18) = "}"
            │           └── closing_loc: (1,18)-(1,19) = "\""
            ├── closing_loc: ∅
            └── block:
                @ BlockNode (location: (1,20)-(1,27))
                ├── locals: []
                ├── locals_body_index: 0
                ├── parameters: ∅
                ├── body: ∅
                ├── opening_loc: (1,20)-(1,22) = "do"
                └── closing_loc: (1,24)-(1,27) = "end"
