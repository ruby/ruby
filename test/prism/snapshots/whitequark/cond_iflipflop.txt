@ ProgramNode (location: (1,0)-(3,16))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(3,16))
    └── body: (length: 2)
        ├── @ CallNode (location: (1,0)-(1,11))
        │   ├── receiver:
        │   │   @ ParenthesesNode (location: (1,1)-(1,11))
        │   │   ├── body:
        │   │   │   @ StatementsNode (location: (1,2)-(1,10))
        │   │   │   └── body: (length: 1)
        │   │   │       └── @ FlipFlopNode (location: (1,2)-(1,10))
        │   │   │           ├── left:
        │   │   │           │   @ CallNode (location: (1,2)-(1,5))
        │   │   │           │   ├── receiver: ∅
        │   │   │           │   ├── call_operator_loc: ∅
        │   │   │           │   ├── message_loc: (1,2)-(1,5) = "foo"
        │   │   │           │   ├── opening_loc: ∅
        │   │   │           │   ├── arguments: ∅
        │   │   │           │   ├── closing_loc: ∅
        │   │   │           │   ├── block: ∅
        │   │   │           │   ├── flags: variable_call
        │   │   │           │   └── name: :foo
        │   │   │           ├── right:
        │   │   │           │   @ CallNode (location: (1,7)-(1,10))
        │   │   │           │   ├── receiver: ∅
        │   │   │           │   ├── call_operator_loc: ∅
        │   │   │           │   ├── message_loc: (1,7)-(1,10) = "bar"
        │   │   │           │   ├── opening_loc: ∅
        │   │   │           │   ├── arguments: ∅
        │   │   │           │   ├── closing_loc: ∅
        │   │   │           │   ├── block: ∅
        │   │   │           │   ├── flags: variable_call
        │   │   │           │   └── name: :bar
        │   │   │           ├── operator_loc: (1,5)-(1,7) = ".."
        │   │   │           └── flags: ∅
        │   │   ├── opening_loc: (1,1)-(1,2) = "("
        │   │   └── closing_loc: (1,10)-(1,11) = ")"
        │   ├── call_operator_loc: ∅
        │   ├── message_loc: (1,0)-(1,1) = "!"
        │   ├── opening_loc: ∅
        │   ├── arguments: ∅
        │   ├── closing_loc: ∅
        │   ├── block: ∅
        │   ├── flags: ∅
        │   └── name: :!
        └── @ IfNode (location: (3,0)-(3,16))
            ├── if_keyword_loc: (3,0)-(3,2) = "if"
            ├── predicate:
            │   @ FlipFlopNode (location: (3,3)-(3,11))
            │   ├── left:
            │   │   @ CallNode (location: (3,3)-(3,6))
            │   │   ├── receiver: ∅
            │   │   ├── call_operator_loc: ∅
            │   │   ├── message_loc: (3,3)-(3,6) = "foo"
            │   │   ├── opening_loc: ∅
            │   │   ├── arguments: ∅
            │   │   ├── closing_loc: ∅
            │   │   ├── block: ∅
            │   │   ├── flags: variable_call
            │   │   └── name: :foo
            │   ├── right:
            │   │   @ CallNode (location: (3,8)-(3,11))
            │   │   ├── receiver: ∅
            │   │   ├── call_operator_loc: ∅
            │   │   ├── message_loc: (3,8)-(3,11) = "bar"
            │   │   ├── opening_loc: ∅
            │   │   ├── arguments: ∅
            │   │   ├── closing_loc: ∅
            │   │   ├── block: ∅
            │   │   ├── flags: variable_call
            │   │   └── name: :bar
            │   ├── operator_loc: (3,6)-(3,8) = ".."
            │   └── flags: ∅
            ├── statements: ∅
            ├── consequent: ∅
            └── end_keyword_loc: (3,13)-(3,16) = "end"
