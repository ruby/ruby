@ ProgramNode (location: (1,0)-(11,8))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(11,8))
    └── body: (length: 6)
        ├── @ CallNode (location: (1,0)-(1,12))
        │   ├── flags: ignore_visibility
        │   ├── receiver: ∅
        │   ├── call_operator_loc: ∅
        │   ├── name: :tap
        │   ├── message_loc: (1,0)-(1,3) = "tap"
        │   ├── opening_loc: ∅
        │   ├── arguments: ∅
        │   ├── closing_loc: ∅
        │   └── block:
        │       @ BlockNode (location: (1,4)-(1,12))
        │       ├── locals: []
        │       ├── parameters: ∅
        │       ├── body:
        │       │   @ StatementsNode (location: (1,6)-(1,10))
        │       │   └── body: (length: 1)
        │       │       └── @ RedoNode (location: (1,6)-(1,10))
        │       ├── opening_loc: (1,4)-(1,5) = "{"
        │       └── closing_loc: (1,11)-(1,12) = "}"
        ├── @ BeginNode (location: (3,0)-(3,25))
        │   ├── begin_keyword_loc: (3,0)-(3,5) = "begin"
        │   ├── statements: ∅
        │   ├── rescue_clause:
        │   │   @ RescueNode (location: (3,7)-(3,20))
        │   │   ├── keyword_loc: (3,7)-(3,13) = "rescue"
        │   │   ├── exceptions: (length: 0)
        │   │   ├── operator_loc: ∅
        │   │   ├── reference: ∅
        │   │   ├── statements:
        │   │   │   @ StatementsNode (location: (3,15)-(3,20))
        │   │   │   └── body: (length: 1)
        │   │   │       └── @ RetryNode (location: (3,15)-(3,20))
        │   │   └── consequent: ∅
        │   ├── else_clause: ∅
        │   ├── ensure_clause: ∅
        │   └── end_keyword_loc: (3,22)-(3,25) = "end"
        ├── @ SelfNode (location: (5,0)-(5,4))
        ├── @ SourceEncodingNode (location: (7,0)-(7,12))
        ├── @ SourceFileNode (location: (9,0)-(9,8))
        │   ├── flags: ∅
        │   └── filepath: "keywords.txt"
        └── @ SourceLineNode (location: (11,0)-(11,8))
