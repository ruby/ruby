== disasm: #<ISeq:<compiled>@<compiled>:0 (0,0)-(6,10)>
0000 putself
0001 send                                   <calldata!mid:fun, argc:0>, block in <compiled>
0004 pop
0005 putself                                                          (   2)
0006 send                                   <calldata!mid:fun, argc:0>, block in <compiled>
0009 pop
0010 putself                                                          (   4)
0011 send                                   <calldata!mid:fun, argc:0>, block in <compiled>
0014 pop
0015 putself                                                          (   6)
0016 putobject_INT2FIX_1_                                             (   7)
0017 send                                   <calldata!mid:fun, argc:1>, block in <compiled>(   6)
0020 leave

== disasm: #<ISeq:block in <compiled>@<compiled>:0 (0,4)-(1,0)>
0000 putnil                                 [Bc]
0001 leave                                  [Br]

== disasm: #<ISeq:block in <compiled>@<compiled>:3 (3,0)-(3,0)>
0000 putnil                                                           (   2)[Bc]
0001 leave                                  [Br]

== disasm: #<ISeq:block in <compiled>@<compiled>:5 (5,0)-(5,0)>
0000 putnil                                                           (   4)[Bc]
0001 leave                                  [Br]

== disasm: #<ISeq:block in <compiled>@<compiled>:7 (7,0)-(7,0)>
0000 putnil                                                           (   6)[Bc]
0001 leave                                  [Br]
